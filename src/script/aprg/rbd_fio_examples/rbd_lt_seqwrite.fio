######################################################################
# Example test for the RBD engine.
#
# Runs a seq write test against a RBD via librbd
# latency target profiling.
# Fio will find the queue depth between 1..128
# that fits within the latency constraints of workload
#
# NOTE: Make sure you define the env vars for volume name ${RBD_NAME},
#       block size ${BLOCK_SIZE_KB}, the number of FIO jobs ${NUM_JOBS}
#       and the FIO iodepth ${IO_DEPTH}.
######################################################################
[global]
#logging
write_iops_log=${LOG_NAME}
write_bw_log=${LOG_NAME}
write_lat_log=${LOG_NAME}
ioengine=rbd
clientname=admin
pool=rbd
rbdname=${RBD_NAME}
bs=${BLOCK_SIZE_KB}
direct=1
rw=write
runtime=5m
time_based
group_reporting=1
#new_group
numjobs=${NUM_JOBS} # num concurrent clients/processes
ramp_time=30s

#Use posix threads instead of fork
thread=1
#When fio reaches this number, it will exit normally and report status.
#number_ios=

# Number of I/O units to keep in flight
iodepth=128
#iodepth=${IO_DEPTH}

# Set max acceptable latency to 10msec
latency_target=10000
# profile over a 5s window
latency_window=5000000
# 99.9% of IOs must be below the target
latency_percentile=99.9
random_generator=lfsr

[seqwrite]
#loops=3
max_latency=1s
