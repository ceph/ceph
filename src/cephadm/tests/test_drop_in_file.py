from .fixtures import (
    cephadm_fs,
    import_cephadm,
)


_cephadm = import_cephadm()

def test_systemd_drop_in_class(cephadm_fs):
    expected_drop_in = """# generated by cephadm
[Unit]
Wants=ceph-foo.host1.jrtqbh.service
Wants=ceph-foo.host1.jrtqbh:configwatch.service
Wants=ceph-foo.host1.jrtqbh:winbindd.service
Wants=ceph-foo.host1.jrtqbh:smbmetrics.service
"""

    dropin = _cephadm.systemd_unit.SystemdDropIn()
    assert not dropin
    dropin.add_section('Unit')
    assert not dropin
    for val in [
        'ceph-foo.host1.jrtqbh.service',
        'ceph-foo.host1.jrtqbh:configwatch.service',
        'ceph-foo.host1.jrtqbh:winbindd.service',
        'ceph-foo.host1.jrtqbh:smbmetrics.service'
    ]:
        dropin.add_setting(
            section='Unit',
            setting='Wants',
            value=val
        )
    assert dropin
    assert dropin.to_str() == expected_drop_in

    drop_in_dict = {
        'Unit': {
            'Wants': [
                'ceph-foo.host1.jrtqbh.service',
                'ceph-foo.host1.jrtqbh:configwatch.service',
                'ceph-foo.host1.jrtqbh:winbindd.service',
                'ceph-foo.host1.jrtqbh:smbmetrics.service'
            ]
        }
    }
    dropin2 = _cephadm.systemd_unit.SystemdDropIn.from_dict(drop_in_dict)
    assert dropin2
    assert dropin == dropin2

    expected_drop_in2 = """# generated by cephadm
[System]
SuccessExitStatus=1
"""

    # let's get to a drop in like aboving using with the old object
    # to test rm_setting and rm_section
    dropin2.add_section('System')
    dropin2.add_setting(
        section='System',
        setting='SuccessExitStatus',
        value='1',
    )
    assert 'SuccessExitStatus' in dropin2.to_str()
    dropin2.rm_setting(
        section='Unit',
        setting='Wants',
        value='ceph-foo.host1.jrtqbh:configwatch.service'
    )
    s = dropin2.to_str()
    print(s)
    assert 'configwatch' not in dropin2.to_str()
    assert '[Unit]' in dropin2.to_str()
    assert 'smbmetrics' in dropin2.to_str()
    dropin2.rm_section('Unit')
    assert dropin2
    assert dropin2.to_str() == expected_drop_in2
