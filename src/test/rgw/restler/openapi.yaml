openapi: 3.0.0
info:
  version: '2006-03-01'
  x-release: s3
  title: Amazon Simple Storage Service
  description: <p/>
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: s3
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/s3-2006-03-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/s3/'
servers:
  - url: 'http://s3{dash-or-dot}{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - eu-west-1
          - ap-northeast-1
          - ap-southeast-1
          - ap-southeast-2
          - sa-east-1
        default: us-east-1
      dash-or-dot:
        description: The service/region URL separator
        enum:
          - .
          - '-'
        default: .
    description: The Amazon S3 multi-region endpoint
  - url: 'https://s3{dash-or-dot}{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - eu-west-1
          - ap-northeast-1
          - ap-southeast-1
          - ap-southeast-2
          - sa-east-1
        default: us-east-1
      dash-or-dot:
        description: The service/region URL separator
        enum:
          - .
          - '-'
        default: .
    description: The Amazon S3 multi-region endpoint
  - url: 'http://s3.amazonaws.com'
    variables: {}
    description: The general Amazon S3 endpoint for US East (N. Virginia)
  - url: 'https://s3.amazonaws.com'
    variables: {}
    description: The general Amazon S3 endpoint for US East (N. Virginia)
  - url: 'http://s3.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-2
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-east-1
          - ap-south-1
          - me-south-1
        default: us-east-2
    description: The Amazon S3 multi-region endpoint
  - url: 'https://s3.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-2
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-east-1
          - ap-south-1
          - me-south-1
        default: us-east-2
    description: The Amazon S3 multi-region endpoint
  - url: 'http://s3.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon S3 endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://s3.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon S3 endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/{Bucket}/{Key}#uploadId':
    delete:
      operationId: AbortMultipartUpload
      description: '<p>This action aborts a multipart upload. After a multipart upload is aborted, no additional parts can be uploaded using that upload ID. The storage consumed by any previously uploaded parts will be freed. However, if any part uploads are currently in progress, those part uploads might or might not succeed. As a result, it might be necessary to abort a given multipart upload multiple times in order to completely free all storage consumed by all parts. </p> <p>To verify that all parts have been removed, so you don''t get charged for the part storage, you should call the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a> action and ensure that the parts list is empty.</p> <p>For information about permissions required to use the multipart upload, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html">Multipart Upload and Permissions</a>.</p> <p>The following operations are related to <code>AbortMultipartUpload</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html">CompleteMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html">ListMultipartUploads</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadAbort.html'
      responses:
        '204':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AbortMultipartUploadOutput'
        '480':
          description: NoSuchUpload
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchUpload'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name to which the upload was taking place. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Key of the object for which the multipart upload was initiated.
          schema:
            type: string
            minLength: 1
        - name: uploadId
          in: query
          required: true
          description: Upload ID that identifies the multipart upload.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    post:
      operationId: CompleteMultipartUpload
      description: '<p>Completes a multipart upload by assembling previously uploaded parts.</p> <p>You first initiate the multipart upload and then upload all parts using the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a> operation. After successfully uploading all relevant parts of an upload, you call this action to complete the upload. Upon receiving this request, Amazon S3 concatenates all the parts in ascending order by part number to create a new object. In the Complete Multipart Upload request, you must provide the parts list. You must ensure that the parts list is complete. This action concatenates the parts that you provide in the list. For each part in the list, you must provide the part number and the <code>ETag</code> value, returned after that part was uploaded.</p> <p>Processing of a Complete Multipart Upload request could take several minutes to complete. After Amazon S3 begins processing the request, it sends an HTTP response header that specifies a 200 OK response. While processing is in progress, Amazon S3 periodically sends white space characters to keep the connection from timing out. A request could fail after the initial 200 OK response has been sent. This means that a <code>200 OK</code> response can contain either a success or an error. If you call the S3 API directly, make sure to design your application to parse the contents of the response and handle it appropriately. If you use Amazon Web Services SDKs, SDKs handle this condition. The SDKs detect the embedded error and apply error handling per your configuration settings (including automatically retrying the request as appropriate). If the condition persists, the SDKs throws an exception (or, for the SDKs that don''t use exceptions, they return the error). </p> <p>Note that if <code>CompleteMultipartUpload</code> fails, applications should be prepared to retry the failed requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ErrorBestPractices.html">Amazon S3 Error Best Practices</a>.</p> <important> <p>You cannot use <code>Content-Type: application/x-www-form-urlencoded</code> with Complete Multipart Upload requests. Also, if you do not provide a <code>Content-Type</code> header, <code>CompleteMultipartUpload</code> returns a 200 OK response.</p> </important> <p>For more information about multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html">Uploading Objects Using Multipart Upload</a>.</p> <p>For information about permissions required to use the multipart upload API, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html">Multipart Upload and Permissions</a>.</p> <p> <code>CompleteMultipartUpload</code> has the following special errors:</p> <ul> <li> <p>Error code: <code>EntityTooSmall</code> </p> <ul> <li> <p>Description: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</p> </li> <li> <p>400 Bad Request</p> </li> </ul> </li> <li> <p>Error code: <code>InvalidPart</code> </p> <ul> <li> <p>Description: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part''s entity tag.</p> </li> <li> <p>400 Bad Request</p> </li> </ul> </li> <li> <p>Error code: <code>InvalidPartOrder</code> </p> <ul> <li> <p>Description: The list of parts was not in ascending order. The parts list must be specified in order by part number.</p> </li> <li> <p>400 Bad Request</p> </li> </ul> </li> <li> <p>Error code: <code>NoSuchUpload</code> </p> <ul> <li> <p>Description: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</p> </li> <li> <p>404 Not Found</p> </li> </ul> </li> </ul> <p>The following operations are related to <code>CompleteMultipartUpload</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html">AbortMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html">ListMultipartUploads</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadComplete.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CompleteMultipartUploadOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>Name of the bucket to which the multipart upload was initiated.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Object key for which the multipart upload was initiated.
          schema:
            type: string
            minLength: 1
        - name: uploadId
          in: query
          required: true
          description: ID for the initiated multipart upload.
          schema:
            type: string
        - name: x-amz-checksum-crc32
          in: header
          required: false
          description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-checksum-crc32c
          in: header
          required: false
          description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-checksum-sha1
          in: header
          required: false
          description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-checksum-sha256
          in: header
          required: false
          description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: 'The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: 'The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                CompleteMultipartUpload:
                  description: The container for the completed multipart upload details.
                  type: object
                  properties:
                    Parts:
                      allOf:
                        - $ref: '#/components/schemas/CompletedPartList'
                        - xml:
                            name: Part
                          description: '<p>Array of CompletedPart data types.</p> <p>If you do not supply a valid <code>Part</code> with your request, the service sends back an HTTP 400 response.</p>'
    get:
      operationId: ListParts
      description: '<p>Lists the parts that have been uploaded for a specific multipart upload. This operation must include the upload ID, which you obtain by sending the initiate multipart upload request (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a>). This request returns a maximum of 1,000 uploaded parts. The default number of parts returned is 1,000 parts. You can restrict the number of parts returned by specifying the <code>max-parts</code> request parameter. If your multipart upload consists of more than 1,000 parts, the response returns an <code>IsTruncated</code> field with the value of true, and a <code>NextPartNumberMarker</code> element. In subsequent <code>ListParts</code> requests you can include the part-number-marker query string parameter and set its value to the <code>NextPartNumberMarker</code> field value from the previous response.</p> <p>If the upload was created using a checksum algorithm, you will need to have permission to the <code>kms:Decrypt</code> action for the request to succeed. </p> <p>For more information on multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html">Uploading Objects Using Multipart Upload</a>.</p> <p>For information on permissions required to use the multipart upload API, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html">Multipart Upload and Permissions</a>.</p> <p>The following operations are related to <code>ListParts</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html">CompleteMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html">AbortMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html">GetObjectAttributes</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html">ListMultipartUploads</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListParts.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPartsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The name of the bucket to which the parts are being uploaded. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Object key for which the multipart upload was initiated.
          schema:
            type: string
            minLength: 1
        - name: max-parts
          in: query
          required: false
          description: Sets the maximum number of parts to return.
          schema:
            type: integer
        - name: part-number-marker
          in: query
          required: false
          description: Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.
          schema:
            type: integer
        - name: uploadId
          in: query
          required: true
          description: Upload ID identifying the multipart upload whose parts are being listed.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: 'The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: 'The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: MaxParts
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: PartNumberMarker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/{Bucket}/{Key}#x-amz-copy-source':
    put:
      operationId: CopyObject
      description: '<p>Creates a copy of an object that is already stored in Amazon S3.</p> <note> <p>You can store individual objects of up to 5 TB in Amazon S3. You create a copy of your object up to 5 GB in size in a single atomic action using this API. However, to copy an object greater than 5 GB, you must use the multipart upload Upload Part - Copy (UploadPartCopy) API. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/CopyingObjctsUsingRESTMPUapi.html">Copy Object Using the REST Multipart Upload API</a>.</p> </note> <p>All copy requests must be authenticated. Additionally, you must have <i>read</i> access to the source object and <i>write</i> access to the destination bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">REST Authentication</a>. Both the Region that you want to copy the object from and the Region that you want to copy the object to must be enabled for your account.</p> <p>A copy request might return an error when Amazon S3 receives the copy request or while Amazon S3 is copying the files. If the error occurs before the copy action starts, you receive a standard Amazon S3 error. If the error occurs during the copy operation, the error response is embedded in the <code>200 OK</code> response. This means that a <code>200 OK</code> response can contain either a success or an error. If you call the S3 API directly, make sure to design your application to parse the contents of the response and handle it appropriately. If you use Amazon Web Services SDKs, SDKs handle this condition. The SDKs detect the embedded error and apply error handling per your configuration settings (including automatically retrying the request as appropriate). If the condition persists, the SDKs throws an exception (or, for the SDKs that don''t use exceptions, they return the error).</p> <p>If the copy is successful, you receive a response with information about the copied object.</p> <note> <p>If the request is an HTTP 1.1 request, the response is chunk encoded. If it were not, it would not contain the content-length, and you would need to read the entire body.</p> </note> <p>The copy request charge is based on the storage class and Region that you specify for the destination object. The request can also result in a data retrieval charge for the source if the source storage class bills for data retrieval. For pricing information, see <a href="http://aws.amazon.com/s3/pricing/">Amazon S3 pricing</a>.</p> <important> <p>Amazon S3 transfer acceleration does not support cross-Region copies. If you request a cross-Region copy using a transfer acceleration endpoint, you get a 400 <code>Bad Request</code> error. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Transfer Acceleration</a>.</p> </important> <dl> <dt>Metadata</dt> <dd> <p>When copying an object, you can preserve all metadata (the default) or specify new metadata. However, the access control list (ACL) is not preserved and is set to private for the user making the request. To override the default ACL setting, specify a new ACL when generating a copy request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html">Using ACLs</a>. </p> <p>To specify whether you want the object metadata copied from the source object or replaced with metadata provided in the request, you can optionally add the <code>x-amz-metadata-directive</code> header. When you grant permissions, you can use the <code>s3:x-amz-metadata-directive</code> condition key to enforce certain metadata behavior when objects are uploaded. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/amazon-s3-policy-keys.html">Specifying Conditions in a Policy</a> in the <i>Amazon S3 User Guide</i>. For a complete list of Amazon S3-specific condition keys, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html">Actions, Resources, and Condition Keys for Amazon S3</a>.</p> <note> <p> <code>x-amz-website-redirect-location</code> is unique to each object and must be specified in the request headers to copy the value.</p> </note> </dd> <dt>x-amz-copy-source-if Headers</dt> <dd> <p>To only copy an object under certain conditions, such as whether the <code>Etag</code> matches or whether the object was modified before or after a specified date, use the following request parameters:</p> <ul> <li> <p> <code>x-amz-copy-source-if-match</code> </p> </li> <li> <p> <code>x-amz-copy-source-if-none-match</code> </p> </li> <li> <p> <code>x-amz-copy-source-if-unmodified-since</code> </p> </li> <li> <p> <code>x-amz-copy-source-if-modified-since</code> </p> </li> </ul> <p> If both the <code>x-amz-copy-source-if-match</code> and <code>x-amz-copy-source-if-unmodified-since</code> headers are present in the request and evaluate as follows, Amazon S3 returns <code>200 OK</code> and copies the data:</p> <ul> <li> <p> <code>x-amz-copy-source-if-match</code> condition evaluates to true</p> </li> <li> <p> <code>x-amz-copy-source-if-unmodified-since</code> condition evaluates to false</p> </li> </ul> <p>If both the <code>x-amz-copy-source-if-none-match</code> and <code>x-amz-copy-source-if-modified-since</code> headers are present in the request and evaluate as follows, Amazon S3 returns the <code>412 Precondition Failed</code> response code:</p> <ul> <li> <p> <code>x-amz-copy-source-if-none-match</code> condition evaluates to false</p> </li> <li> <p> <code>x-amz-copy-source-if-modified-since</code> condition evaluates to true</p> </li> </ul> <note> <p>All headers with the <code>x-amz-</code> prefix, including <code>x-amz-copy-source</code>, must be signed.</p> </note> </dd> <dt>Server-side encryption</dt> <dd> <p>Amazon S3 automatically encrypts all new objects that are copied to an S3 bucket. When copying an object, if you don''t specify encryption information in your copy request, the encryption setting of the target object is set to the default encryption configuration of the destination bucket. By default, all buckets have a base level of encryption configuration that uses server-side encryption with Amazon S3 managed keys (SSE-S3). If the destination bucket has a default encryption configuration that uses server-side encryption with Key Management Service (KMS) keys (SSE-KMS), dual-layer server-side encryption with Amazon Web Services KMS keys (DSSE-KMS), or server-side encryption with customer-provided encryption keys (SSE-C), Amazon S3 uses the corresponding KMS key, or a customer-provided key to encrypt the target object copy.</p> <p>When you perform a <code>CopyObject</code> operation, if you want to use a different type of encryption setting for the target object, you can use other appropriate encryption-related headers to encrypt the target object with a KMS key, an Amazon S3 managed key, or a customer-provided key. With server-side encryption, Amazon S3 encrypts your data as it writes your data to disks in its data centers and decrypts the data when you access it. If the encryption setting in your request is different from the default encryption configuration of the destination bucket, the encryption setting in your request takes precedence. If the source object for the copy is stored in Amazon S3 using SSE-C, you must provide the necessary encryption information in your request so that Amazon S3 can decrypt the object for copying. For more information about server-side encryption, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html">Using Server-Side Encryption</a>.</p> <p>If a target object uses SSE-KMS, you can enable an S3 Bucket Key for the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html">Amazon S3 Bucket Keys</a> in the <i>Amazon S3 User Guide</i>.</p> </dd> <dt>Access Control List (ACL)-Specific Request Headers</dt> <dd> <p>When copying an object, you can optionally use headers to grant ACL-based permissions. By default, all objects are private. Only the owner has full access control. When adding a new object, you can grant permissions to individual Amazon Web Services accounts or to predefined groups that are defined by Amazon S3. These permissions are then added to the ACL on the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-using-rest-api.html">Managing ACLs Using the REST API</a>. </p> <p>If the bucket that you''re copying objects to uses the bucket owner enforced setting for S3 Object Ownership, ACLs are disabled and no longer affect permissions. Buckets that use this setting only accept <code>PUT</code> requests that don''t specify an ACL or <code>PUT</code> requests that specify bucket owner full control ACLs, such as the <code>bucket-owner-full-control</code> canned ACL or an equivalent form of this ACL expressed in the XML format.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html"> Controlling ownership of objects and disabling ACLs</a> in the <i>Amazon S3 User Guide</i>.</p> <note> <p>If your bucket uses the bucket owner enforced setting for Object Ownership, all objects written to the bucket by any account will be owned by the bucket owner.</p> </note> </dd> <dt>Checksums</dt> <dd> <p>When copying an object, if it has a checksum, that checksum will be copied to the new object by default. When you copy the object over, you can optionally specify a different checksum algorithm to use with the <code>x-amz-checksum-algorithm</code> header.</p> </dd> <dt>Storage Class Options</dt> <dd> <p>You can use the <code>CopyObject</code> action to change the storage class of an object that is already stored in Amazon S3 by using the <code>StorageClass</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If the source object''s storage class is GLACIER, you must restore a copy of this object before you can use it as a source object for the copy operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html">RestoreObject</a>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/CopyingObjectsExamples.html">Copying Objects</a>.</p> </dd> <dt>Versioning</dt> <dd> <p>By default, <code>x-amz-copy-source</code> header identifies the current version of an object to copy. If the current version is a delete marker, Amazon S3 behaves as if the object was deleted. To copy a different version, use the <code>versionId</code> subresource.</p> <p>If you enable versioning on the target bucket, Amazon S3 generates a unique version ID for the object being copied. This version ID is different from the version ID of the source object. Amazon S3 returns the version ID of the copied object in the <code>x-amz-version-id</code> response header in the response.</p> <p>If you do not enable versioning or suspend it on the target bucket, the version ID that Amazon S3 generates is always null.</p> </dd> </dl> <p>The following operations are related to <code>CopyObject</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectCOPY.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyObjectOutput'
        '480':
          description: ObjectNotInActiveTierError
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ObjectNotInActiveTierError'
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: <p>The canned ACL to apply to the object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - aws-exec-read
              - bucket-owner-read
              - bucket-owner-full-control
        - name: Bucket
          in: path
          required: true
          description: '<p>The name of the destination bucket.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Cache-Control
          in: header
          required: false
          description: Specifies caching behavior along the request/reply chain.
          schema:
            type: string
        - name: x-amz-checksum-algorithm
          in: header
          required: false
          description: 'Indicates the algorithm you want Amazon S3 to use to create the checksum for the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: Content-Disposition
          in: header
          required: false
          description: Specifies presentational information for the object.
          schema:
            type: string
        - name: Content-Encoding
          in: header
          required: false
          description: Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
          schema:
            type: string
        - name: Content-Language
          in: header
          required: false
          description: The language the content is in.
          schema:
            type: string
        - name: Content-Type
          in: header
          required: false
          description: A standard MIME type describing the format of the object data.
          schema:
            type: string
        - name: x-amz-copy-source
          in: header
          required: true
          description: '<p>Specifies the source object for the copy operation. You specify the value in one of two formats, depending on whether you want to access the source object through an <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">access point</a>:</p> <ul> <li> <p>For objects not accessed through an access point, specify the name of the source bucket and the key of the source object, separated by a slash (/). For example, to copy the object <code>reports/january.pdf</code> from the bucket <code>awsexamplebucket</code>, use <code>awsexamplebucket/reports/january.pdf</code>. The value must be URL-encoded.</p> </li> <li> <p>For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format <code>arn:aws:s3:&lt;Region&gt;:&lt;account-id&gt;:accesspoint/&lt;access-point-name&gt;/object/&lt;key&gt;</code>. For example, to copy the object <code>reports/january.pdf</code> through access point <code>my-access-point</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/reports/january.pdf</code>. The value must be URL encoded.</p> <note> <p>Amazon S3 supports copy operations using access points only when the source and destination buckets are in the same Amazon Web Services Region.</p> </note> <p>Alternatively, for objects accessed through Amazon S3 on Outposts, specify the ARN of the object as accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/object/&lt;key&gt;</code>. For example, to copy the object <code>reports/january.pdf</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/object/reports/january.pdf</code>. The value must be URL-encoded. </p> </li> </ul> <p>To copy a specific version of an object, append <code>?versionId=&lt;version-id&gt;</code> to the value (for example, <code>awsexamplebucket/reports/january.pdf?versionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893</code>). If you don''t specify a version ID, Amazon S3 copies the latest version of the source object.</p>'
          schema:
            type: string
            pattern: \/.+\/.+
        - name: x-amz-copy-source-if-match
          in: header
          required: false
          description: Copies the object if its entity tag (ETag) matches the specified tag.
          schema:
            type: string
        - name: x-amz-copy-source-if-modified-since
          in: header
          required: false
          description: Copies the object if it has been modified since the specified time.
          schema:
            type: string
            format: date-time
        - name: x-amz-copy-source-if-none-match
          in: header
          required: false
          description: Copies the object if its entity tag (ETag) is different than the specified ETag.
          schema:
            type: string
        - name: x-amz-copy-source-if-unmodified-since
          in: header
          required: false
          description: Copies the object if it hasn't been modified since the specified time.
          schema:
            type: string
            format: date-time
        - name: Expires
          in: header
          required: false
          description: The date and time at which the object is no longer cacheable.
          schema:
            type: string
            format: date-time
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: '<p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>'
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: <p>Allows grantee to read the object data and its metadata.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: <p>Allows grantee to read the object ACL.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: <p>Allows grantee to write the ACL for the applicable object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The key of the destination object.
          schema:
            type: string
            minLength: 1
        - name: x-amz-metadata-directive
          in: header
          required: false
          description: Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.
          schema:
            type: string
            enum:
              - COPY
              - REPLACE
        - name: x-amz-tagging-directive
          in: header
          required: false
          description: Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request.
          schema:
            type: string
            enum:
              - COPY
              - REPLACE
        - name: x-amz-server-side-encryption
          in: header
          required: false
          description: 'The server-side encryption algorithm used when storing this object in Amazon S3 (for example, <code>AES256</code>, <code>aws:kms</code>, <code>aws:kms:dsse</code>).'
          schema:
            type: string
            enum:
              - AES256
              - 'aws:kms'
              - 'aws:kms:dsse'
        - name: x-amz-storage-class
          in: header
          required: false
          description: 'By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
            enum:
              - STANDARD
              - REDUCED_REDUNDANCY
              - STANDARD_IA
              - ONEZONE_IA
              - INTELLIGENT_TIERING
              - GLACIER
              - DEEP_ARCHIVE
              - OUTPOSTS
              - GLACIER_IR
              - SNOW
        - name: x-amz-website-redirect-location
          in: header
          required: false
          description: 'If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata. This value is unique to each object and is not copied when using the <code>x-amz-metadata-directive</code> header. Instead, you may opt to provide this header in combination with the directive.'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (for example, AES256).'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-server-side-encryption-aws-kms-key-id
          in: header
          required: false
          description: 'Specifies the KMS key ID to use for object encryption. All GET and PUT requests for an object protected by KMS will fail if they''re not made via SSL or using SigV4. For information about configuring any of the officially supported Amazon Web Services SDKs and Amazon Web Services CLI, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version">Specifying the Signature Version in Request Authentication</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-context
          in: header
          required: false
          description: Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-bucket-key-enabled
          in: header
          required: false
          description: <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using Key Management Service (KMS) keys (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS. </p> <p>Specifying this header with a COPY action doesn’t affect bucket-level settings for S3 Bucket Key.</p>
          schema:
            type: boolean
        - name: x-amz-copy-source-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use when decrypting the source object (for example, AES256).'
          schema:
            type: string
        - name: x-amz-copy-source-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.
          schema:
            type: string
            format: password
        - name: x-amz-copy-source-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-tagging
          in: header
          required: false
          description: The tag-set for the object destination object this value must be used in conjunction with the <code>TaggingDirective</code>. The tag-set must be encoded as URL Query parameters.
          schema:
            type: string
        - name: x-amz-object-lock-mode
          in: header
          required: false
          description: The Object Lock mode that you want to apply to the copied object.
          schema:
            type: string
            enum:
              - GOVERNANCE
              - COMPLIANCE
        - name: x-amz-object-lock-retain-until-date
          in: header
          required: false
          description: The date and time when you want the copied object's Object Lock to expire.
          schema:
            type: string
            format: date-time
        - name: x-amz-object-lock-legal-hold
          in: header
          required: false
          description: Specifies whether you want to apply a legal hold to the copied object.
          schema:
            type: string
            enum:
              - 'ON'
              - 'OFF'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected destination bucket owner. If the destination bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-source-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected source bucket owner. If the source bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                x-amz-meta-:
                  description: A map of metadata to store with the object in S3.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/MetadataValue'
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}':
    put:
      operationId: CreateBucket
      description: '<p>Creates a new S3 bucket. To create a bucket, you must register with Amazon S3 and have a valid Amazon Web Services Access Key ID to authenticate requests. Anonymous requests are never allowed to create buckets. By creating the bucket, you become the bucket owner.</p> <p>Not every string is an acceptable bucket name. For information about bucket naming restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html">Bucket naming rules</a>.</p> <p>If you want to create an Amazon S3 on Outposts bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html">Create Bucket</a>. </p> <p>By default, the bucket is created in the US East (N. Virginia) Region. You can optionally specify a Region in the request body. You might choose a Region to optimize latency, minimize costs, or address regulatory requirements. For example, if you reside in Europe, you will probably find it advantageous to create buckets in the Europe (Ireland) Region. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro">Accessing a bucket</a>.</p> <note> <p>If you send your create bucket request to the <code>s3.amazonaws.com</code> endpoint, the request goes to the <code>us-east-1</code> Region. Accordingly, the signature calculations in Signature Version 4 must use <code>us-east-1</code> as the Region, even if the location constraint in the request specifies another Region where the bucket is to be created. If you create a bucket in a Region other than US East (N. Virginia), your application must be able to handle 307 redirect. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html">Virtual hosting of buckets</a>.</p> </note> <dl> <dt>Permissions</dt> <dd> <p>In addition to <code>s3:CreateBucket</code>, the following permissions are required when your <code>CreateBucket</code> request includes specific headers:</p> <ul> <li> <p> <b>Access control lists (ACLs)</b> - If your <code>CreateBucket</code> request specifies access control list (ACL) permissions and the ACL is public-read, public-read-write, authenticated-read, or if you specify access permissions explicitly through any other ACL, both <code>s3:CreateBucket</code> and <code>s3:PutBucketAcl</code> permissions are needed. If the ACL for the <code>CreateBucket</code> request is private or if the request doesn''t specify any ACLs, only <code>s3:CreateBucket</code> permission is needed. </p> </li> <li> <p> <b>Object Lock</b> - If <code>ObjectLockEnabledForBucket</code> is set to true in your <code>CreateBucket</code> request, <code>s3:PutBucketObjectLockConfiguration</code> and <code>s3:PutBucketVersioning</code> permissions are required.</p> </li> <li> <p> <b>S3 Object Ownership</b> - If your <code>CreateBucket</code> request includes the <code>x-amz-object-ownership</code> header, then the <code>s3:PutBucketOwnershipControls</code> permission is required. By default, <code>ObjectOwnership</code> is set to <code>BucketOWnerEnforced</code> and ACLs are disabled. We recommend keeping ACLs disabled, except in uncommon use cases where you must control access for each object individually. If you want to change the <code>ObjectOwnership</code> setting, you can use the <code>x-amz-object-ownership</code> header in your <code>CreateBucket</code> request to set the <code>ObjectOwnership</code> setting of your choice. For more information about S3 Object Ownership, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html">Controlling object ownership </a> in the <i>Amazon S3 User Guide</i>.</p> </li> <li> <p> <b>S3 Block Public Access</b> - If your specific use case requires granting public access to your S3 resources, you can disable Block Public Access. You can create a new bucket with Block Public Access enabled, then separately call the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html"> <code>DeletePublicAccessBlock</code> </a> API. To use this operation, you must have the <code>s3:PutBucketPublicAccessBlock</code> permission. By default, all Block Public Access settings are enabled for new buckets. To avoid inadvertent exposure of your resources, we recommend keeping the S3 Block Public Access settings enabled. For more information about S3 Block Public Access, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html">Blocking public access to your Amazon S3 storage </a> in the <i>Amazon S3 User Guide</i>. </p> </li> </ul> </dd> </dl> <important> <p> If your <code>CreateBucket</code> request sets <code>BucketOwnerEnforced</code> for Amazon S3 Object Ownership and specifies a bucket ACL that provides access to an external Amazon Web Services account, your request fails with a <code>400</code> error and returns the <code>InvalidBucketAcLWithObjectOwnership</code> error code. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-ownership-existing-bucket.html">Setting Object Ownership on an existing bucket </a> in the <i>Amazon S3 User Guide</i>. </p> </important> <p>The following operations are related to <code>CreateBucket</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html">DeleteBucket</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUT.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateBucketOutput'
        '480':
          description: BucketAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BucketAlreadyExists'
        '481':
          description: BucketAlreadyOwnedByYou
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BucketAlreadyOwnedByYou'
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the bucket.
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket to create.
          schema:
            type: string
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: 'Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.'
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to list the objects in the bucket.
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the bucket ACL.
          schema:
            type: string
        - name: x-amz-grant-write
          in: header
          required: false
          description: '<p>Allows grantee to create new objects in the bucket.</p> <p>For the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.</p>'
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable bucket.
          schema:
            type: string
        - name: x-amz-bucket-object-lock-enabled
          in: header
          required: false
          description: Specifies whether you want S3 Object Lock to be enabled for the new bucket.
          schema:
            type: boolean
        - name: x-amz-object-ownership
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - BucketOwnerPreferred
              - ObjectWriter
              - BucketOwnerEnforced
            description: '<p>The container element for object ownership for a bucket''s ownership controls.</p> <p>BucketOwnerPreferred - Objects uploaded to the bucket change ownership to the bucket owner if the objects are uploaded with the <code>bucket-owner-full-control</code> canned ACL.</p> <p>ObjectWriter - The uploading account will own the object if the object is uploaded with the <code>bucket-owner-full-control</code> canned ACL.</p> <p>BucketOwnerEnforced - Access control lists (ACLs) are disabled and no longer affect permissions. The bucket owner automatically owns and has full control over every object in the bucket. The bucket only accepts PUT requests that don''t specify an ACL or bucket owner full control ACLs, such as the <code>bucket-owner-full-control</code> canned ACL or an equivalent form of this ACL expressed in the XML format.</p>'
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                CreateBucketConfiguration:
                  description: The configuration information for the bucket.
                  type: object
                  properties:
                    LocationConstraint:
                      allOf:
                        - $ref: '#/components/schemas/BucketLocationConstraint'
                        - description: 'Specifies the Region where the bucket will be created. If you don''t specify a Region, the bucket is created in the US East (N. Virginia) Region (us-east-1).'
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    delete:
      operationId: DeleteBucket
      description: '<p>Deletes the S3 bucket. All objects (including all object versions and delete markers) in the bucket must be deleted before the bucket itself can be deleted.</p> <p>The following operations are related to <code>DeleteBucket</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETE.html'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Specifies the bucket being deleted.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
    head:
      operationId: HeadBucket
      description: '<p>This action is useful to determine if a bucket exists and you have permission to access it. The action returns a <code>200 OK</code> if the bucket exists and you have permission to access it.</p> <p>If the bucket does not exist or you do not have permission to access it, the <code>HEAD</code> request returns a generic <code>400 Bad Request</code>, <code>403 Forbidden</code> or <code>404 Not Found</code> code. A message body is not included, so you cannot determine the exception beyond these error codes.</p> <p>To use this operation, you must have permissions to perform the <code>s3:ListBucket</code> action. The bucket owner has this permission by default and can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p>To use this API operation against an access point, you must provide the alias of the access point in place of the bucket name or specify the access point ARN. When using the access point ARN, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using the Amazon Web Services SDKs, you provide the ARN in place of the bucket name. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a>.</p> <p>To use this API operation against an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketHEAD.html'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchBucket
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchBucket'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
    get:
      operationId: ListObjects
      description: '<p>Returns some or all (up to 1,000) of the objects in a bucket. You can use the request parameters as selection criteria to return a subset of the objects in a bucket. A 200 OK response can contain valid or invalid XML. Be sure to design your application to parse the contents of the response and handle it appropriately.</p> <important> <p>This action has been revised. We recommend that you use the newer version, <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html">ListObjectsV2</a>, when developing applications. For backward compatibility, Amazon S3 continues to support <code>ListObjects</code>.</p> </important> <p>The following operations are related to <code>ListObjects</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html">ListObjectsV2</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html">ListBuckets</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGET.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListObjectsOutput'
        '480':
          description: NoSuchBucket
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchBucket'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The name of the bucket containing the objects.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: delimiter
          in: query
          required: false
          description: A delimiter is a character that you use to group keys.
          schema:
            type: string
        - name: encoding-type
          in: query
          required: false
          description: ''
          schema:
            type: string
            enum:
              - url
            description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key can contain any Unicode character; however, the XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
        - name: marker
          in: query
          required: false
          description: Marker is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. Marker can be any key in the bucket.
          schema:
            type: string
        - name: max-keys
          in: query
          required: false
          description: 'Sets the maximum number of keys returned in the response. By default, the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more. '
          schema:
            type: integer
        - name: prefix
          in: query
          required: false
          description: Limits the response to keys that begin with the specified prefix.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for the list objects request. Bucket owners need not specify this parameter in their requests.
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-optional-object-attributes
          in: header
          required: false
          description: Specifies the optional fields that you want returned in the response. Fields that you do not specify are not returned.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OptionalObjectAttributes'
        - name: MaxKeys
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/{Bucket}/{Key}#uploads':
    post:
      operationId: CreateMultipartUpload
      description: '<p>This action initiates a multipart upload and returns an upload ID. This upload ID is used to associate all of the parts in the specific multipart upload. You specify this upload ID in each of your subsequent upload part requests (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a>). You also include this upload ID in the final request to either complete or abort the multipart upload request.</p> <p>For more information about multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html">Multipart Upload Overview</a>.</p> <p>If you have configured a lifecycle rule to abort incomplete multipart uploads, the upload must complete within the number of days specified in the bucket lifecycle configuration. Otherwise, the incomplete multipart upload becomes eligible for an abort action and Amazon S3 aborts the multipart upload. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config">Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Configuration</a>.</p> <p>For information about the permissions required to use the multipart upload API, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html">Multipart Upload and Permissions</a>.</p> <p>For request signing, multipart upload is just a series of regular requests. You initiate a multipart upload, send one or more requests to upload parts, and then complete the multipart upload process. You sign each request individually. There is nothing special about signing multipart upload requests. For more information about signing, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html">Authenticating Requests (Amazon Web Services Signature Version 4)</a>.</p> <note> <p>After you initiate a multipart upload and upload one or more parts, to stop being charged for storing the uploaded parts, you must either complete or abort the multipart upload. Amazon S3 frees up the space used to store the parts and stop charging you for storing them only after you either complete or abort a multipart upload. </p> </note> <p>Server-side encryption is for data encryption at rest. Amazon S3 encrypts your data as it writes it to disks in its data centers and decrypts it when you access it. Amazon S3 automatically encrypts all new objects that are uploaded to an S3 bucket. When doing a multipart upload, if you don''t specify encryption information in your request, the encryption setting of the uploaded parts is set to the default encryption configuration of the destination bucket. By default, all buckets have a base level of encryption configuration that uses server-side encryption with Amazon S3 managed keys (SSE-S3). If the destination bucket has a default encryption configuration that uses server-side encryption with an Key Management Service (KMS) key (SSE-KMS), or a customer-provided encryption key (SSE-C), Amazon S3 uses the corresponding KMS key, or a customer-provided key to encrypt the uploaded parts. When you perform a CreateMultipartUpload operation, if you want to use a different type of encryption setting for the uploaded parts, you can request that Amazon S3 encrypts the object with a KMS key, an Amazon S3 managed key, or a customer-provided key. If the encryption setting in your request is different from the default encryption configuration of the destination bucket, the encryption setting in your request takes precedence. If you choose to provide your own encryption key, the request headers you provide in <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html">UploadPartCopy</a> requests must match the headers you used in the request to initiate the upload by using <code>CreateMultipartUpload</code>. You can request that Amazon S3 save the uploaded parts encrypted with server-side encryption with an Amazon S3 managed key (SSE-S3), an Key Management Service (KMS) key (SSE-KMS), or a customer-provided encryption key (SSE-C). </p> <p>To perform a multipart upload with encryption by using an Amazon Web Services KMS key, the requester must have permission to the <code>kms:Decrypt</code> and <code>kms:GenerateDataKey*</code> actions on the key. These permissions are required because Amazon S3 must decrypt and read data from the encrypted file parts before it completes the multipart upload. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/mpuoverview.html#mpuAndPermissions">Multipart upload API and permissions</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html">Protecting data using server-side encryption with Amazon Web Services KMS</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If your Identity and Access Management (IAM) user or role is in the same Amazon Web Services account as the KMS key, then you must have these permissions on the key policy. If your IAM user or role belongs to a different account than the key, then you must have the permissions on both the key policy and your IAM user or role.</p> <p> For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html">Protecting Data Using Server-Side Encryption</a>.</p> <dl> <dt>Access Permissions</dt> <dd> <p>When copying an object, you can optionally specify the accounts or groups that should be granted specific permissions on the new object. There are two ways to grant the permissions using the request headers:</p> <ul> <li> <p>Specify a canned ACL with the <code>x-amz-acl</code> request header. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned ACL</a>.</p> </li> <li> <p>Specify access permissions explicitly with the <code>x-amz-grant-read</code>, <code>x-amz-grant-read-acp</code>, <code>x-amz-grant-write-acp</code>, and <code>x-amz-grant-full-control</code> headers. These parameters map to the set of permissions that Amazon S3 supports in an ACL. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a>.</p> </li> </ul> <p>You can use either a canned ACL or specify access permissions explicitly. You cannot do both.</p> </dd> <dt>Server-Side- Encryption-Specific Request Headers</dt> <dd> <p>Amazon S3 encrypts data by using server-side encryption with an Amazon S3 managed key (SSE-S3) by default. Server-side encryption is for data encryption at rest. Amazon S3 encrypts your data as it writes it to disks in its data centers and decrypts it when you access it. You can request that Amazon S3 encrypts data at rest by using server-side encryption with other key options. The option you use depends on whether you want to use KMS keys (SSE-KMS) or provide your own encryption keys (SSE-C).</p> <ul> <li> <p>Use KMS keys (SSE-KMS) that include the Amazon Web Services managed key (<code>aws/s3</code>) and KMS customer managed keys stored in Key Management Service (KMS) – If you want Amazon Web Services to manage the keys used to encrypt data, specify the following headers in the request.</p> <ul> <li> <p> <code>x-amz-server-side-encryption</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-aws-kms-key-id</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-context</code> </p> </li> </ul> <note> <p>If you specify <code>x-amz-server-side-encryption:aws:kms</code>, but don''t provide <code>x-amz-server-side-encryption-aws-kms-key-id</code>, Amazon S3 uses the Amazon Web Services managed key (<code>aws/s3</code> key) in KMS to protect the data.</p> </note> <important> <p>All <code>GET</code> and <code>PUT</code> requests for an object protected by KMS fail if you don''t make them by using Secure Sockets Layer (SSL), Transport Layer Security (TLS), or Signature Version 4.</p> </important> <p>For more information about server-side encryption with KMS keys (SSE-KMS), see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html">Protecting Data Using Server-Side Encryption with KMS keys</a>.</p> </li> <li> <p>Use customer-provided encryption keys (SSE-C) – If you want to manage your own encryption keys, provide all the following headers in the request.</p> <ul> <li> <p> <code>x-amz-server-side-encryption-customer-algorithm</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-customer-key</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-customer-key-MD5</code> </p> </li> </ul> <p>For more information about server-side encryption with customer-provided encryption keys (SSE-C), see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html"> Protecting data using server-side encryption with customer-provided encryption keys (SSE-C)</a>.</p> </li> </ul> </dd> <dt>Access-Control-List (ACL)-Specific Request Headers</dt> <dd> <p>You also can use the following access control–related headers with this operation. By default, all objects are private. Only the owner has full access control. When adding a new object, you can grant permissions to individual Amazon Web Services accounts or to predefined groups defined by Amazon S3. These permissions are then added to the access control list (ACL) on the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html">Using ACLs</a>. With this operation, you can grant access permissions using one of the following two methods:</p> <ul> <li> <p>Specify a canned ACL (<code>x-amz-acl</code>) — Amazon S3 supports a set of predefined ACLs, known as <i>canned ACLs</i>. Each canned ACL has a predefined set of grantees and permissions. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned ACL</a>.</p> </li> <li> <p>Specify access permissions explicitly — To explicitly grant access permissions to specific Amazon Web Services accounts or groups, use the following headers. Each header maps to specific permissions that Amazon S3 supports in an ACL. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a>. In the header, you specify a list of grantees who get the specific permission. To grant permissions explicitly, use:</p> <ul> <li> <p> <code>x-amz-grant-read</code> </p> </li> <li> <p> <code>x-amz-grant-write</code> </p> </li> <li> <p> <code>x-amz-grant-read-acp</code> </p> </li> <li> <p> <code>x-amz-grant-write-acp</code> </p> </li> <li> <p> <code>x-amz-grant-full-control</code> </p> </li> </ul> <p>You specify each grantee as a type=value pair, where the type is one of the following:</p> <ul> <li> <p> <code>id</code> – if the value specified is the canonical user ID of an Amazon Web Services account</p> </li> <li> <p> <code>uri</code> – if you are granting permissions to a predefined group</p> </li> <li> <p> <code>emailAddress</code> – if the value specified is the email address of an Amazon Web Services account</p> <note> <p>Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: </p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p> US West (Oregon)</p> </li> <li> <p> Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p> </note> </li> </ul> <p>For example, the following <code>x-amz-grant-read</code> header grants the Amazon Web Services accounts identified by account IDs permissions to read object data and its metadata:</p> <p> <code>x-amz-grant-read: id="11112222333", id="444455556666" </code> </p> </li> </ul> </dd> </dl> <p>The following operations are related to <code>CreateMultipartUpload</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html">CompleteMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html">AbortMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html">ListMultipartUploads</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadInitiate.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateMultipartUploadOutput'
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: <p>The canned ACL to apply to the object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - aws-exec-read
              - bucket-owner-read
              - bucket-owner-full-control
        - name: Bucket
          in: path
          required: true
          description: '<p>The name of the bucket to which to initiate the upload</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Cache-Control
          in: header
          required: false
          description: Specifies caching behavior along the request/reply chain.
          schema:
            type: string
        - name: Content-Disposition
          in: header
          required: false
          description: Specifies presentational information for the object.
          schema:
            type: string
        - name: Content-Encoding
          in: header
          required: false
          description: Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
          schema:
            type: string
        - name: Content-Language
          in: header
          required: false
          description: The language the content is in.
          schema:
            type: string
        - name: Content-Type
          in: header
          required: false
          description: A standard MIME type describing the format of the object data.
          schema:
            type: string
        - name: Expires
          in: header
          required: false
          description: The date and time at which the object is no longer cacheable.
          schema:
            type: string
            format: date-time
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: '<p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>'
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: <p>Allows grantee to read the object data and its metadata.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: <p>Allows grantee to read the object ACL.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: <p>Allows grantee to write the ACL for the applicable object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Object key for which the multipart upload is to be initiated.
          schema:
            type: string
            minLength: 1
        - name: x-amz-server-side-encryption
          in: header
          required: false
          description: 'The server-side encryption algorithm used when storing this object in Amazon S3 (for example, <code>AES256</code>, <code>aws:kms</code>).'
          schema:
            type: string
            enum:
              - AES256
              - 'aws:kms'
              - 'aws:kms:dsse'
        - name: x-amz-storage-class
          in: header
          required: false
          description: 'By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
            enum:
              - STANDARD
              - REDUCED_REDUNDANCY
              - STANDARD_IA
              - ONEZONE_IA
              - INTELLIGENT_TIERING
              - GLACIER
              - DEEP_ARCHIVE
              - OUTPOSTS
              - GLACIER_IR
              - SNOW
        - name: x-amz-website-redirect-location
          in: header
          required: false
          description: 'If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (for example, AES256).'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-server-side-encryption-aws-kms-key-id
          in: header
          required: false
          description: 'Specifies the ID of the symmetric encryption customer managed key to use for object encryption. All GET and PUT requests for an object protected by KMS will fail if they''re not made via SSL or using SigV4. For information about configuring any of the officially supported Amazon Web Services SDKs and Amazon Web Services CLI, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version">Specifying the Signature Version in Request Authentication</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-context
          in: header
          required: false
          description: Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-bucket-key-enabled
          in: header
          required: false
          description: <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using Key Management Service (KMS) keys (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p> <p>Specifying this header with an object action doesn’t affect bucket-level settings for S3 Bucket Key.</p>
          schema:
            type: boolean
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-tagging
          in: header
          required: false
          description: The tag-set for the object. The tag-set must be encoded as URL Query parameters.
          schema:
            type: string
        - name: x-amz-object-lock-mode
          in: header
          required: false
          description: Specifies the Object Lock mode that you want to apply to the uploaded object.
          schema:
            type: string
            enum:
              - GOVERNANCE
              - COMPLIANCE
        - name: x-amz-object-lock-retain-until-date
          in: header
          required: false
          description: Specifies the date and time when you want the Object Lock to expire.
          schema:
            type: string
            format: date-time
        - name: x-amz-object-lock-legal-hold
          in: header
          required: false
          description: Specifies whether you want to apply a legal hold to the uploaded object.
          schema:
            type: string
            enum:
              - 'ON'
              - 'OFF'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-checksum-algorithm
          in: header
          required: false
          description: 'Indicates the algorithm you want Amazon S3 to use to create the checksum for the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: uploads
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                x-amz-meta-:
                  description: A map of metadata to store with the object in S3.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/MetadataValue'
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}#analytics&id':
    delete:
      operationId: DeleteBucketAnalyticsConfiguration
      description: '<p>Deletes an analytics configuration for the bucket (specified by the analytics configuration ID).</p> <p>To use this operation, you must have permissions to perform the <code>s3:PutAnalyticsConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p>For information about the Amazon S3 analytics feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html">Amazon S3 Analytics – Storage Class Analysis</a>. </p> <p>The following operations are related to <code>DeleteBucketAnalyticsConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html">GetBucketAnalyticsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketAnalyticsConfigurations.html">ListBucketAnalyticsConfigurations</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html">PutBucketAnalyticsConfiguration</a> </p> </li> </ul>'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket from which an analytics configuration is deleted.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID that identifies the analytics configuration.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: analytics
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetBucketAnalyticsConfiguration
      description: '<p>This implementation of the GET action returns an analytics configuration (identified by the analytics configuration ID) from the bucket.</p> <p>To use this operation, you must have permissions to perform the <code>s3:GetAnalyticsConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources"> Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a> in the <i>Amazon S3 User Guide</i>. </p> <p>For information about Amazon S3 analytics feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html">Amazon S3 Analytics – Storage Class Analysis</a> in the <i>Amazon S3 User Guide</i>.</p> <p>The following operations are related to <code>GetBucketAnalyticsConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketAnalyticsConfiguration.html">DeleteBucketAnalyticsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketAnalyticsConfigurations.html">ListBucketAnalyticsConfigurations</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html">PutBucketAnalyticsConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketAnalyticsConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket from which an analytics configuration is retrieved.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID that identifies the analytics configuration.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: analytics
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutBucketAnalyticsConfiguration
      description: '<p>Sets an analytics configuration for the bucket (specified by the analytics configuration ID). You can have up to 1,000 analytics configurations per bucket.</p> <p>You can choose to have storage class analysis export analysis reports sent to a comma-separated values (CSV) flat file. See the <code>DataExport</code> request element. Reports are updated daily and are based on the object filters that you configure. When selecting data export, you specify a destination bucket and an optional destination prefix where the file is written. You can export the data to a destination bucket in a different account. However, the destination bucket must be in the same Region as the bucket that you are making the PUT analytics configuration to. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html">Amazon S3 Analytics – Storage Class Analysis</a>. </p> <important> <p>You must create a bucket policy on the destination bucket where the exported file is written to grant permissions to Amazon S3 to write objects to the bucket. For an example policy, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-9">Granting Permissions for Amazon S3 Inventory and Storage Class Analysis</a>.</p> </important> <p>To use this operation, you must have permissions to perform the <code>s3:PutAnalyticsConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p> <code>PutBucketAnalyticsConfiguration</code> has the following special errors:</p> <ul> <li> <ul> <li> <p> <i>HTTP Error: HTTP 400 Bad Request</i> </p> </li> <li> <p> <i>Code: InvalidArgument</i> </p> </li> <li> <p> <i>Cause: Invalid argument.</i> </p> </li> </ul> </li> <li> <ul> <li> <p> <i>HTTP Error: HTTP 400 Bad Request</i> </p> </li> <li> <p> <i>Code: TooManyConfigurations</i> </p> </li> <li> <p> <i>Cause: You are attempting to create a new configuration but have already reached the 1,000-configuration limit.</i> </p> </li> </ul> </li> <li> <ul> <li> <p> <i>HTTP Error: HTTP 403 Forbidden</i> </p> </li> <li> <p> <i>Code: AccessDenied</i> </p> </li> <li> <p> <i>Cause: You are not the owner of the specified bucket, or you do not have the s3:PutAnalyticsConfiguration bucket permission to set the configuration on the bucket.</i> </p> </li> </ul> </li> </ul> <p>The following operations are related to <code>PutBucketAnalyticsConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html">GetBucketAnalyticsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketAnalyticsConfiguration.html">DeleteBucketAnalyticsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketAnalyticsConfigurations.html">ListBucketAnalyticsConfigurations</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket to which an analytics configuration is stored.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID that identifies the analytics configuration.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: analytics
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - AnalyticsConfiguration
              properties:
                AnalyticsConfiguration:
                  description: Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
                  type: object
                  properties:
                    Id:
                      allOf:
                        - $ref: '#/components/schemas/AnalyticsId'
                        - description: The ID that identifies the analytics configuration.
                    Filter:
                      allOf:
                        - $ref: '#/components/schemas/AnalyticsFilter'
                        - description: 'The filter used to describe a set of objects for analyses. A filter must have exactly one prefix, one tag, or one conjunction (AnalyticsAndOperator). If no filter is provided, all objects will be considered in any analysis.'
                    StorageClassAnalysis:
                      allOf:
                        - $ref: '#/components/schemas/StorageClassAnalysis'
                        - description: ' Contains data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes. '
  '/{Bucket}#cors':
    delete:
      operationId: DeleteBucketCors
      description: '<p>Deletes the <code>cors</code> configuration information set for the bucket.</p> <p>To use this operation, you must have permission to perform the <code>s3:PutBucketCORS</code> action. The bucket owner has this permission by default and can grant this permission to others. </p> <p>For information about <code>cors</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">Enabling Cross-Origin Resource Sharing</a> in the <i>Amazon S3 User Guide</i>.</p> <p class="title"> <b>Related Resources</b> </p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html">PutBucketCors</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTOPTIONSobject.html">RESTOPTIONSobject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEcors.html'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Specifies the bucket whose <code>cors</code> configuration is being deleted.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: cors
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetBucketCors
      description: '<p>Returns the Cross-Origin Resource Sharing (CORS) configuration information set for the bucket.</p> <p> To use this operation, you must have permission to perform the <code>s3:GetBucketCORS</code> action. By default, the bucket owner has this permission and can grant it to others.</p> <p>To use this API operation against an access point, provide the alias of the access point in place of the bucket name.</p> <p>To use this API operation against an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p> <p> For more information about CORS, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html"> Enabling Cross-Origin Resource Sharing</a>.</p> <p>The following operations are related to <code>GetBucketCors</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html">PutBucketCors</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html">DeleteBucketCors</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETcors.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketCorsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name for which to get the cors configuration.</p> <p>To use this API operation against an access point, provide the alias of the access point in place of the bucket name.</p> <p>To use this API operation against an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p>'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: cors
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutBucketCors
      description: '<p>Sets the <code>cors</code> configuration for your bucket. If the configuration exists, Amazon S3 replaces it.</p> <p>To use this operation, you must be allowed to perform the <code>s3:PutBucketCORS</code> action. By default, the bucket owner has this permission and can grant it to others.</p> <p>You set this configuration on a bucket so that the bucket can service cross-origin requests. For example, you might want to enable a request whose origin is <code>http://www.example.com</code> to access your Amazon S3 bucket at <code>my.example.bucket.com</code> by using the browser''s <code>XMLHttpRequest</code> capability.</p> <p>To enable cross-origin resource sharing (CORS) on a bucket, you add the <code>cors</code> subresource to the bucket. The <code>cors</code> subresource is an XML document in which you configure rules that identify origins and the HTTP methods that can be executed on your bucket. The document is limited to 64 KB in size. </p> <p>When Amazon S3 receives a cross-origin request (or a pre-flight OPTIONS request) against a bucket, it evaluates the <code>cors</code> configuration on the bucket and uses the first <code>CORSRule</code> rule that matches the incoming browser request to enable a cross-origin request. For a rule to match, the following conditions must be met:</p> <ul> <li> <p>The request''s <code>Origin</code> header must match <code>AllowedOrigin</code> elements.</p> </li> <li> <p>The request method (for example, GET, PUT, HEAD, and so on) or the <code>Access-Control-Request-Method</code> header in case of a pre-flight <code>OPTIONS</code> request must be one of the <code>AllowedMethod</code> elements. </p> </li> <li> <p>Every header specified in the <code>Access-Control-Request-Headers</code> request header of a pre-flight request must match an <code>AllowedHeader</code> element. </p> </li> </ul> <p> For more information about CORS, go to <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">Enabling Cross-Origin Resource Sharing</a> in the <i>Amazon S3 User Guide</i>.</p> <p>The following operations are related to <code>PutBucketCors</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketCors.html">GetBucketCors</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html">DeleteBucketCors</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTOPTIONSobject.html">RESTOPTIONSobject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTcors.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Specifies the bucket impacted by the <code>cors</code>configuration.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The base64-encoded 128-bit MD5 digest of the data. This header must be used as a message integrity check to verify that the request body was not corrupted in transit. For more information, go to <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864.</a> </p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: cors
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - CORSConfiguration
              properties:
                CORSConfiguration:
                  description: 'Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">Enabling Cross-Origin Resource Sharing</a> in the <i>Amazon S3 User Guide</i>.'
                  type: object
                  properties:
                    CORSRules:
                      allOf:
                        - $ref: '#/components/schemas/CORSRules'
                        - xml:
                            name: CORSRule
                          description: A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.
  '/{Bucket}#encryption':
    delete:
      operationId: DeleteBucketEncryption
      description: '<p>This implementation of the DELETE action resets the default encryption for the bucket as server-side encryption with Amazon S3 managed keys (SSE-S3). For information about the bucket default encryption feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html">Amazon S3 Bucket Default Encryption</a> in the <i>Amazon S3 User Guide</i>.</p> <p>To use this operation, you must have permissions to perform the <code>s3:PutEncryptionConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to your Amazon S3 Resources</a> in the <i>Amazon S3 User Guide</i>.</p> <p>The following operations are related to <code>DeleteBucketEncryption</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketEncryption.html">PutBucketEncryption</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketEncryption.html">GetBucketEncryption</a> </p> </li> </ul>'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the server-side encryption configuration to delete.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: encryption
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetBucketEncryption
      description: '<p>Returns the default encryption configuration for an Amazon S3 bucket. By default, all buckets have a default encryption configuration that uses server-side encryption with Amazon S3 managed keys (SSE-S3). For information about the bucket default encryption feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html">Amazon S3 Bucket Default Encryption</a> in the <i>Amazon S3 User Guide</i>.</p> <p>To use this operation, you must have permission to perform the <code>s3:GetEncryptionConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p>The following operations are related to <code>GetBucketEncryption</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketEncryption.html">PutBucketEncryption</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketEncryption.html">DeleteBucketEncryption</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketEncryptionOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket from which the server-side encryption configuration is retrieved.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: encryption
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutBucketEncryption
      description: '<p>This action uses the <code>encryption</code> subresource to configure default encryption and Amazon S3 Bucket Keys for an existing bucket.</p> <p>By default, all buckets have a default encryption configuration that uses server-side encryption with Amazon S3 managed keys (SSE-S3). You can optionally configure default encryption for a bucket by using server-side encryption with Key Management Service (KMS) keys (SSE-KMS), dual-layer server-side encryption with Amazon Web Services KMS keys (DSSE-KMS), or server-side encryption with customer-provided keys (SSE-C). If you specify default encryption by using SSE-KMS, you can also configure Amazon S3 Bucket Keys. For information about bucket default encryption, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html">Amazon S3 bucket default encryption</a> in the <i>Amazon S3 User Guide</i>. For more information about S3 Bucket Keys, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html">Amazon S3 Bucket Keys</a> in the <i>Amazon S3 User Guide</i>.</p> <important> <p>This action requires Amazon Web Services Signature Version 4. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html"> Authenticating Requests (Amazon Web Services Signature Version 4)</a>. </p> </important> <p>To use this operation, you must have permission to perform the <code>s3:PutEncryptionConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a> in the <i>Amazon S3 User Guide</i>. </p> <p>The following operations are related to <code>PutBucketEncryption</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketEncryption.html">GetBucketEncryption</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketEncryption.html">DeleteBucketEncryption</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: 'Specifies default encryption for a bucket using server-side encryption with different key options. By default, all buckets have a default encryption configuration that uses server-side encryption with Amazon S3 managed keys (SSE-S3). You can optionally configure default encryption for a bucket by using server-side encryption with an Amazon Web Services KMS key (SSE-KMS) or a customer-provided key (SSE-C). For information about the bucket default encryption feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html">Amazon S3 Bucket Default Encryption</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The base64-encoded 128-bit MD5 digest of the server-side encryption configuration.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: encryption
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - ServerSideEncryptionConfiguration
              properties:
                ServerSideEncryptionConfiguration:
                  description: Specifies the default server-side-encryption configuration.
                  type: object
                  properties:
                    Rules:
                      allOf:
                        - $ref: '#/components/schemas/ServerSideEncryptionRules'
                        - xml:
                            name: Rule
                          description: Container for information about a particular server-side encryption configuration rule.
  '/{Bucket}#intelligent-tiering&id':
    delete:
      operationId: DeleteBucketIntelligentTieringConfiguration
      description: '<p>Deletes the S3 Intelligent-Tiering configuration from the specified bucket.</p> <p>The S3 Intelligent-Tiering storage class is designed to optimize storage costs by automatically moving data to the most cost-effective storage access tier, without performance impact or operational overhead. S3 Intelligent-Tiering delivers automatic cost savings in three low latency and high throughput access tiers. To get the lowest storage cost on data that can be accessed in minutes to hours, you can choose to activate additional archiving capabilities.</p> <p>The S3 Intelligent-Tiering storage class is the ideal storage class for data with unknown, changing, or unpredictable access patterns, independent of object size or retention period. If the size of an object is less than 128 KB, it is not monitored and not eligible for auto-tiering. Smaller objects can be stored, but they are always charged at the Frequent Access tier rates in the S3 Intelligent-Tiering storage class.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access">Storage class for automatically optimizing frequently and infrequently accessed objects</a>.</p> <p>Operations related to <code>DeleteBucketIntelligentTieringConfiguration</code> include: </p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketIntelligentTieringConfiguration.html">GetBucketIntelligentTieringConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketIntelligentTieringConfiguration.html">PutBucketIntelligentTieringConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketIntelligentTieringConfigurations.html">ListBucketIntelligentTieringConfigurations</a> </p> </li> </ul>'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the S3 Intelligent-Tiering configuration.
          schema:
            type: string
        - name: intelligent-tiering
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetBucketIntelligentTieringConfiguration
      description: '<p>Gets the S3 Intelligent-Tiering configuration from the specified bucket.</p> <p>The S3 Intelligent-Tiering storage class is designed to optimize storage costs by automatically moving data to the most cost-effective storage access tier, without performance impact or operational overhead. S3 Intelligent-Tiering delivers automatic cost savings in three low latency and high throughput access tiers. To get the lowest storage cost on data that can be accessed in minutes to hours, you can choose to activate additional archiving capabilities.</p> <p>The S3 Intelligent-Tiering storage class is the ideal storage class for data with unknown, changing, or unpredictable access patterns, independent of object size or retention period. If the size of an object is less than 128 KB, it is not monitored and not eligible for auto-tiering. Smaller objects can be stored, but they are always charged at the Frequent Access tier rates in the S3 Intelligent-Tiering storage class.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access">Storage class for automatically optimizing frequently and infrequently accessed objects</a>.</p> <p>Operations related to <code>GetBucketIntelligentTieringConfiguration</code> include: </p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketIntelligentTieringConfiguration.html">DeleteBucketIntelligentTieringConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketIntelligentTieringConfiguration.html">PutBucketIntelligentTieringConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketIntelligentTieringConfigurations.html">ListBucketIntelligentTieringConfigurations</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketIntelligentTieringConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the S3 Intelligent-Tiering configuration.
          schema:
            type: string
        - name: intelligent-tiering
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutBucketIntelligentTieringConfiguration
      description: '<p>Puts a S3 Intelligent-Tiering configuration to the specified bucket. You can have up to 1,000 S3 Intelligent-Tiering configurations per bucket.</p> <p>The S3 Intelligent-Tiering storage class is designed to optimize storage costs by automatically moving data to the most cost-effective storage access tier, without performance impact or operational overhead. S3 Intelligent-Tiering delivers automatic cost savings in three low latency and high throughput access tiers. To get the lowest storage cost on data that can be accessed in minutes to hours, you can choose to activate additional archiving capabilities.</p> <p>The S3 Intelligent-Tiering storage class is the ideal storage class for data with unknown, changing, or unpredictable access patterns, independent of object size or retention period. If the size of an object is less than 128 KB, it is not monitored and not eligible for auto-tiering. Smaller objects can be stored, but they are always charged at the Frequent Access tier rates in the S3 Intelligent-Tiering storage class.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access">Storage class for automatically optimizing frequently and infrequently accessed objects</a>.</p> <p>Operations related to <code>PutBucketIntelligentTieringConfiguration</code> include: </p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketIntelligentTieringConfiguration.html">DeleteBucketIntelligentTieringConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketIntelligentTieringConfiguration.html">GetBucketIntelligentTieringConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketIntelligentTieringConfigurations.html">ListBucketIntelligentTieringConfigurations</a> </p> </li> </ul> <note> <p>You only need S3 Intelligent-Tiering enabled on a bucket if you want to automatically move objects stored in the S3 Intelligent-Tiering storage class to the Archive Access or Deep Archive Access tier.</p> </note> <p> <code>PutBucketIntelligentTieringConfiguration</code> has the following special errors:</p> <dl> <dt>HTTP 400 Bad Request Error</dt> <dd> <p> <i>Code:</i> InvalidArgument</p> <p> <i>Cause:</i> Invalid Argument</p> </dd> <dt>HTTP 400 Bad Request Error</dt> <dd> <p> <i>Code:</i> TooManyConfigurations</p> <p> <i>Cause:</i> You are attempting to create a new configuration but have already reached the 1,000-configuration limit. </p> </dd> <dt>HTTP 403 Forbidden Error</dt> <dd> <p> <i>Cause:</i> You are not the owner of the specified bucket, or you do not have the <code>s3:PutIntelligentTieringConfiguration</code> bucket permission to set the configuration on the bucket. </p> </dd> </dl>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the S3 Intelligent-Tiering configuration.
          schema:
            type: string
        - name: intelligent-tiering
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - IntelligentTieringConfiguration
              properties:
                IntelligentTieringConfiguration:
                  description: '<p>Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.</p> <p>For information about the S3 Intelligent-Tiering storage class, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access">Storage class for automatically optimizing frequently and infrequently accessed objects</a>.</p>'
                  type: object
                  properties:
                    Id:
                      allOf:
                        - $ref: '#/components/schemas/IntelligentTieringId'
                        - description: The ID used to identify the S3 Intelligent-Tiering configuration.
                    Filter:
                      allOf:
                        - $ref: '#/components/schemas/IntelligentTieringFilter'
                        - description: Specifies a bucket filter. The configuration only includes objects that meet the filter's criteria.
                    Status:
                      allOf:
                        - $ref: '#/components/schemas/IntelligentTieringStatus'
                        - description: Specifies the status of the configuration.
                    Tierings:
                      allOf:
                        - $ref: '#/components/schemas/TieringList'
                        - xml:
                            name: Tiering
                          description: Specifies the S3 Intelligent-Tiering storage class tier of the configuration.
  '/{Bucket}#inventory&id':
    delete:
      operationId: DeleteBucketInventoryConfiguration
      description: '<p>Deletes an inventory configuration (identified by the inventory ID) from the bucket.</p> <p>To use this operation, you must have permissions to perform the <code>s3:PutInventoryConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p>For information about the Amazon S3 inventory feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html">Amazon S3 Inventory</a>.</p> <p>Operations related to <code>DeleteBucketInventoryConfiguration</code> include: </p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html">GetBucketInventoryConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html">PutBucketInventoryConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html">ListBucketInventoryConfigurations</a> </p> </li> </ul>'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the inventory configuration to delete.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the inventory configuration.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: inventory
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetBucketInventoryConfiguration
      description: '<p>Returns an inventory configuration (identified by the inventory configuration ID) from the bucket.</p> <p>To use this operation, you must have permissions to perform the <code>s3:GetInventoryConfiguration</code> action. The bucket owner has this permission by default and can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p>For information about the Amazon S3 inventory feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html">Amazon S3 Inventory</a>.</p> <p>The following operations are related to <code>GetBucketInventoryConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html">DeleteBucketInventoryConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html">ListBucketInventoryConfigurations</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html">PutBucketInventoryConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketInventoryConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the inventory configuration to retrieve.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the inventory configuration.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: inventory
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutBucketInventoryConfiguration
      description: '<p>This implementation of the <code>PUT</code> action adds an inventory configuration (identified by the inventory ID) to the bucket. You can have up to 1,000 inventory configurations per bucket. </p> <p>Amazon S3 inventory generates inventories of the objects in the bucket on a daily or weekly basis, and the results are published to a flat file. The bucket that is inventoried is called the <i>source</i> bucket, and the bucket where the inventory flat file is stored is called the <i>destination</i> bucket. The <i>destination</i> bucket must be in the same Amazon Web Services Region as the <i>source</i> bucket. </p> <p>When you configure an inventory for a <i>source</i> bucket, you specify the <i>destination</i> bucket where you want the inventory to be stored, and whether to generate the inventory daily or weekly. You can also configure what object metadata to include and whether to inventory all object versions or only current versions. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html">Amazon S3 Inventory</a> in the Amazon S3 User Guide.</p> <important> <p>You must create a bucket policy on the <i>destination</i> bucket to grant permissions to Amazon S3 to write objects to the bucket in the defined location. For an example policy, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-9"> Granting Permissions for Amazon S3 Inventory and Storage Class Analysis</a>.</p> </important> <dl> <dt>Permissions</dt> <dd> <p>To use this operation, you must have permission to perform the <code>s3:PutInventoryConfiguration</code> action. The bucket owner has this permission by default and can grant this permission to others. </p> <p>The <code>s3:PutInventoryConfiguration</code> permission allows a user to create an <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-inventory.html">S3 Inventory</a> report that includes all object metadata fields available and to specify the destination bucket to store the inventory. A user with read access to objects in the destination bucket can also access all object metadata fields that are available in the inventory report. </p> <p>To restrict access to an inventory report, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html#example-bucket-policies-use-case-10">Restricting access to an Amazon S3 Inventory report</a> in the <i>Amazon S3 User Guide</i>. For more information about the metadata fields available in S3 Inventory, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-inventory.html#storage-inventory-contents">Amazon S3 Inventory lists</a> in the <i>Amazon S3 User Guide</i>. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions related to bucket subresource operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Identity and access management in Amazon S3</a> in the <i>Amazon S3 User Guide</i>.</p> </dd> </dl> <p> <code>PutBucketInventoryConfiguration</code> has the following special errors:</p> <dl> <dt>HTTP 400 Bad Request Error</dt> <dd> <p> <i>Code:</i> InvalidArgument</p> <p> <i>Cause:</i> Invalid Argument</p> </dd> <dt>HTTP 400 Bad Request Error</dt> <dd> <p> <i>Code:</i> TooManyConfigurations</p> <p> <i>Cause:</i> You are attempting to create a new configuration but have already reached the 1,000-configuration limit. </p> </dd> <dt>HTTP 403 Forbidden Error</dt> <dd> <p> <i>Cause:</i> You are not the owner of the specified bucket, or you do not have the <code>s3:PutInventoryConfiguration</code> bucket permission to set the configuration on the bucket. </p> </dd> </dl> <p>The following operations are related to <code>PutBucketInventoryConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html">GetBucketInventoryConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html">DeleteBucketInventoryConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html">ListBucketInventoryConfigurations</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket where the inventory configuration will be stored.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the inventory configuration.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: inventory
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - InventoryConfiguration
              properties:
                InventoryConfiguration:
                  description: 'Specifies the inventory configuration for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html">GET Bucket inventory</a> in the <i>Amazon S3 API Reference</i>. '
                  type: object
                  properties:
                    Destination:
                      allOf:
                        - $ref: '#/components/schemas/InventoryDestination'
                        - description: Contains information about where to publish the inventory results.
                    IsEnabled:
                      allOf:
                        - $ref: '#/components/schemas/IsEnabled'
                        - description: 'Specifies whether the inventory is enabled or disabled. If set to <code>True</code>, an inventory list is generated. If set to <code>False</code>, no inventory list is generated.'
                    Filter:
                      allOf:
                        - $ref: '#/components/schemas/InventoryFilter'
                        - description: Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria.
                    Id:
                      allOf:
                        - $ref: '#/components/schemas/InventoryId'
                        - description: The ID used to identify the inventory configuration.
                    IncludedObjectVersions:
                      allOf:
                        - $ref: '#/components/schemas/InventoryIncludedObjectVersions'
                        - description: 'Object versions to include in the inventory list. If set to <code>All</code>, the list includes all the object versions, which adds the version-related fields <code>VersionId</code>, <code>IsLatest</code>, and <code>DeleteMarker</code> to the list. If set to <code>Current</code>, the list does not contain these version-related fields.'
                    OptionalFields:
                      allOf:
                        - $ref: '#/components/schemas/InventoryOptionalFields'
                        - description: Contains the optional fields that are included in the inventory results.
                    Schedule:
                      allOf:
                        - $ref: '#/components/schemas/InventorySchedule'
                        - description: Specifies the schedule for generating inventory results.
  '/{Bucket}#lifecycle':
    delete:
      operationId: DeleteBucketLifecycle
      description: '<p>Deletes the lifecycle configuration from the specified bucket. Amazon S3 removes all the lifecycle configuration rules in the lifecycle subresource associated with the bucket. Your objects never expire, and Amazon S3 no longer automatically deletes any objects on the basis of rules contained in the deleted lifecycle configuration.</p> <p>To use this operation, you must have permission to perform the <code>s3:PutLifecycleConfiguration</code> action. By default, the bucket owner has this permission and the bucket owner can grant this permission to others.</p> <p>There is usually some time lag before lifecycle configuration deletion is fully propagated to all the Amazon S3 systems.</p> <p>For more information about the object expiration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#intro-lifecycle-rules-actions">Elements to Describe Lifecycle Actions</a>.</p> <p>Related actions include:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETElifecycle.html'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket name of the lifecycle to delete.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: lifecycle
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetBucketLifecycleConfiguration
      description: '<note> <p>Bucket lifecycle configuration now supports specifying a lifecycle rule using an object key name prefix, one or more object tags, or a combination of both. Accordingly, this section describes the latest API. The response describes the new filter element that you can use to specify a filter to select a subset of objects to which the rule applies. If you are using a previous version of the lifecycle configuration, it still works. For the earlier action, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycle.html">GetBucketLifecycle</a>.</p> </note> <p>Returns the lifecycle configuration information set on the bucket. For information about lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object Lifecycle Management</a>.</p> <p>To use this operation, you must have permission to perform the <code>s3:GetLifecycleConfiguration</code> action. The bucket owner has this permission, by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p> <code>GetBucketLifecycleConfiguration</code> has the following special error:</p> <ul> <li> <p>Error code: <code>NoSuchLifecycleConfiguration</code> </p> <ul> <li> <p>Description: The lifecycle configuration does not exist.</p> </li> <li> <p>HTTP Status Code: 404 Not Found</p> </li> <li> <p>SOAP Fault Code Prefix: Client</p> </li> </ul> </li> </ul> <p>The following operations are related to <code>GetBucketLifecycleConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycle.html">GetBucketLifecycle</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html">PutBucketLifecycle</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html">DeleteBucketLifecycle</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketLifecycleConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket for which to get the lifecycle information.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: lifecycle
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutBucketLifecycleConfiguration
      description: '<p>Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle configuration. Keep in mind that this will overwrite an existing lifecycle configuration, so if you want to retain any configuration details, they must be included in the new lifecycle configuration. For information about lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html">Managing your storage lifecycle</a>.</p> <note> <p>Bucket lifecycle configuration now supports specifying a lifecycle rule using an object key name prefix, one or more object tags, or a combination of both. Accordingly, this section describes the latest API. The previous version of the API supported filtering based only on an object key name prefix, which is supported for backward compatibility. For the related API description, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html">PutBucketLifecycle</a>.</p> </note> <dl> <dt>Rules</dt> <dd> <p>You specify the lifecycle configuration in your request body. The lifecycle configuration is specified as XML consisting of one or more rules. An Amazon S3 Lifecycle configuration can have up to 1,000 rules. This limit is not adjustable. Each rule consists of the following:</p> <ul> <li> <p>A filter identifying a subset of objects to which the rule applies. The filter can be based on a key name prefix, object tags, or a combination of both.</p> </li> <li> <p>A status indicating whether the rule is in effect.</p> </li> <li> <p>One or more lifecycle transition and expiration actions that you want Amazon S3 to perform on the objects identified by the filter. If the state of your bucket is versioning-enabled or versioning-suspended, you can have many versions of the same object (one current version and zero or more noncurrent versions). Amazon S3 provides predefined actions that you can specify for current and noncurrent object versions.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object Lifecycle Management</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html">Lifecycle Configuration Elements</a>.</p> </dd> <dt>Permissions</dt> <dd> <p>By default, all Amazon S3 resources are private, including buckets, objects, and related subresources (for example, lifecycle configuration and website configuration). Only the resource owner (that is, the Amazon Web Services account that created it) can access the resource. The resource owner can optionally grant access permissions to others by writing an access policy. For this operation, a user must get the <code>s3:PutLifecycleConfiguration</code> permission.</p> <p>You can also explicitly deny permissions. An explicit deny also supersedes any other permissions. If you want to block users or accounts from removing or deleting objects from your bucket, you must deny them permissions for the following actions:</p> <ul> <li> <p> <code>s3:DeleteObject</code> </p> </li> <li> <p> <code>s3:DeleteObjectVersion</code> </p> </li> <li> <p> <code>s3:PutLifecycleConfiguration</code> </p> </li> </ul> <p>For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> </dd> </dl> <p>The following operations are related to <code>PutBucketLifecycleConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-configuration-examples.html">Examples of Lifecycle Configuration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html">DeleteBucketLifecycle</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket for which to set the configuration.
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: lifecycle
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                LifecycleConfiguration:
                  description: 'Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object Lifecycle Management</a> in the <i>Amazon S3 User Guide</i>.'
                  type: object
                  properties:
                    Rules:
                      allOf:
                        - $ref: '#/components/schemas/LifecycleRules'
                        - xml:
                            name: Rule
                          description: A lifecycle rule for individual objects in an Amazon S3 bucket.
  '/{Bucket}#metrics&id':
    delete:
      operationId: DeleteBucketMetricsConfiguration
      description: '<p>Deletes a metrics configuration for the Amazon CloudWatch request metrics (specified by the metrics configuration ID) from the bucket. Note that this doesn''t include the daily storage metrics.</p> <p> To use this operation, you must have permissions to perform the <code>s3:PutMetricsConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p>For information about CloudWatch request metrics for Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html">Monitoring Metrics with Amazon CloudWatch</a>. </p> <p>The following operations are related to <code>DeleteBucketMetricsConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketMetricsConfiguration.html">GetBucketMetricsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html">PutBucketMetricsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketMetricsConfigurations.html">ListBucketMetricsConfigurations</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html">Monitoring Metrics with Amazon CloudWatch</a> </p> </li> </ul>'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the metrics configuration to delete.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: 'The ID used to identify the metrics configuration. The ID has a 64 character limit and can only contain letters, numbers, periods, dashes, and underscores.'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: metrics
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetBucketMetricsConfiguration
      description: '<p>Gets a metrics configuration (specified by the metrics configuration ID) from the bucket. Note that this doesn''t include the daily storage metrics.</p> <p> To use this operation, you must have permissions to perform the <code>s3:GetMetricsConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p> For information about CloudWatch request metrics for Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html">Monitoring Metrics with Amazon CloudWatch</a>.</p> <p>The following operations are related to <code>GetBucketMetricsConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html">PutBucketMetricsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketMetricsConfiguration.html">DeleteBucketMetricsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketMetricsConfigurations.html">ListBucketMetricsConfigurations</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html">Monitoring Metrics with Amazon CloudWatch</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketMetricsConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the metrics configuration to retrieve.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: 'The ID used to identify the metrics configuration. The ID has a 64 character limit and can only contain letters, numbers, periods, dashes, and underscores.'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: metrics
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutBucketMetricsConfiguration
      description: '<p>Sets a metrics configuration (specified by the metrics configuration ID) for the bucket. You can have up to 1,000 metrics configurations per bucket. If you''re updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don''t include the elements you want to keep, they are erased.</p> <p>To use this operation, you must have permissions to perform the <code>s3:PutMetricsConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p>For information about CloudWatch request metrics for Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html">Monitoring Metrics with Amazon CloudWatch</a>.</p> <p>The following operations are related to <code>PutBucketMetricsConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketMetricsConfiguration.html">DeleteBucketMetricsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketMetricsConfiguration.html">GetBucketMetricsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketMetricsConfigurations.html">ListBucketMetricsConfigurations</a> </p> </li> </ul> <p> <code>PutBucketMetricsConfiguration</code> has the following special error:</p> <ul> <li> <p>Error code: <code>TooManyConfigurations</code> </p> <ul> <li> <p>Description: You are attempting to create a new configuration but have already reached the 1,000-configuration limit.</p> </li> <li> <p>HTTP Status Code: HTTP 400 Bad Request</p> </li> </ul> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket for which the metrics configuration is set.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: 'The ID used to identify the metrics configuration. The ID has a 64 character limit and can only contain letters, numbers, periods, dashes, and underscores.'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: metrics
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - MetricsConfiguration
              properties:
                MetricsConfiguration:
                  description: 'Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you''re updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don''t include the elements you want to keep, they are erased. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html">PutBucketMetricsConfiguration</a>.'
                  type: object
                  properties:
                    Id:
                      allOf:
                        - $ref: '#/components/schemas/MetricsId'
                        - description: 'The ID used to identify the metrics configuration. The ID has a 64 character limit and can only contain letters, numbers, periods, dashes, and underscores.'
                    Filter:
                      allOf:
                        - $ref: '#/components/schemas/MetricsFilter'
                        - description: 'Specifies a metrics configuration filter. The metrics configuration will only include objects that meet the filter''s criteria. A filter must be a prefix, an object tag, an access point ARN, or a conjunction (MetricsAndOperator).'
  '/{Bucket}#ownershipControls':
    delete:
      operationId: DeleteBucketOwnershipControls
      description: '<p>Removes <code>OwnershipControls</code> for an Amazon S3 bucket. To use this operation, you must have the <code>s3:PutBucketOwnershipControls</code> permission. For more information about Amazon S3 permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying Permissions in a Policy</a>.</p> <p>For information about Amazon S3 Object Ownership, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/about-object-ownership.html">Using Object Ownership</a>. </p> <p>The following operations are related to <code>DeleteBucketOwnershipControls</code>:</p> <ul> <li> <p> <a>GetBucketOwnershipControls</a> </p> </li> <li> <p> <a>PutBucketOwnershipControls</a> </p> </li> </ul>'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: 'The Amazon S3 bucket whose <code>OwnershipControls</code> you want to delete. '
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: ownershipControls
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetBucketOwnershipControls
      description: '<p>Retrieves <code>OwnershipControls</code> for an Amazon S3 bucket. To use this operation, you must have the <code>s3:GetBucketOwnershipControls</code> permission. For more information about Amazon S3 permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html">Specifying permissions in a policy</a>. </p> <p>For information about Amazon S3 Object Ownership, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html">Using Object Ownership</a>. </p> <p>The following operations are related to <code>GetBucketOwnershipControls</code>:</p> <ul> <li> <p> <a>PutBucketOwnershipControls</a> </p> </li> <li> <p> <a>DeleteBucketOwnershipControls</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketOwnershipControlsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: 'The name of the Amazon S3 bucket whose <code>OwnershipControls</code> you want to retrieve. '
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: ownershipControls
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutBucketOwnershipControls
      description: '<p>Creates or modifies <code>OwnershipControls</code> for an Amazon S3 bucket. To use this operation, you must have the <code>s3:PutBucketOwnershipControls</code> permission. For more information about Amazon S3 permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/user-guide/using-with-s3-actions.html">Specifying permissions in a policy</a>. </p> <p>For information about Amazon S3 Object Ownership, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/user-guide/about-object-ownership.html">Using object ownership</a>. </p> <p>The following operations are related to <code>PutBucketOwnershipControls</code>:</p> <ul> <li> <p> <a>GetBucketOwnershipControls</a> </p> </li> <li> <p> <a>DeleteBucketOwnershipControls</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the Amazon S3 bucket whose <code>OwnershipControls</code> you want to set.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The MD5 hash of the <code>OwnershipControls</code> request body. </p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: ownershipControls
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - OwnershipControls
              properties:
                OwnershipControls:
                  description: The container element for a bucket's ownership controls.
                  type: object
                  properties:
                    Rules:
                      allOf:
                        - $ref: '#/components/schemas/OwnershipControlsRules'
                        - xml:
                            name: Rule
                          description: The container element for an ownership control rule.
  '/{Bucket}#policy':
    delete:
      operationId: DeleteBucketPolicy
      description: '<p>This implementation of the DELETE action uses the policy subresource to delete the policy of a specified bucket. If you are using an identity other than the root user of the Amazon Web Services account that owns the bucket, the calling identity must have the <code>DeleteBucketPolicy</code> permissions on the specified bucket and belong to the bucket owner''s account to use this operation. </p> <p>If you don''t have <code>DeleteBucketPolicy</code> permissions, Amazon S3 returns a <code>403 Access Denied</code> error. If you have the correct permissions, but you''re not using an identity that belongs to the bucket owner''s account, Amazon S3 returns a <code>405 Method Not Allowed</code> error. </p> <important> <p>To ensure that bucket owners don''t inadvertently lock themselves out of their own buckets, the root principal in a bucket owner''s Amazon Web Services account can perform the <code>GetBucketPolicy</code>, <code>PutBucketPolicy</code>, and <code>DeleteBucketPolicy</code> API actions, even if their bucket policy explicitly denies the root principal''s access. Bucket owner root principals can only be blocked from performing these API actions by VPC endpoint policies and Amazon Web Services Organizations policies.</p> </important> <p>For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and UserPolicies</a>. </p> <p>The following operations are related to <code>DeleteBucketPolicy</code> </p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEpolicy.html'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket name.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: policy
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetBucketPolicy
      description: '<p>Returns the policy of a specified bucket. If you are using an identity other than the root user of the Amazon Web Services account that owns the bucket, the calling identity must have the <code>GetBucketPolicy</code> permissions on the specified bucket and belong to the bucket owner''s account in order to use this operation.</p> <p>If you don''t have <code>GetBucketPolicy</code> permissions, Amazon S3 returns a <code>403 Access Denied</code> error. If you have the correct permissions, but you''re not using an identity that belongs to the bucket owner''s account, Amazon S3 returns a <code>405 Method Not Allowed</code> error.</p> <important> <p>To ensure that bucket owners don''t inadvertently lock themselves out of their own buckets, the root principal in a bucket owner''s Amazon Web Services account can perform the <code>GetBucketPolicy</code>, <code>PutBucketPolicy</code>, and <code>DeleteBucketPolicy</code> API actions, even if their bucket policy explicitly denies the root principal''s access. Bucket owner root principals can only be blocked from performing these API actions by VPC endpoint policies and Amazon Web Services Organizations policies.</p> </important> <p>To use this API operation against an access point, provide the alias of the access point in place of the bucket name.</p> <p>To use this API operation against an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p> <p>For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User Policies</a>.</p> <p>The following action is related to <code>GetBucketPolicy</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETpolicy.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketPolicyOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name for which to get the bucket policy.</p> <p>To use this API operation against an access point, provide the alias of the access point in place of the bucket name.</p> <p>To use this API operation against an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p>'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: policy
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutBucketPolicy
      description: '<p>Applies an Amazon S3 bucket policy to an Amazon S3 bucket. If you are using an identity other than the root user of the Amazon Web Services account that owns the bucket, the calling identity must have the <code>PutBucketPolicy</code> permissions on the specified bucket and belong to the bucket owner''s account in order to use this operation.</p> <p>If you don''t have <code>PutBucketPolicy</code> permissions, Amazon S3 returns a <code>403 Access Denied</code> error. If you have the correct permissions, but you''re not using an identity that belongs to the bucket owner''s account, Amazon S3 returns a <code>405 Method Not Allowed</code> error.</p> <important> <p>To ensure that bucket owners don''t inadvertently lock themselves out of their own buckets, the root principal in a bucket owner''s Amazon Web Services account can perform the <code>GetBucketPolicy</code>, <code>PutBucketPolicy</code>, and <code>DeleteBucketPolicy</code> API actions, even if their bucket policy explicitly denies the root principal''s access. Bucket owner root principals can only be blocked from performing these API actions by VPC endpoint policies and Amazon Web Services Organizations policies.</p> </important> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html">Bucket policy examples</a>.</p> <p>The following operations are related to <code>PutBucketPolicy</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html">DeleteBucket</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTpolicy.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The MD5 hash of the request body.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-confirm-remove-self-bucket-access
          in: header
          required: false
          description: Set this parameter to true to confirm that you want to remove your permissions to change this bucket policy in the future.
          schema:
            type: boolean
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: policy
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Policy
              properties:
                Policy:
                  description: The bucket policy as a JSON document.
                  type: string
  '/{Bucket}#replication':
    delete:
      operationId: DeleteBucketReplication
      description: '<p> Deletes the replication configuration from the bucket.</p> <p>To use this operation, you must have permissions to perform the <code>s3:PutReplicationConfiguration</code> action. The bucket owner has these permissions by default and can grant it to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>. </p> <note> <p>It can take a while for the deletion of a replication configuration to fully propagate.</p> </note> <p> For information about replication configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html">Replication</a> in the <i>Amazon S3 User Guide</i>.</p> <p>The following operations are related to <code>DeleteBucketReplication</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html">PutBucketReplication</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketReplication.html">GetBucketReplication</a> </p> </li> </ul>'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: ' The bucket name. '
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: replication
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetBucketReplication
      description: '<p>Returns the replication configuration of a bucket.</p> <note> <p> It can take a while to propagate the put or delete a replication configuration to all Amazon S3 systems. Therefore, a get request soon after put or delete can return a wrong result. </p> </note> <p> For information about replication configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html">Replication</a> in the <i>Amazon S3 User Guide</i>.</p> <p>This action requires permissions for the <code>s3:GetReplicationConfiguration</code> action. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User Policies</a>.</p> <p>If you include the <code>Filter</code> element in a replication configuration, you must also include the <code>DeleteMarkerReplication</code> and <code>Priority</code> elements. The response also returns those elements.</p> <p>For information about <code>GetBucketReplication</code> errors, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ReplicationErrorCodeList">List of replication-related error codes</a> </p> <p>The following operations are related to <code>GetBucketReplication</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html">PutBucketReplication</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html">DeleteBucketReplication</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketReplicationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket name for which to get the replication information.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: replication
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutBucketReplication
      description: '<p> Creates a replication configuration or replaces an existing one. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html">Replication</a> in the <i>Amazon S3 User Guide</i>. </p> <p>Specify the replication configuration in the request body. In the replication configuration, you provide the name of the destination bucket or buckets where you want Amazon S3 to replicate objects, the IAM role that Amazon S3 can assume to replicate objects on your behalf, and other relevant information.</p> <p>A replication configuration must include at least one rule, and can contain a maximum of 1,000. Each rule identifies a subset of objects to replicate by filtering the objects in the source bucket. To choose additional subsets of objects to replicate, add a rule for each subset.</p> <p>To specify a subset of the objects in the source bucket to apply a replication rule to, add the Filter element as a child of the Rule element. You can filter objects based on an object key prefix, one or more object tags, or both. When you add the Filter element in the configuration, you must also add the following elements: <code>DeleteMarkerReplication</code>, <code>Status</code>, and <code>Priority</code>.</p> <note> <p>If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations">Backward Compatibility</a>.</p> </note> <p>For information about enabling versioning on a bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html">Using Versioning</a>.</p> <dl> <dt>Handling Replication of Encrypted Objects</dt> <dd> <p>By default, Amazon S3 doesn''t replicate objects that are stored at rest using server-side encryption with KMS keys. To replicate Amazon Web Services KMS-encrypted objects, add the following: <code>SourceSelectionCriteria</code>, <code>SseKmsEncryptedObjects</code>, <code>Status</code>, <code>EncryptionConfiguration</code>, and <code>ReplicaKmsKeyID</code>. For information about replication configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-config-for-kms-objects.html">Replicating Objects Created with SSE Using KMS keys</a>.</p> <p>For information on <code>PutBucketReplication</code> errors, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ReplicationErrorCodeList">List of replication-related error codes</a> </p> </dd> <dt>Permissions</dt> <dd> <p>To create a <code>PutBucketReplication</code> request, you must have <code>s3:PutReplicationConfiguration</code> permissions for the bucket. </p> <p>By default, a resource owner, in this case the Amazon Web Services account that created the bucket, can perform this operation. The resource owner can also grant others permissions to perform the operation. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying Permissions in a Policy</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <note> <p>To perform this operation, the user or role performing the action must have the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_passrole.html">iam:PassRole</a> permission.</p> </note> </dd> </dl> <p>The following operations are related to <code>PutBucketReplication</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketReplication.html">GetBucketReplication</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html">DeleteBucketReplication</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit. For more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864</a>.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-bucket-object-lock-token
          in: header
          required: false
          description: A token to allow Object Lock to be enabled for an existing bucket.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: replication
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - ReplicationConfiguration
              properties:
                ReplicationConfiguration:
                  description: 'A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.'
                  type: object
                  properties:
                    Role:
                      allOf:
                        - $ref: '#/components/schemas/Role'
                        - description: 'The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that Amazon S3 assumes when replicating objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html">How to Set Up Replication</a> in the <i>Amazon S3 User Guide</i>.'
                    Rules:
                      allOf:
                        - $ref: '#/components/schemas/ReplicationRules'
                        - xml:
                            name: Rule
                          description: 'A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules. '
  '/{Bucket}#tagging':
    delete:
      operationId: DeleteBucketTagging
      description: '<p>Deletes the tags from the bucket.</p> <p>To use this operation, you must have permission to perform the <code>s3:PutBucketTagging</code> action. By default, the bucket owner has this permission and can grant this permission to others. </p> <p>The following operations are related to <code>DeleteBucketTagging</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html">GetBucketTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html">PutBucketTagging</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEtagging.html'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket that has the tag set to be removed.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: tagging
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetBucketTagging
      description: '<p>Returns the tag set associated with the bucket.</p> <p>To use this operation, you must have permission to perform the <code>s3:GetBucketTagging</code> action. By default, the bucket owner has this permission and can grant this permission to others.</p> <p> <code>GetBucketTagging</code> has the following special error:</p> <ul> <li> <p>Error code: <code>NoSuchTagSet</code> </p> <ul> <li> <p>Description: There is no tag set associated with the bucket.</p> </li> </ul> </li> </ul> <p>The following operations are related to <code>GetBucketTagging</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html">PutBucketTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html">DeleteBucketTagging</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETtagging.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketTaggingOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket for which to get the tagging information.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: tagging
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutBucketTagging
      description: '<p>Sets the tags for a bucket.</p> <p>Use tags to organize your Amazon Web Services bill to reflect your own cost structure. To do this, sign up to get your Amazon Web Services account bill with tag key values included. Then, to see the cost of combined resources, organize your billing information according to resources with the same tag key values. For example, you can tag several resources with a specific application name, and then organize your billing information to see the total cost of that application across several services. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Cost Allocation and Tagging</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/CostAllocTagging.html">Using Cost Allocation in Amazon S3 Bucket Tags</a>.</p> <note> <p> When this operation sets the tags for a bucket, it will overwrite any current tags the bucket already has. You cannot use this operation to add tags to an existing list of tags.</p> </note> <p>To use this operation, you must have permissions to perform the <code>s3:PutBucketTagging</code> action. The bucket owner has this permission by default and can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p> <code>PutBucketTagging</code> has the following special errors:</p> <ul> <li> <p>Error code: <code>InvalidTagError</code> </p> <ul> <li> <p>Description: The tag provided was not a valid tag. This error can occur if the tag did not pass input validation. For information about tag restrictions, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined Tag Restrictions</a> and <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/aws-tag-restrictions.html">Amazon Web Services-Generated Cost Allocation Tag Restrictions</a>.</p> </li> </ul> </li> <li> <p>Error code: <code>MalformedXMLError</code> </p> <ul> <li> <p>Description: The XML provided does not match the schema.</p> </li> </ul> </li> <li> <p>Error code: <code>OperationAbortedError </code> </p> <ul> <li> <p>Description: A conflicting conditional action is currently in progress against this resource. Please try again.</p> </li> </ul> </li> <li> <p>Error code: <code>InternalError</code> </p> <ul> <li> <p>Description: The service was unable to apply the provided tag to the bucket.</p> </li> </ul> </li> </ul> <p>The following operations are related to <code>PutBucketTagging</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html">GetBucketTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html">DeleteBucketTagging</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTtagging.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket name.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit. For more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864</a>.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: tagging
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Tagging
              properties:
                Tagging:
                  description: Container for <code>TagSet</code> elements.
                  type: object
                  properties:
                    TagSet:
                      allOf:
                        - $ref: '#/components/schemas/TagSet'
                        - description: A collection for a set of tags
  '/{Bucket}#website':
    delete:
      operationId: DeleteBucketWebsite
      description: '<p>This action removes the website configuration for a bucket. Amazon S3 returns a <code>200 OK</code> response upon successfully deleting a website configuration on the specified bucket. You will get a <code>200 OK</code> response if the website configuration you are trying to delete does not exist on the bucket. Amazon S3 returns a <code>404</code> response if the bucket specified in the request does not exist.</p> <p>This DELETE action requires the <code>S3:DeleteBucketWebsite</code> permission. By default, only the bucket owner can delete the website configuration attached to a bucket. However, bucket owners can grant other users permission to delete the website configuration by writing a bucket policy granting them the <code>S3:DeleteBucketWebsite</code> permission. </p> <p>For more information about hosting websites, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting Websites on Amazon S3</a>. </p> <p>The following operations are related to <code>DeleteBucketWebsite</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketWebsite.html">GetBucketWebsite</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html">PutBucketWebsite</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEwebsite.html'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: 'The bucket name for which you want to remove the website configuration. '
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: website
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetBucketWebsite
      description: '<p>Returns the website configuration for a bucket. To host website on Amazon S3, you can configure a bucket as website by adding a website configuration. For more information about hosting websites, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting Websites on Amazon S3</a>. </p> <p>This GET action requires the <code>S3:GetBucketWebsite</code> permission. By default, only the bucket owner can read the bucket website configuration. However, bucket owners can allow other users to read the website configuration by writing a bucket policy granting them the <code>S3:GetBucketWebsite</code> permission.</p> <p>The following operations are related to <code>GetBucketWebsite</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketWebsite.html">DeleteBucketWebsite</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html">PutBucketWebsite</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETwebsite.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketWebsiteOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket name for which to get the website configuration.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: website
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutBucketWebsite
      description: '<p>Sets the configuration of the website that is specified in the <code>website</code> subresource. To configure a bucket as a website, you can add this subresource on the bucket with website configuration information such as the file name of the index document and any redirect rules. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting Websites on Amazon S3</a>.</p> <p>This PUT action requires the <code>S3:PutBucketWebsite</code> permission. By default, only the bucket owner can configure the website attached to a bucket; however, bucket owners can allow other users to set the website configuration by writing a bucket policy that grants them the <code>S3:PutBucketWebsite</code> permission.</p> <p>To redirect all website requests sent to the bucket''s website endpoint, you add a website configuration with the following elements. Because all requests are sent to another website, you don''t need to provide index document name for the bucket.</p> <ul> <li> <p> <code>WebsiteConfiguration</code> </p> </li> <li> <p> <code>RedirectAllRequestsTo</code> </p> </li> <li> <p> <code>HostName</code> </p> </li> <li> <p> <code>Protocol</code> </p> </li> </ul> <p>If you want granular control over redirects, you can use the following elements to add routing rules that describe conditions for redirecting requests and information about the redirect destination. In this case, the website configuration must provide an index document for the bucket, because some requests might not be redirected. </p> <ul> <li> <p> <code>WebsiteConfiguration</code> </p> </li> <li> <p> <code>IndexDocument</code> </p> </li> <li> <p> <code>Suffix</code> </p> </li> <li> <p> <code>ErrorDocument</code> </p> </li> <li> <p> <code>Key</code> </p> </li> <li> <p> <code>RoutingRules</code> </p> </li> <li> <p> <code>RoutingRule</code> </p> </li> <li> <p> <code>Condition</code> </p> </li> <li> <p> <code>HttpErrorCodeReturnedEquals</code> </p> </li> <li> <p> <code>KeyPrefixEquals</code> </p> </li> <li> <p> <code>Redirect</code> </p> </li> <li> <p> <code>Protocol</code> </p> </li> <li> <p> <code>HostName</code> </p> </li> <li> <p> <code>ReplaceKeyPrefixWith</code> </p> </li> <li> <p> <code>ReplaceKeyWith</code> </p> </li> <li> <p> <code>HttpRedirectCode</code> </p> </li> </ul> <p>Amazon S3 has a limitation of 50 routing rules per website configuration. If you require more than 50 routing rules, you can use object redirect. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html">Configuring an Object Redirect</a> in the <i>Amazon S3 User Guide</i>.</p>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTwebsite.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket name.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit. For more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864</a>.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: website
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - WebsiteConfiguration
              properties:
                WebsiteConfiguration:
                  description: Specifies website configuration parameters for an Amazon S3 bucket.
                  type: object
                  properties:
                    ErrorDocument:
                      allOf:
                        - $ref: '#/components/schemas/ErrorDocument'
                        - description: The name of the error document for the website.
                    IndexDocument:
                      allOf:
                        - $ref: '#/components/schemas/IndexDocument'
                        - description: The name of the index document for the website.
                    RedirectAllRequestsTo:
                      allOf:
                        - $ref: '#/components/schemas/RedirectAllRequestsTo'
                        - description: '<p>The redirect behavior for every request to this bucket''s website endpoint.</p> <important> <p>If you specify this property, you can''t specify any other property.</p> </important>'
                    RoutingRules:
                      allOf:
                        - $ref: '#/components/schemas/RoutingRules'
                        - description: Rules that define when a redirect is applied and the redirect behavior.
  '/{Bucket}/{Key}':
    delete:
      operationId: DeleteObject
      description: '<p>Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the latest version of the object. If there isn''t a null version, Amazon S3 does not remove any objects but will still respond that the command was successful.</p> <p>To remove a specific version, you must use the version Id subresource. Using this subresource permanently deletes the version. If the object deleted is a delete marker, Amazon S3 sets the response header, <code>x-amz-delete-marker</code>, to true. </p> <p>If the object you want to delete is in a bucket where the bucket versioning configuration is MFA Delete enabled, you must include the <code>x-amz-mfa</code> request header in the DELETE <code>versionId</code> request. Requests that include <code>x-amz-mfa</code> must use HTTPS. </p> <p> For more information about MFA Delete, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html">Using MFA Delete</a>. To see sample requests that use versioning, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectDELETE.html#ExampleVersionObjectDelete">Sample Request</a>. </p> <p>You can delete objects by explicitly calling DELETE Object or configure its lifecycle (<a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html">PutBucketLifecycle</a>) to enable Amazon S3 to remove them for you. If you want to block users or accounts from removing or deleting objects from your bucket, you must deny them the <code>s3:DeleteObject</code>, <code>s3:DeleteObjectVersion</code>, and <code>s3:PutLifeCycleConfiguration</code> actions. </p> <p>The following action is related to <code>DeleteObject</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectDELETE.html'
      responses:
        '204':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteObjectOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name of the bucket containing the object. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Key name of the object to delete.
          schema:
            type: string
            minLength: 1
        - name: x-amz-mfa
          in: header
          required: false
          description: 'The concatenation of the authentication device''s serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA delete enabled.'
          schema:
            type: string
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-bypass-governance-retention
          in: header
          required: false
          description: 'Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process this operation. To use this header, you must have the <code>s3:BypassGovernanceRetention</code> permission.'
          schema:
            type: boolean
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetObject
      description: '<p>Retrieves objects from Amazon S3. To use <code>GET</code>, you must have <code>READ</code> access to the object. If you grant <code>READ</code> access to the anonymous user, you can return the object without using an authorization header.</p> <p>An Amazon S3 bucket has no directory hierarchy such as you would find in a typical computer file system. You can, however, create a logical hierarchy by using object key names that imply a folder structure. For example, instead of naming an object <code>sample.jpg</code>, you can name it <code>photos/2006/February/sample.jpg</code>.</p> <p>To get an object from such a logical hierarchy, specify the full key name for the object in the <code>GET</code> operation. For a virtual hosted-style request example, if you have the object <code>photos/2006/February/sample.jpg</code>, specify the resource as <code>/photos/2006/February/sample.jpg</code>. For a path-style request example, if you have the object <code>photos/2006/February/sample.jpg</code> in the bucket named <code>examplebucket</code>, specify the resource as <code>/examplebucket/photos/2006/February/sample.jpg</code>. For more information about request types, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html#VirtualHostingSpecifyBucket">HTTP Host Header Bucket Specification</a>.</p> <p>For more information about returning the ACL of an object, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html">GetObjectAcl</a>.</p> <p>If the object you are retrieving is stored in the S3 Glacier Flexible Retrieval or S3 Glacier Deep Archive storage class, or S3 Intelligent-Tiering Archive or S3 Intelligent-Tiering Deep Archive tiers, before you can retrieve the object you must first restore a copy using <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html">RestoreObject</a>. Otherwise, this action returns an <code>InvalidObjectState</code> error. For information about restoring archived objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/restoring-objects.html">Restoring Archived Objects</a>.</p> <p>Encryption request headers, like <code>x-amz-server-side-encryption</code>, should not be sent for GET requests if your object uses server-side encryption with Key Management Service (KMS) keys (SSE-KMS), dual-layer server-side encryption with Amazon Web Services KMS keys (DSSE-KMS), or server-side encryption with Amazon S3 managed encryption keys (SSE-S3). If your object does use these types of keys, you’ll get an HTTP 400 Bad Request error.</p> <p>If you encrypt an object by using server-side encryption with customer-provided encryption keys (SSE-C) when you store the object in Amazon S3, then when you GET the object, you must use the following headers:</p> <ul> <li> <p> <code>x-amz-server-side-encryption-customer-algorithm</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-customer-key</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-customer-key-MD5</code> </p> </li> </ul> <p>For more information about SSE-C, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption (Using Customer-Provided Encryption Keys)</a>.</p> <p>Assuming you have the relevant permission to read object tags, the response also returns the <code>x-amz-tagging-count</code> header that provides the count of number of tags associated with the object. You can use <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html">GetObjectTagging</a> to retrieve the tag set associated with an object.</p> <dl> <dt>Permissions</dt> <dd> <p>You need the relevant read object (or version) permission for this operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying Permissions in a Policy</a>. If the object that you request doesn’t exist, the error that Amazon S3 returns depends on whether you also have the <code>s3:ListBucket</code> permission.</p> <p>If you have the <code>s3:ListBucket</code> permission on the bucket, Amazon S3 returns an HTTP status code 404 (Not Found) error.</p> <p>If you don’t have the <code>s3:ListBucket</code> permission, Amazon S3 returns an HTTP status code 403 ("access denied") error.</p> </dd> <dt>Versioning</dt> <dd> <p>By default, the <code>GET</code> action returns the current version of an object. To return a different version, use the <code>versionId</code> subresource.</p> <note> <ul> <li> <p> If you supply a <code>versionId</code>, you need the <code>s3:GetObjectVersion</code> permission to access a specific version of an object. If you request a specific version, you do not need to have the <code>s3:GetObject</code> permission. If you request the current version without a specific version ID, only <code>s3:GetObject</code> permission is required. <code>s3:GetObjectVersion</code> permission won''t be required.</p> </li> <li> <p>If the current version of the object is a delete marker, Amazon S3 behaves as if the object was deleted and includes <code>x-amz-delete-marker: true</code> in the response.</p> </li> </ul> </note> <p>For more information about versioning, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html">PutBucketVersioning</a>. </p> </dd> <dt>Overriding Response Header Values</dt> <dd> <p>There are times when you want to override certain response header values in a <code>GET</code> response. For example, you might override the <code>Content-Disposition</code> response header value in your <code>GET</code> request.</p> <p>You can override values for a set of response headers using the following query parameters. These response header values are sent only on a successful request, that is, when status code 200 OK is returned. The set of headers you can override using these parameters is a subset of the headers that Amazon S3 accepts when you create an object. The response headers that you can override for the <code>GET</code> response are <code>Content-Type</code>, <code>Content-Language</code>, <code>Expires</code>, <code>Cache-Control</code>, <code>Content-Disposition</code>, and <code>Content-Encoding</code>. To override these header values in the <code>GET</code> response, you use the following request parameters.</p> <note> <p>You must sign the request, either using an Authorization header or a presigned URL, when using these parameters. They cannot be used with an unsigned (anonymous) request.</p> </note> <ul> <li> <p> <code>response-content-type</code> </p> </li> <li> <p> <code>response-content-language</code> </p> </li> <li> <p> <code>response-expires</code> </p> </li> <li> <p> <code>response-cache-control</code> </p> </li> <li> <p> <code>response-content-disposition</code> </p> </li> <li> <p> <code>response-content-encoding</code> </p> </li> </ul> </dd> <dt>Overriding Response Header Values</dt> <dd> <p>If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code> headers are present in the request as follows: <code>If-Match</code> condition evaluates to <code>true</code>, and; <code>If-Unmodified-Since</code> condition evaluates to <code>false</code>; then, S3 returns 200 OK and the data requested. </p> <p>If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code> headers are present in the request as follows:<code> If-None-Match</code> condition evaluates to <code>false</code>, and; <code>If-Modified-Since</code> condition evaluates to <code>true</code>; then, S3 returns 304 Not Modified response code.</p> <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p> </dd> </dl> <p>The following operations are related to <code>GetObject</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html">ListBuckets</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html">GetObjectAcl</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGET.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetObjectOutput'
        '480':
          description: NoSuchKey
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchKey'
        '481':
          description: InvalidObjectState
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidObjectState'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name containing the object. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using an Object Lambda access point the hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-object-lambda.<i>Region</i>.amazonaws.com.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.'
          schema:
            type: string
        - name: If-Modified-Since
          in: header
          required: false
          description: 'Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.'
          schema:
            type: string
            format: date-time
        - name: If-None-Match
          in: header
          required: false
          description: 'Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.'
          schema:
            type: string
        - name: If-Unmodified-Since
          in: header
          required: false
          description: 'Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.'
          schema:
            type: string
            format: date-time
        - name: Key
          in: path
          required: true
          description: Key of the object to get.
          schema:
            type: string
            minLength: 1
        - name: Range
          in: header
          required: false
          description: '<p>Downloads the specified range bytes of an object. For more information about the HTTP Range header, see <a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-range">https://www.rfc-editor.org/rfc/rfc9110.html#name-range</a>.</p> <note> <p>Amazon S3 doesn''t support retrieving multiple ranges of data per <code>GET</code> request.</p> </note>'
          schema:
            type: string
        - name: response-cache-control
          in: query
          required: false
          description: Sets the <code>Cache-Control</code> header of the response.
          schema:
            type: string
        - name: response-content-disposition
          in: query
          required: false
          description: Sets the <code>Content-Disposition</code> header of the response
          schema:
            type: string
        - name: response-content-encoding
          in: query
          required: false
          description: Sets the <code>Content-Encoding</code> header of the response.
          schema:
            type: string
        - name: response-content-language
          in: query
          required: false
          description: Sets the <code>Content-Language</code> header of the response.
          schema:
            type: string
        - name: response-content-type
          in: query
          required: false
          description: Sets the <code>Content-Type</code> header of the response.
          schema:
            type: string
        - name: response-expires
          in: query
          required: false
          description: Sets the <code>Expires</code> header of the response.
          schema:
            type: string
            format: date-time
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when decrypting the object (for example, AES256).'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 used to encrypt the data. This value is used to decrypt the object when recovering it and must match the one used when storing the data. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: partNumber
          in: query
          required: false
          description: 'Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a ''ranged'' GET request for the part specified. Useful for downloading just a part of an object.'
          schema:
            type: integer
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-checksum-mode
          in: header
          required: false
          description: 'To retrieve the checksum, this mode must be enabled.'
          schema:
            type: string
            enum:
              - ENABLED
    head:
      operationId: HeadObject
      description: '<p>The <code>HEAD</code> action retrieves metadata from an object without returning the object itself. This action is useful if you''re only interested in an object''s metadata. To use <code>HEAD</code>, you must have READ access to the object.</p> <p>A <code>HEAD</code> request has the same options as a <code>GET</code> action on an object. The response is identical to the <code>GET</code> response except that there is no response body. Because of this, if the <code>HEAD</code> request generates an error, it returns a generic <code>400 Bad Request</code>, <code>403 Forbidden</code> or <code>404 Not Found</code> code. It is not possible to retrieve the exact exception beyond these error codes.</p> <p>If you encrypt an object by using server-side encryption with customer-provided encryption keys (SSE-C) when you store the object in Amazon S3, then when you retrieve the metadata from the object, you must use the following headers:</p> <ul> <li> <p> <code>x-amz-server-side-encryption-customer-algorithm</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-customer-key</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-customer-key-MD5</code> </p> </li> </ul> <p>For more information about SSE-C, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption (Using Customer-Provided Encryption Keys)</a>.</p> <note> <ul> <li> <p>Encryption request headers, like <code>x-amz-server-side-encryption</code>, should not be sent for <code>GET</code> requests if your object uses server-side encryption with Key Management Service (KMS) keys (SSE-KMS), dual-layer server-side encryption with Amazon Web Services KMS keys (DSSE-KMS), or server-side encryption with Amazon S3 managed encryption keys (SSE-S3). If your object does use these types of keys, you’ll get an HTTP 400 Bad Request error.</p> </li> <li> <p> The last modified property in this case is the creation date of the object.</p> </li> </ul> </note> <p>Request headers are limited to 8 KB in size. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonRequestHeaders.html">Common Request Headers</a>.</p> <p>Consider the following when using request headers:</p> <ul> <li> <p> Consideration 1 – If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code> headers are present in the request as follows:</p> <ul> <li> <p> <code>If-Match</code> condition evaluates to <code>true</code>, and;</p> </li> <li> <p> <code>If-Unmodified-Since</code> condition evaluates to <code>false</code>;</p> </li> </ul> <p>Then Amazon S3 returns <code>200 OK</code> and the data requested.</p> </li> <li> <p> Consideration 2 – If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code> headers are present in the request as follows:</p> <ul> <li> <p> <code>If-None-Match</code> condition evaluates to <code>false</code>, and;</p> </li> <li> <p> <code>If-Modified-Since</code> condition evaluates to <code>true</code>;</p> </li> </ul> <p>Then Amazon S3 returns the <code>304 Not Modified</code> response code.</p> </li> </ul> <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p> <dl> <dt>Permissions</dt> <dd> <p>You need the relevant read object (or version) permission for this operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html">Actions, resources, and condition keys for Amazon S3</a>. If the object you request doesn''t exist, the error that Amazon S3 returns depends on whether you also have the s3:ListBucket permission.</p> <ul> <li> <p>If you have the <code>s3:ListBucket</code> permission on the bucket, Amazon S3 returns an HTTP status code 404 error.</p> </li> <li> <p>If you don’t have the <code>s3:ListBucket</code> permission, Amazon S3 returns an HTTP status code 403 error.</p> </li> </ul> </dd> </dl> <p>The following actions are related to <code>HeadObject</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html">GetObjectAttributes</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectHEAD.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HeadObjectOutput'
        '480':
          description: NoSuchKey
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchKey'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The name of the bucket containing the object.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.'
          schema:
            type: string
        - name: If-Modified-Since
          in: header
          required: false
          description: 'Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.'
          schema:
            type: string
            format: date-time
        - name: If-None-Match
          in: header
          required: false
          description: 'Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.'
          schema:
            type: string
        - name: If-Unmodified-Since
          in: header
          required: false
          description: 'Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.'
          schema:
            type: string
            format: date-time
        - name: Key
          in: path
          required: true
          description: The object key.
          schema:
            type: string
            minLength: 1
        - name: Range
          in: header
          required: false
          description: 'HeadObject returns only the metadata for an object. If the Range is satisfiable, only the <code>ContentLength</code> is affected in the response. If the Range is not satisfiable, S3 returns a <code>416 - Requested Range Not Satisfiable</code> error.'
          schema:
            type: string
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (for example, AES256).'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: partNumber
          in: query
          required: false
          description: 'Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a ''ranged'' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.'
          schema:
            type: integer
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-checksum-mode
          in: header
          required: false
          description: '<p>To retrieve the checksum, this parameter must be enabled.</p> <p>In addition, if you enable <code>ChecksumMode</code> and the object is encrypted with Amazon Web Services Key Management Service (Amazon Web Services KMS), you must have permission to use the <code>kms:Decrypt</code> action for the request to succeed.</p>'
          schema:
            type: string
            enum:
              - ENABLED
    put:
      operationId: PutObject
      description: '<p>Adds an object to a bucket. You must have WRITE permissions on a bucket to add an object to it.</p> <note> <p>Amazon S3 never adds partial objects; if you receive a success response, Amazon S3 added the entire object to the bucket. You cannot use <code>PutObject</code> to only update a single piece of metadata for an existing object. You must put the entire object with updated metadata if you want to update some values.</p> </note> <p>Amazon S3 is a distributed system. If it receives multiple write requests for the same object simultaneously, it overwrites all but the last object written. To prevent objects from being deleted or overwritten, you can use <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock.html">Amazon S3 Object Lock</a>.</p> <p>To ensure that data is not corrupted traversing the network, use the <code>Content-MD5</code> header. When you use this header, Amazon S3 checks the object against the provided MD5 value and, if they do not match, returns an error. Additionally, you can calculate the MD5 while putting an object to Amazon S3 and compare the returned ETag to the calculated MD5 value.</p> <note> <ul> <li> <p>To successfully complete the <code>PutObject</code> request, you must have the <code>s3:PutObject</code> in your IAM permissions.</p> </li> <li> <p>To successfully change the objects acl of your <code>PutObject</code> request, you must have the <code>s3:PutObjectAcl</code> in your IAM permissions.</p> </li> <li> <p>To successfully set the tag-set with your <code>PutObject</code> request, you must have the <code>s3:PutObjectTagging</code> in your IAM permissions.</p> </li> <li> <p> The <code>Content-MD5</code> header is required for any request to upload an object with a retention period configured using Amazon S3 Object Lock. For more information about Amazon S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html">Amazon S3 Object Lock Overview</a> in the <i>Amazon S3 User Guide</i>. </p> </li> </ul> </note> <p>You have four mutually exclusive options to protect data using server-side encryption in Amazon S3, depending on how you choose to manage the encryption keys. Specifically, the encryption key options are Amazon S3 managed keys (SSE-S3), Amazon Web Services KMS keys (SSE-KMS or DSSE-KMS), and customer-provided keys (SSE-C). Amazon S3 encrypts data with server-side encryption by using Amazon S3 managed keys (SSE-S3) by default. You can optionally tell Amazon S3 to encrypt data at rest by using server-side encryption with other key options. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html">Using Server-Side Encryption</a>.</p> <p>When adding a new object, you can use headers to grant ACL-based permissions to individual Amazon Web Services accounts or to predefined groups defined by Amazon S3. These permissions are then added to the ACL on the object. By default, all objects are private. Only the owner has full access control. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-using-rest-api.html">Managing ACLs Using the REST API</a>. </p> <p>If the bucket that you''re uploading objects to uses the bucket owner enforced setting for S3 Object Ownership, ACLs are disabled and no longer affect permissions. Buckets that use this setting only accept PUT requests that don''t specify an ACL or PUT requests that specify bucket owner full control ACLs, such as the <code>bucket-owner-full-control</code> canned ACL or an equivalent form of this ACL expressed in the XML format. PUT requests that contain other ACLs (for example, custom grants to certain Amazon Web Services accounts) fail and return a <code>400</code> error with the error code <code>AccessControlListNotSupported</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html"> Controlling ownership of objects and disabling ACLs</a> in the <i>Amazon S3 User Guide</i>.</p> <note> <p>If your bucket uses the bucket owner enforced setting for Object Ownership, all objects written to the bucket by any account will be owned by the bucket owner.</p> </note> <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you enable versioning for a bucket, Amazon S3 automatically generates a unique version ID for the object being stored. Amazon S3 returns this ID in the response. When you enable versioning for a bucket, if Amazon S3 receives multiple write requests for the same object simultaneously, it stores all of the objects. For more information about versioning, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/AddingObjectstoVersioningEnabledBuckets.html">Adding Objects to Versioning-Enabled Buckets</a>. For information about returning the versioning state of a bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html">GetBucketVersioning</a>. </p> <p>For more information about related Amazon S3 APIs, see the following:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html">CopyObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUT.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PutObjectOutput'
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: '<p>The canned ACL to apply to the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned ACL</a>.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>'
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - aws-exec-read
              - bucket-owner-read
              - bucket-owner-full-control
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name to which the PUT action was initiated. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Cache-Control
          in: header
          required: false
          description: ' Can be used to specify caching behavior along the request/reply chain. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.'
          schema:
            type: string
        - name: Content-Disposition
          in: header
          required: false
          description: 'Specifies presentational information for the object. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc6266#section-4">https://www.rfc-editor.org/rfc/rfc6266#section-4</a>.'
          schema:
            type: string
        - name: Content-Encoding
          in: header
          required: false
          description: 'Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc9110.html#field.content-encoding">https://www.rfc-editor.org/rfc/rfc9110.html#field.content-encoding</a>.'
          schema:
            type: string
        - name: Content-Language
          in: header
          required: false
          description: The language the content is in.
          schema:
            type: string
        - name: Content-Length
          in: header
          required: false
          description: 'Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-content-length">https://www.rfc-editor.org/rfc/rfc9110.html#name-content-length</a>.'
          schema:
            type: integer
        - name: Content-MD5
          in: header
          required: false
          description: 'The base64-encoded 128-bit MD5 digest of the message (without the headers) according to RFC 1864. This header can be used as a message integrity check to verify that the data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check. For more information about REST request authentication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">REST Authentication</a>.'
          schema:
            type: string
        - name: Content-Type
          in: header
          required: false
          description: 'A standard MIME type describing the format of the contents. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-content-type">https://www.rfc-editor.org/rfc/rfc9110.html#name-content-type</a>.'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-checksum-crc32
          in: header
          required: false
          description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-checksum-crc32c
          in: header
          required: false
          description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-checksum-sha1
          in: header
          required: false
          description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-checksum-sha256
          in: header
          required: false
          description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: Expires
          in: header
          required: false
          description: 'The date and time at which the object is no longer cacheable. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc7234#section-5.3">https://www.rfc-editor.org/rfc/rfc7234#section-5.3</a>.'
          schema:
            type: string
            format: date-time
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: '<p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>'
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: <p>Allows grantee to read the object data and its metadata.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: <p>Allows grantee to read the object ACL.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: <p>Allows grantee to write the ACL for the applicable object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Object key for which the PUT action was initiated.
          schema:
            type: string
            minLength: 1
        - name: x-amz-server-side-encryption
          in: header
          required: false
          description: 'The server-side encryption algorithm used when storing this object in Amazon S3 (for example, <code>AES256</code>, <code>aws:kms</code>, <code>aws:kms:dsse</code>).'
          schema:
            type: string
            enum:
              - AES256
              - 'aws:kms'
              - 'aws:kms:dsse'
        - name: x-amz-storage-class
          in: header
          required: false
          description: 'By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
            enum:
              - STANDARD
              - REDUCED_REDUNDANCY
              - STANDARD_IA
              - ONEZONE_IA
              - INTELLIGENT_TIERING
              - GLACIER
              - DEEP_ARCHIVE
              - OUTPOSTS
              - GLACIER_IR
              - SNOW
        - name: x-amz-website-redirect-location
          in: header
          required: false
          description: '<p>If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata. For information about object metadata, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html">Object Key and Metadata</a>.</p> <p>In the following example, the request header sets the redirect to an object (anotherPage.html) in the same bucket:</p> <p> <code>x-amz-website-redirect-location: /anotherPage.html</code> </p> <p>In the following example, the request header sets the object redirect to another website:</p> <p> <code>x-amz-website-redirect-location: http://www.example.com/</code> </p> <p>For more information about website hosting in Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting Websites on Amazon S3</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html">How to Configure Website Page Redirects</a>. </p>'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (for example, AES256).'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-server-side-encryption-aws-kms-key-id
          in: header
          required: false
          description: 'If <code>x-amz-server-side-encryption</code> has a valid value of <code>aws:kms</code> or <code>aws:kms:dsse</code>, this header specifies the ID of the Key Management Service (KMS) symmetric encryption customer managed key that was used for the object. If you specify <code>x-amz-server-side-encryption:aws:kms</code> or <code>x-amz-server-side-encryption:aws:kms:dsse</code>, but do not provide<code> x-amz-server-side-encryption-aws-kms-key-id</code>, Amazon S3 uses the Amazon Web Services managed key (<code>aws/s3</code>) to protect the data. If the KMS key does not exist in the same account that''s issuing the command, you must use the full ARN and not just the ID. '
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-context
          in: header
          required: false
          description: Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs. This value is stored as object metadata and automatically gets passed on to Amazon Web Services KMS for future <code>GetObject</code> or <code>CopyObject</code> operations on this object.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-bucket-key-enabled
          in: header
          required: false
          description: <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using Key Management Service (KMS) keys (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p> <p>Specifying this header with a PUT action doesn’t affect bucket-level settings for S3 Bucket Key.</p>
          schema:
            type: boolean
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-tagging
          in: header
          required: false
          description: 'The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For example, "Key1=Value1")'
          schema:
            type: string
        - name: x-amz-object-lock-mode
          in: header
          required: false
          description: The Object Lock mode that you want to apply to this object.
          schema:
            type: string
            enum:
              - GOVERNANCE
              - COMPLIANCE
        - name: x-amz-object-lock-retain-until-date
          in: header
          required: false
          description: The date and time when you want this object's Object Lock to expire. Must be formatted as a timestamp parameter.
          schema:
            type: string
            format: date-time
        - name: x-amz-object-lock-legal-hold
          in: header
          required: false
          description: 'Specifies whether a legal hold will be applied to this object. For more information about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Object Lock</a>.'
          schema:
            type: string
            enum:
              - 'ON'
              - 'OFF'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                Body:
                  description: Object data.
                  type: string
                x-amz-meta-:
                  description: A map of metadata to store with the object in S3.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/MetadataValue'
  '/{Bucket}/{Key}#tagging':
    delete:
      operationId: DeleteObjectTagging
      description: '<p>Removes the entire tag set from the specified object. For more information about managing object tags, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html"> Object Tagging</a>.</p> <p>To use this operation, you must have permission to perform the <code>s3:DeleteObjectTagging</code> action.</p> <p>To delete tags of a specific object version, add the <code>versionId</code> query parameter in the request. You will need permission for the <code>s3:DeleteObjectVersionTagging</code> action.</p> <p>The following operations are related to <code>DeleteObjectTagging</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html">PutObjectTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html">GetObjectTagging</a> </p> </li> </ul>'
      responses:
        '204':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteObjectTaggingOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name containing the objects from which to remove the tags. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The key that identifies the object in the bucket from which to remove all tags.
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: The versionId of the object that the tag-set will be removed from.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: tagging
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetObjectTagging
      description: '<p>Returns the tag-set of an object. You send the GET request against the tagging subresource associated with the object.</p> <p>To use this operation, you must have permission to perform the <code>s3:GetObjectTagging</code> action. By default, the GET action returns information about current version of an object. For a versioned bucket, you can have multiple versions of an object in your bucket. To retrieve tags of any other version, use the versionId query parameter. You also need permission for the <code>s3:GetObjectVersionTagging</code> action.</p> <p> By default, the bucket owner has this permission and can grant this permission to others.</p> <p> For information about the Amazon S3 object tagging feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html">Object Tagging</a>.</p> <p>The following actions are related to <code>GetObjectTagging</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html">DeleteObjectTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html">GetObjectAttributes</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html">PutObjectTagging</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetObjectTaggingOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name containing the object for which to get the tagging information. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Object key for which to get the tagging information.
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: The versionId of the object for which to get the tagging information.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: tagging
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutObjectTagging
      description: '<p>Sets the supplied tag-set to an object that already exists in a bucket.</p> <p>A tag is a key-value pair. You can associate tags with an object by sending a PUT request against the tagging subresource that is associated with the object. You can retrieve tags by sending a GET request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html">GetObjectTagging</a>.</p> <p>For tagging-related restrictions related to characters and encodings, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">Tag Restrictions</a>. Note that Amazon S3 limits the maximum number of tags to 10 tags per object.</p> <p>To use this operation, you must have permission to perform the <code>s3:PutObjectTagging</code> action. By default, the bucket owner has this permission and can grant this permission to others.</p> <p>To put tags of any other version, use the <code>versionId</code> query parameter. You also need permission for the <code>s3:PutObjectVersionTagging</code> action.</p> <p>For information about the Amazon S3 object tagging feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html">Object Tagging</a>.</p> <p> <code>PutObjectTagging</code> has the following special errors:</p> <ul> <li> <ul> <li> <p> <i>Code: InvalidTagError </i> </p> </li> <li> <p> <i>Cause: The tag provided was not a valid tag. This error can occur if the tag did not pass input validation. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html">Object Tagging</a>.</i> </p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code: MalformedXMLError </i> </p> </li> <li> <p> <i>Cause: The XML provided does not match the schema.</i> </p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code: OperationAbortedError </i> </p> </li> <li> <p> <i>Cause: A conflicting conditional action is currently in progress against this resource. Please try again.</i> </p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code: InternalError</i> </p> </li> <li> <p> <i>Cause: The service was unable to apply the provided tag to the object.</i> </p> </li> </ul> </li> </ul> <p>The following operations are related to <code>PutObjectTagging</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html">GetObjectTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html">DeleteObjectTagging</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PutObjectTaggingOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name containing the object. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Name of the object key.
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: The versionId of the object that the tag-set will be added to.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The MD5 hash for the request body.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: tagging
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Tagging
              properties:
                Tagging:
                  description: Container for <code>TagSet</code> elements.
                  type: object
                  properties:
                    TagSet:
                      allOf:
                        - $ref: '#/components/schemas/TagSet'
                        - description: A collection for a set of tags
  '/{Bucket}#delete':
    post:
      operationId: DeleteObjects
      description: '<p>This action enables you to delete multiple objects from a bucket using a single HTTP request. If you know the object keys that you want to delete, then this action provides a suitable alternative to sending individual delete requests, reducing per-request overhead.</p> <p>The request contains a list of up to 1000 keys that you want to delete. In the XML, you provide the object key names, and optionally, version IDs if you want to delete a specific version of the object from a versioning-enabled bucket. For each key, Amazon S3 performs a delete action and returns the result of that delete, success, or failure, in the response. Note that if the object specified in the request is not found, Amazon S3 returns the result as deleted.</p> <p> The action supports two modes for the response: verbose and quiet. By default, the action uses verbose mode in which the response includes the result of deletion of each key in your request. In quiet mode the response includes only keys where the delete action encountered an error. For a successful deletion, the action does not return any information about the delete in the response body.</p> <p>When performing this action on an MFA Delete enabled bucket, that attempts to delete any versioned objects, you must include an MFA token. If you do not provide one, the entire request will fail, even if there are non-versioned objects you are trying to delete. If you provide an invalid token, whether there are versioned keys in the request or not, the entire Multi-Object Delete request will fail. For information about MFA Delete, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html#MultiFactorAuthenticationDelete"> MFA Delete</a>.</p> <p>Finally, the Content-MD5 header is required for all Multi-Object Delete requests. Amazon S3 uses the header value to ensure that your request body has not been altered in transit.</p> <p>The following operations are related to <code>DeleteObjects</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html">CompleteMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html">AbortMultipartUpload</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/multiobjectdeleteapi.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteObjectsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name containing the objects to delete. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: x-amz-mfa
          in: header
          required: false
          description: 'The concatenation of the authentication device''s serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA delete enabled.'
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-bypass-governance-retention
          in: header
          required: false
          description: 'Specifies whether you want to delete this object even if it has a Governance-type Object Lock in place. To use this header, you must have the <code>s3:BypassGovernanceRetention</code> permission.'
          schema:
            type: boolean
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p> <p>This checksum algorithm must be the same for all parts and it match the checksum value supplied in the <code>CreateMultipartUpload</code> request.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: delete
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Delete
              properties:
                Delete:
                  description: Container for the objects to delete.
                  type: object
                  properties:
                    Objects:
                      allOf:
                        - $ref: '#/components/schemas/ObjectIdentifierList'
                        - xml:
                            name: Object
                          description: The object to delete.
                    Quiet:
                      allOf:
                        - $ref: '#/components/schemas/Quiet'
                        - description: 'Element to enable quiet mode for the request. When you add this element, you must set its value to true.'
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}#publicAccessBlock':
    delete:
      operationId: DeletePublicAccessBlock
      description: '<p>Removes the <code>PublicAccessBlock</code> configuration for an Amazon S3 bucket. To use this operation, you must have the <code>s3:PutBucketPublicAccessBlock</code> permission. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p>The following operations are related to <code>DeletePublicAccessBlock</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html">Using Amazon S3 Block Public Access</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html">GetPublicAccessBlock</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html">PutPublicAccessBlock</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicyStatus.html">GetBucketPolicyStatus</a> </p> </li> </ul>'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: 'The Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to delete. '
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: publicAccessBlock
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    get:
      operationId: GetPublicAccessBlock
      description: '<p>Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon S3 bucket. To use this operation, you must have the <code>s3:GetBucketPublicAccessBlock</code> permission. For more information about Amazon S3 permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying Permissions in a Policy</a>.</p> <important> <p>When Amazon S3 evaluates the <code>PublicAccessBlock</code> configuration for a bucket or an object, it checks the <code>PublicAccessBlock</code> configuration for both the bucket (or the bucket that contains the object) and the bucket owner''s account. If the <code>PublicAccessBlock</code> settings are different between the bucket and the account, Amazon S3 uses the most restrictive combination of the bucket-level and account-level settings.</p> </important> <p>For more information about when Amazon S3 considers a bucket or an object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a>.</p> <p>The following operations are related to <code>GetPublicAccessBlock</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html">Using Amazon S3 Block Public Access</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html">PutPublicAccessBlock</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html">GetPublicAccessBlock</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html">DeletePublicAccessBlock</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPublicAccessBlockOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: 'The name of the Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to retrieve. '
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: publicAccessBlock
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    put:
      operationId: PutPublicAccessBlock
      description: '<p>Creates or modifies the <code>PublicAccessBlock</code> configuration for an Amazon S3 bucket. To use this operation, you must have the <code>s3:PutBucketPublicAccessBlock</code> permission. For more information about Amazon S3 permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying Permissions in a Policy</a>.</p> <important> <p>When Amazon S3 evaluates the <code>PublicAccessBlock</code> configuration for a bucket or an object, it checks the <code>PublicAccessBlock</code> configuration for both the bucket (or the bucket that contains the object) and the bucket owner''s account. If the <code>PublicAccessBlock</code> configurations are different between the bucket and the account, Amazon S3 uses the most restrictive combination of the bucket-level and account-level settings.</p> </important> <p>For more information about when Amazon S3 considers a bucket or an object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a>.</p> <p>The following operations are related to <code>PutPublicAccessBlock</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html">GetPublicAccessBlock</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html">DeletePublicAccessBlock</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicyStatus.html">GetBucketPolicyStatus</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html">Using Amazon S3 Block Public Access</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to set.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The MD5 hash of the <code>PutPublicAccessBlock</code> request body. </p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: publicAccessBlock
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - PublicAccessBlockConfiguration
              properties:
                PublicAccessBlockConfiguration:
                  description: 'The PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>. '
                  type: object
                  properties:
                    BlockPublicAcls:
                      allOf:
                        - $ref: '#/components/schemas/Setting'
                        - description: '<p>Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.</p> </li> <li> <p>PUT Object calls fail if the request includes a public ACL.</p> </li> <li> <p>PUT Bucket calls fail if the request includes a public ACL.</p> </li> </ul> <p>Enabling this setting doesn''t affect existing policies or ACLs.</p>'
                    IgnorePublicAcls:
                      allOf:
                        - $ref: '#/components/schemas/Setting'
                        - description: <p>Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.</p> <p>Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>
                    BlockPublicPolicy:
                      allOf:
                        - $ref: '#/components/schemas/Setting'
                        - description: <p>Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Enabling this setting doesn't affect existing bucket policies.</p>
                    RestrictPublicBuckets:
                      allOf:
                        - $ref: '#/components/schemas/Setting'
                        - description: '<p>Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to <code>TRUE</code> restricts access to this bucket to only Amazon Web Service principals and authorized users within this account if the bucket has a public policy.</p> <p>Enabling this setting doesn''t affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.</p>'
  '/{Bucket}#accelerate':
    get:
      operationId: GetBucketAccelerateConfiguration
      description: '<p>This implementation of the GET action uses the <code>accelerate</code> subresource to return the Transfer Acceleration state of a bucket, which is either <code>Enabled</code> or <code>Suspended</code>. Amazon S3 Transfer Acceleration is a bucket-level feature that enables you to perform faster data transfers to and from Amazon S3.</p> <p>To use this operation, you must have permission to perform the <code>s3:GetAccelerateConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to your Amazon S3 Resources</a> in the <i>Amazon S3 User Guide</i>.</p> <p>You set the Transfer Acceleration state of an existing bucket to <code>Enabled</code> or <code>Suspended</code> by using the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAccelerateConfiguration.html">PutBucketAccelerateConfiguration</a> operation. </p> <p>A GET <code>accelerate</code> request does not return a state value for a bucket that has no transfer acceleration state. A bucket has no Transfer Acceleration state if a state has never been set on the bucket. </p> <p>For more information about transfer acceleration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Transfer Acceleration</a> in the Amazon S3 User Guide.</p> <p>The following operations are related to <code>GetBucketAccelerateConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAccelerateConfiguration.html">PutBucketAccelerateConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketAccelerateConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket for which the accelerate configuration is retrieved.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: accelerate
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    put:
      operationId: PutBucketAccelerateConfiguration
      description: '<p>Sets the accelerate configuration of an existing bucket. Amazon S3 Transfer Acceleration is a bucket-level feature that enables you to perform faster data transfers to Amazon S3.</p> <p> To use this operation, you must have permission to perform the <code>s3:PutAccelerateConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p> The Transfer Acceleration state of a bucket can be set to one of the following two values:</p> <ul> <li> <p> Enabled – Enables accelerated data transfers to the bucket.</p> </li> <li> <p> Suspended – Disables accelerated data transfers to the bucket.</p> </li> </ul> <p>The <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html">GetBucketAccelerateConfiguration</a> action returns the transfer acceleration state of a bucket.</p> <p>After setting the Transfer Acceleration state of a bucket to Enabled, it might take up to thirty minutes before the data transfer rates to the bucket increase.</p> <p> The name of the bucket used for Transfer Acceleration must be DNS-compliant and must not contain periods (".").</p> <p> For more information about transfer acceleration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Transfer Acceleration</a>.</p> <p>The following operations are related to <code>PutBucketAccelerateConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html">GetBucketAccelerateConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket for which the accelerate configuration is set.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: accelerate
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - AccelerateConfiguration
              properties:
                AccelerateConfiguration:
                  description: 'Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Amazon S3 Transfer Acceleration</a> in the <i>Amazon S3 User Guide</i>.'
                  type: object
                  properties:
                    Status:
                      allOf:
                        - $ref: '#/components/schemas/BucketAccelerateStatus'
                        - description: Specifies the transfer acceleration status of the bucket.
  '/{Bucket}#acl':
    get:
      operationId: GetBucketAcl
      description: '<p>This implementation of the <code>GET</code> action uses the <code>acl</code> subresource to return the access control list (ACL) of a bucket. To use <code>GET</code> to return the ACL of the bucket, you must have <code>READ_ACP</code> access to the bucket. If <code>READ_ACP</code> permission is granted to the anonymous user, you can return the ACL of the bucket without using an authorization header.</p> <p>To use this API operation against an access point, provide the alias of the access point in place of the bucket name.</p> <p>To use this API operation against an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p> <note> <p>If your bucket uses the bucket owner enforced setting for S3 Object Ownership, requests to read ACLs are still supported and return the <code>bucket-owner-full-control</code> ACL with the owner being the account that created the bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html"> Controlling object ownership and disabling ACLs</a> in the <i>Amazon S3 User Guide</i>.</p> </note> <p>The following operations are related to <code>GetBucketAcl</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html">ListObjects</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETacl.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketAclOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>Specifies the S3 bucket whose ACL is being requested.</p> <p>To use this API operation against an access point, provide the alias of the access point in place of the bucket name.</p> <p>To use this API operation against an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p>'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: acl
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    put:
      operationId: PutBucketAcl
      description: '<p>Sets the permissions on an existing bucket using access control lists (ACL). For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html">Using ACLs</a>. To set the ACL of a bucket, you must have <code>WRITE_ACP</code> permission.</p> <p>You can use one of the following two ways to set a bucket''s permissions:</p> <ul> <li> <p>Specify the ACL in the request body</p> </li> <li> <p>Specify permissions using request headers</p> </li> </ul> <note> <p>You cannot specify access permission using both the body and the request headers.</p> </note> <p>Depending on your application needs, you may choose to set the ACL on a bucket using either the request body or the headers. For example, if you have an existing application that updates a bucket ACL using the request body, then you can continue to use that approach.</p> <important> <p>If your bucket uses the bucket owner enforced setting for S3 Object Ownership, ACLs are disabled and no longer affect permissions. You must use policies to grant access to your bucket and the objects in it. Requests to set ACLs or update ACLs fail and return the <code>AccessControlListNotSupported</code> error code. Requests to read ACLs are still supported. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html">Controlling object ownership</a> in the <i>Amazon S3 User Guide</i>.</p> </important> <dl> <dt>Permissions</dt> <dd> <p>You can set access permissions by using one of the following methods:</p> <ul> <li> <p>Specify a canned ACL with the <code>x-amz-acl</code> request header. Amazon S3 supports a set of predefined ACLs, known as <i>canned ACLs</i>. Each canned ACL has a predefined set of grantees and permissions. Specify the canned ACL name as the value of <code>x-amz-acl</code>. If you use this header, you cannot use other access control-specific headers in your request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned ACL</a>.</p> </li> <li> <p>Specify access permissions explicitly with the <code>x-amz-grant-read</code>, <code>x-amz-grant-read-acp</code>, <code>x-amz-grant-write-acp</code>, and <code>x-amz-grant-full-control</code> headers. When using these headers, you specify explicit access permissions and grantees (Amazon Web Services accounts or Amazon S3 groups) who will receive the permission. If you use these ACL-specific headers, you cannot use the <code>x-amz-acl</code> header to set a canned ACL. These parameters map to the set of permissions that Amazon S3 supports in an ACL. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a>.</p> <p>You specify each grantee as a type=value pair, where the type is one of the following:</p> <ul> <li> <p> <code>id</code> – if the value specified is the canonical user ID of an Amazon Web Services account</p> </li> <li> <p> <code>uri</code> – if you are granting permissions to a predefined group</p> </li> <li> <p> <code>emailAddress</code> – if the value specified is the email address of an Amazon Web Services account</p> <note> <p>Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: </p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p> US West (Oregon)</p> </li> <li> <p> Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p> </note> </li> </ul> <p>For example, the following <code>x-amz-grant-write</code> header grants create, overwrite, and delete objects permission to LogDelivery group predefined by Amazon S3 and two Amazon Web Services accounts identified by their email addresses.</p> <p> <code>x-amz-grant-write: uri="http://acs.amazonaws.com/groups/s3/LogDelivery", id="111122223333", id="555566667777" </code> </p> </li> </ul> <p>You can use either a canned ACL or specify access permissions explicitly. You cannot do both.</p> </dd> <dt>Grantee Values</dt> <dd> <p>You can specify the person (grantee) to whom you''re assigning access rights (using request elements) in the following ways:</p> <ul> <li> <p>By the person''s ID:</p> <p> <code>&lt;Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser"&gt;&lt;ID&gt;&lt;&gt;ID&lt;&gt;&lt;/ID&gt;&lt;DisplayName&gt;&lt;&gt;GranteesEmail&lt;&gt;&lt;/DisplayName&gt; &lt;/Grantee&gt;</code> </p> <p>DisplayName is optional and ignored in the request</p> </li> <li> <p>By URI:</p> <p> <code>&lt;Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group"&gt;&lt;URI&gt;&lt;&gt;http://acs.amazonaws.com/groups/global/AuthenticatedUsers&lt;&gt;&lt;/URI&gt;&lt;/Grantee&gt;</code> </p> </li> <li> <p>By Email address:</p> <p> <code>&lt;Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="AmazonCustomerByEmail"&gt;&lt;EmailAddress&gt;&lt;&gt;Grantees@email.com&lt;&gt;&lt;/EmailAddress&gt;&amp;&lt;/Grantee&gt;</code> </p> <p>The grantee is resolved to the CanonicalUser and, in a response to a GET Object acl request, appears as the CanonicalUser. </p> <note> <p>Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: </p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p> US West (Oregon)</p> </li> <li> <p> Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p> </note> </li> </ul> </dd> </dl> <p>The following operations are related to <code>PutBucketAcl</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html">DeleteBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html">GetObjectAcl</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTacl.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the bucket.
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
        - name: Bucket
          in: path
          required: true
          description: The bucket to which to apply the ACL.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The base64-encoded 128-bit MD5 digest of the data. This header must be used as a message integrity check to verify that the request body was not corrupted in transit. For more information, go to <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864.</a> </p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: 'Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.'
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to list the objects in the bucket.
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the bucket ACL.
          schema:
            type: string
        - name: x-amz-grant-write
          in: header
          required: false
          description: '<p>Allows grantee to create new objects in the bucket.</p> <p>For the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.</p>'
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable bucket.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: acl
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                AccessControlPolicy:
                  description: Contains the elements that set the ACL permissions for an object per grantee.
                  type: object
                  properties:
                    Grants:
                      allOf:
                        - $ref: '#/components/schemas/Grants'
                        - xml:
                            name: AccessControlList
                          description: A list of grants.
                    Owner:
                      allOf:
                        - $ref: '#/components/schemas/Owner'
                        - description: Container for the bucket owner's display name and ID.
  '/{Bucket}#lifecycle&deprecated!':
    get:
      deprecated: true
      operationId: GetBucketLifecycle
      description: '<important> <p>For an updated version of this API, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a>. If you configured a bucket lifecycle using the <code>filter</code> element, you should see the updated version of this topic. This topic is provided for backward compatibility.</p> </important> <p>Returns the lifecycle configuration information set on the bucket. For information about lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object Lifecycle Management</a>.</p> <p> To use this operation, you must have permission to perform the <code>s3:GetLifecycleConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p> <code>GetBucketLifecycle</code> has the following special error:</p> <ul> <li> <p>Error code: <code>NoSuchLifecycleConfiguration</code> </p> <ul> <li> <p>Description: The lifecycle configuration does not exist.</p> </li> <li> <p>HTTP Status Code: 404 Not Found</p> </li> <li> <p>SOAP Fault Code Prefix: Client</p> </li> </ul> </li> </ul> <p>The following operations are related to <code>GetBucketLifecycle</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html">PutBucketLifecycle</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html">DeleteBucketLifecycle</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlifecycle.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketLifecycleOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket for which to get the lifecycle information.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: lifecycle
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    put:
      deprecated: true
      operationId: PutBucketLifecycle
      description: '<important> <p>For an updated version of this API, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a>. This version has been deprecated. Existing lifecycle configurations will work. For new lifecycle configurations, use the updated API. </p> </important> <p>Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle configuration. For information about lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object Lifecycle Management</a> in the <i>Amazon S3 User Guide</i>. </p> <p>By default, all Amazon S3 resources, including buckets, objects, and related subresources (for example, lifecycle configuration and website configuration) are private. Only the resource owner, the Amazon Web Services account that created the resource, can access it. The resource owner can optionally grant access permissions to others by writing an access policy. For this operation, users must get the <code>s3:PutLifecycleConfiguration</code> permission.</p> <p>You can also explicitly deny permissions. Explicit denial also supersedes any other permissions. If you want to prevent users or accounts from removing or deleting objects from your bucket, you must deny them permissions for the following actions: </p> <ul> <li> <p> <code>s3:DeleteObject</code> </p> </li> <li> <p> <code>s3:DeleteObjectVersion</code> </p> </li> <li> <p> <code>s3:PutLifecycleConfiguration</code> </p> </li> </ul> <p>For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to your Amazon S3 Resources</a> in the <i>Amazon S3 User Guide</i>.</p> <p>For more examples of transitioning objects to storage classes such as STANDARD_IA or ONEZONE_IA, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#lifecycle-configuration-examples">Examples of Lifecycle Configuration</a>.</p> <p>The following operations are related to <code>PutBucketLifecycle</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycle.html">GetBucketLifecycle</a>(Deprecated)</p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html">RestoreObject</a> </p> </li> <li> <p>By default, a resource owner—in this case, a bucket owner, which is the Amazon Web Services account that created the bucket—can perform any of the operations. A resource owner can also grant others permission to perform the operation. For more information, see the following topics in the Amazon S3 User Guide: </p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying Permissions in a Policy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to your Amazon S3 Resources</a> </p> </li> </ul> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p/> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: lifecycle
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                LifecycleConfiguration:
                  description: '<p>Container for lifecycle rules. You can add as many as 1000 rules.</p> <p>For more information see, <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html">Managing your storage lifecycle</a> in the <i>Amazon S3 User Guide</i>.</p>'
                  type: object
                  properties:
                    Rules:
                      allOf:
                        - $ref: '#/components/schemas/Rules'
                        - xml:
                            name: Rule
                          description: 'Specifies lifecycle configuration rules for an Amazon S3 bucket. '
  '/{Bucket}#location':
    get:
      operationId: GetBucketLocation
      description: '<p>Returns the Region the bucket resides in. You set the bucket''s Region using the <code>LocationConstraint</code> request parameter in a <code>CreateBucket</code> request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a>.</p> <p>To use this API operation against an access point, provide the alias of the access point in place of the bucket name.</p> <p>To use this API operation against an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p> <note> <p>We recommend that you use <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_HeadBucket.html">HeadBucket</a> to return the Region that a bucket resides in. For backward compatibility, Amazon S3 continues to support GetBucketLocation.</p> </note> <p>The following operations are related to <code>GetBucketLocation</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlocation.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketLocationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The name of the bucket for which to get the location.</p> <p>To use this API operation against an access point, provide the alias of the access point in place of the bucket name.</p> <p>To use this API operation against an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p>'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: location
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}#logging':
    get:
      operationId: GetBucketLogging
      description: '<p>Returns the logging status of a bucket and the permissions users have to view and modify that status.</p> <p>The following operations are related to <code>GetBucketLogging</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLogging.html">PutBucketLogging</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlogging.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketLoggingOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket name for which to get the logging information.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: logging
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    put:
      operationId: PutBucketLogging
      description: '<p>Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. All logs are saved to buckets in the same Amazon Web Services Region as the source bucket. To set the logging status of a bucket, you must be the bucket owner.</p> <p>The bucket owner is automatically granted FULL_CONTROL to all logs. You use the <code>Grantee</code> request element to grant access to other people. The <code>Permissions</code> request element specifies the kind of access the grantee has to the logs.</p> <important> <p>If the target bucket for log delivery uses the bucket owner enforced setting for S3 Object Ownership, you can''t use the <code>Grantee</code> request element to grant access to others. Permissions can only be granted using policies. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-server-access-logging.html#grant-log-delivery-permissions-general">Permissions for server access log delivery</a> in the <i>Amazon S3 User Guide</i>.</p> </important> <dl> <dt>Grantee Values</dt> <dd> <p>You can specify the person (grantee) to whom you''re assigning access rights (by using request elements) in the following ways:</p> <ul> <li> <p>By the person''s ID:</p> <p> <code>&lt;Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser"&gt;&lt;ID&gt;&lt;&gt;ID&lt;&gt;&lt;/ID&gt;&lt;DisplayName&gt;&lt;&gt;GranteesEmail&lt;&gt;&lt;/DisplayName&gt; &lt;/Grantee&gt;</code> </p> <p> <code>DisplayName</code> is optional and ignored in the request.</p> </li> <li> <p>By Email address:</p> <p> <code> &lt;Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="AmazonCustomerByEmail"&gt;&lt;EmailAddress&gt;&lt;&gt;Grantees@email.com&lt;&gt;&lt;/EmailAddress&gt;&lt;/Grantee&gt;</code> </p> <p>The grantee is resolved to the <code>CanonicalUser</code> and, in a response to a <code>GETObjectAcl</code> request, appears as the CanonicalUser.</p> </li> <li> <p>By URI:</p> <p> <code>&lt;Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group"&gt;&lt;URI&gt;&lt;&gt;http://acs.amazonaws.com/groups/global/AuthenticatedUsers&lt;&gt;&lt;/URI&gt;&lt;/Grantee&gt;</code> </p> </li> </ul> </dd> </dl> <p>To enable logging, you use <code>LoggingEnabled</code> and its children request elements. To disable logging, you use an empty <code>BucketLoggingStatus</code> request element:</p> <p> <code>&lt;BucketLoggingStatus xmlns="http://doc.s3.amazonaws.com/2006-03-01" /&gt;</code> </p> <p>For more information about server access logging, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerLogs.html">Server Access Logging</a> in the <i>Amazon S3 User Guide</i>. </p> <p>For more information about creating a bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a>. For more information about returning the logging status of a bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLogging.html">GetBucketLogging</a>.</p> <p>The following operations are related to <code>PutBucketLogging</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html">DeleteBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLogging.html">GetBucketLogging</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlogging.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket for which to set the logging parameters.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The MD5 hash of the <code>PutBucketLogging</code> request body.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: logging
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - BucketLoggingStatus
              properties:
                BucketLoggingStatus:
                  description: Container for logging status information.
                  type: object
                  properties:
                    LoggingEnabled:
                      $ref: '#/components/schemas/LoggingEnabled'
  '/{Bucket}#notification':
    get:
      operationId: GetBucketNotificationConfiguration
      description: '<p>Returns the notification configuration of a bucket.</p> <p>If notifications are not enabled on the bucket, the action returns an empty <code>NotificationConfiguration</code> element.</p> <p>By default, you must be the bucket owner to read the notification configuration of a bucket. However, the bucket owner can use a bucket policy to grant permission to other users to read this configuration with the <code>s3:GetBucketNotification</code> permission.</p> <p>To use this API operation against an access point, provide the alias of the access point in place of the bucket name.</p> <p>To use this API operation against an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p> <p>For more information about setting and reading the notification configuration on a bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Setting Up Notification of Bucket Events</a>. For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies</a>.</p> <p>The following action is related to <code>GetBucketNotification</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketNotification.html">PutBucketNotification</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotificationConfiguration'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The name of the bucket for which to get the notification configuration.</p> <p>To use this API operation against an access point, provide the alias of the access point in place of the bucket name.</p> <p>To use this API operation against an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p>'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: notification
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    put:
      operationId: PutBucketNotificationConfiguration
      description: '<p>Enables notifications of specified events for a bucket. For more information about event notifications, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Event Notifications</a>.</p> <p>Using this API, you can replace an existing notification configuration. The configuration is an XML file that defines the event types that you want Amazon S3 to publish and the destination where you want Amazon S3 to publish an event notification when it detects an event of the specified type.</p> <p>By default, your bucket has no event notifications configured. That is, the notification configuration will be an empty <code>NotificationConfiguration</code>.</p> <p> <code>&lt;NotificationConfiguration&gt;</code> </p> <p> <code>&lt;/NotificationConfiguration&gt;</code> </p> <p>This action replaces the existing notification configuration with the configuration you include in the request body.</p> <p>After Amazon S3 receives this request, it first verifies that any Amazon Simple Notification Service (Amazon SNS) or Amazon Simple Queue Service (Amazon SQS) destination exists, and that the bucket owner has permission to publish to it by sending a test notification. In the case of Lambda destinations, Amazon S3 verifies that the Lambda function permissions grant Amazon S3 permission to invoke the function from the Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Notifications for Amazon S3 Events</a>.</p> <p>You can disable notifications by adding the empty NotificationConfiguration element.</p> <p>For more information about the number of event notification configurations that you can create per bucket, see <a href="https://docs.aws.amazon.com/general/latest/gr/s3.html#limits_s3">Amazon S3 service quotas</a> in <i>Amazon Web Services General Reference</i>.</p> <p>By default, only the bucket owner can configure notifications on a bucket. However, bucket owners can use a bucket policy to grant permission to other users to set this configuration with the required <code>s3:PutBucketNotification</code> permission.</p> <note> <p>The PUT notification is an atomic operation. For example, suppose your notification configuration includes SNS topic, SQS queue, and Lambda function configurations. When you send a PUT request with this configuration, Amazon S3 sends test messages to your SNS topic. If the message fails, the entire PUT action will fail, and Amazon S3 will not add the configuration to your bucket.</p> </note> <p>If the configuration in the request body includes only one <code>TopicConfiguration</code> specifying only the <code>s3:ReducedRedundancyLostObject</code> event type, the response will also include the <code>x-amz-sns-test-message-id</code> header containing the message ID of the test notification sent to the topic.</p> <p>The following action is related to <code>PutBucketNotificationConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketNotificationConfiguration.html">GetBucketNotificationConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-skip-destination-validation
          in: header
          required: false
          description: 'Skips validation of Amazon SQS, Amazon SNS, and Lambda destinations. True or false value.'
          schema:
            type: boolean
        - name: notification
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - NotificationConfiguration
              properties:
                NotificationConfiguration:
                  description: 'A container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off for the bucket.'
                  type: object
                  properties:
                    TopicConfigurations:
                      allOf:
                        - $ref: '#/components/schemas/TopicConfigurationList'
                        - xml:
                            name: TopicConfiguration
                          description: The topic to which notifications are sent and the events for which notifications are generated.
                    QueueConfigurations:
                      allOf:
                        - $ref: '#/components/schemas/QueueConfigurationList'
                        - xml:
                            name: QueueConfiguration
                          description: The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
                    LambdaFunctionConfigurations:
                      allOf:
                        - $ref: '#/components/schemas/LambdaFunctionConfigurationList'
                        - xml:
                            name: CloudFunctionConfiguration
                          description: Describes the Lambda functions to invoke and the events for which to invoke them.
                    EventBridgeConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/EventBridgeConfiguration'
                        - description: Enables delivery of events to Amazon EventBridge.
  '/{Bucket}#notification&deprecated!':
    get:
      deprecated: true
      operationId: GetBucketNotification
      description: ' No longer used, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketNotificationConfiguration.html">GetBucketNotificationConfiguration</a>.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETnotification.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotificationConfigurationDeprecated'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The name of the bucket for which to get the notification configuration.</p> <p>To use this API operation against an access point, provide the alias of the access point in place of the bucket name.</p> <p>To use this API operation against an Object Lambda access point, provide the alias of the Object Lambda access point in place of the bucket name. If the Object Lambda access point alias in a request is not valid, the error code <code>InvalidAccessPointAliasError</code> is returned. For more information about <code>InvalidAccessPointAliasError</code>, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a>.</p>'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: notification
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    put:
      deprecated: true
      operationId: PutBucketNotification
      description: ' No longer used, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketNotificationConfiguration.html">PutBucketNotificationConfiguration</a> operation.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTnotification.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The MD5 hash of the <code>PutPublicAccessBlock</code> request body.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: notification
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - NotificationConfiguration
              properties:
                NotificationConfiguration:
                  description: The container for the configuration.
                  type: object
                  example:
                    QueueConfiguration:
                      Event: 's3:ObjectCreated:Put'
                      Events:
                        - 's3:ObjectCreated:Put'
                      Id: MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx
                      Queue: 'arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue'
                    TopicConfiguration:
                      Event: 's3:ObjectCreated:Copy'
                      Events:
                        - 's3:ObjectCreated:Copy'
                      Id: YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi
                      Topic: 'arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic'
                  properties:
                    TopicConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/TopicConfigurationDeprecated'
                        - description: 'This data type is deprecated. A container for specifying the configuration for publication of messages to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events. '
                    QueueConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/QueueConfigurationDeprecated'
                        - description: 'This data type is deprecated. This data type specifies the configuration for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon S3 detects specified events. '
                    CloudFunctionConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/CloudFunctionConfiguration'
                        - description: Container for specifying the Lambda notification configuration.
  '/{Bucket}#policyStatus':
    get:
      operationId: GetBucketPolicyStatus
      description: '<p>Retrieves the policy status for an Amazon S3 bucket, indicating whether the bucket is public. In order to use this operation, you must have the <code>s3:GetBucketPolicyStatus</code> permission. For more information about Amazon S3 permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying Permissions in a Policy</a>.</p> <p> For more information about when Amazon S3 considers a bucket public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a>. </p> <p>The following operations are related to <code>GetBucketPolicyStatus</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html">Using Amazon S3 Block Public Access</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html">GetPublicAccessBlock</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html">PutPublicAccessBlock</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html">DeletePublicAccessBlock</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketPolicyStatusOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the Amazon S3 bucket whose policy status you want to retrieve.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: policyStatus
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}#requestPayment':
    get:
      operationId: GetBucketRequestPayment
      description: '<p>Returns the request payment configuration of a bucket. To use this version of the operation, you must be the bucket owner. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html">Requester Pays Buckets</a>.</p> <p>The following operations are related to <code>GetBucketRequestPayment</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html">ListObjects</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentGET.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketRequestPaymentOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket for which to get the payment request configuration
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: requestPayment
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    put:
      operationId: PutBucketRequestPayment
      description: '<p>Sets the request payment configuration for a bucket. By default, the bucket owner pays for downloads from the bucket. This configuration parameter enables the bucket owner (only) to specify that the person requesting the download will be charged for the download. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html">Requester Pays Buckets</a>.</p> <p>The following operations are related to <code>PutBucketRequestPayment</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketRequestPayment.html">GetBucketRequestPayment</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentPUT.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket name.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit. For more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864</a>.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: requestPayment
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - RequestPaymentConfiguration
              properties:
                RequestPaymentConfiguration:
                  description: Container for Payer.
                  type: object
                  properties:
                    Payer:
                      allOf:
                        - $ref: '#/components/schemas/Payer'
                        - description: Specifies who pays for the download and request fees.
  '/{Bucket}#versioning':
    get:
      operationId: GetBucketVersioning
      description: '<p>Returns the versioning state of a bucket.</p> <p>To retrieve the versioning state of a bucket, you must be the bucket owner.</p> <p>This implementation also returns the MFA Delete status of the versioning state. If the MFA Delete status is <code>enabled</code>, the bucket owner must use an authentication device to change the versioning state of the bucket.</p> <p>The following operations are related to <code>GetBucketVersioning</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETversioningStatus.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketVersioningOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket for which to get the versioning information.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: versioning
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    put:
      operationId: PutBucketVersioning
      description: '<p>Sets the versioning state of an existing bucket.</p> <p>You can set the versioning state with one of the following values:</p> <p> <b>Enabled</b>—Enables versioning for the objects in the bucket. All objects added to the bucket receive a unique version ID.</p> <p> <b>Suspended</b>—Disables versioning for the objects in the bucket. All objects added to the bucket receive the version ID null.</p> <p>If the versioning state has never been set on a bucket, it has no versioning state; a <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html">GetBucketVersioning</a> request does not return a versioning state value.</p> <p>In order to enable MFA Delete, you must be the bucket owner. If you are the bucket owner and want to enable MFA Delete in the bucket versioning configuration, you must include the <code>x-amz-mfa request</code> header and the <code>Status</code> and the <code>MfaDelete</code> request elements in a request to set the versioning state of the bucket.</p> <important> <p>If you have an object expiration lifecycle configuration in your non-versioned bucket and you want to maintain the same permanent delete behavior when you enable versioning, you must add a noncurrent expiration policy. The noncurrent expiration lifecycle configuration will manage the deletes of the noncurrent object versions in the version-enabled bucket. (A version-enabled bucket maintains one current and zero or more noncurrent object versions.) For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html#lifecycle-and-other-bucket-config">Lifecycle and Versioning</a>.</p> </important> <p>The following operations are related to <code>PutBucketVersioning</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html">DeleteBucket</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html">GetBucketVersioning</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket name.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>&gt;The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit. For more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864</a>.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-mfa
          in: header
          required: false
          description: 'The concatenation of the authentication device''s serial number, a space, and the value that is displayed on your authentication device.'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: versioning
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - VersioningConfiguration
              properties:
                VersioningConfiguration:
                  description: 'Describes the versioning state of an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html">PUT Bucket versioning</a> in the <i>Amazon S3 API Reference</i>.'
                  type: object
                  properties:
                    MFADelete:
                      allOf:
                        - $ref: '#/components/schemas/MFADelete'
                        - xml:
                            name: MfaDelete
                          description: 'Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.'
                    Status:
                      allOf:
                        - $ref: '#/components/schemas/BucketVersioningStatus'
                        - description: The versioning state of the bucket.
  '/{Bucket}/{Key}#acl':
    get:
      operationId: GetObjectAcl
      description: '<p>Returns the access control list (ACL) of an object. To use this operation, you must have <code>s3:GetObjectAcl</code> permissions or <code>READ_ACP</code> access to the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#acl-access-policy-permission-mapping">Mapping of ACL permissions and access policy permissions</a> in the <i>Amazon S3 User Guide</i> </p> <p>This action is not supported by Amazon S3 on Outposts.</p> <p>By default, GET returns ACL information about the current version of an object. To return ACL information about a different version, use the versionId subresource.</p> <note> <p>If your bucket uses the bucket owner enforced setting for S3 Object Ownership, requests to read ACLs are still supported and return the <code>bucket-owner-full-control</code> ACL with the owner being the account that created the bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html"> Controlling object ownership and disabling ACLs</a> in the <i>Amazon S3 User Guide</i>.</p> </note> <p>The following operations are related to <code>GetObjectAcl</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html">GetObjectAttributes</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETacl.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetObjectAclOutput'
        '480':
          description: NoSuchKey
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchKey'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name that contains the object for which to get the ACL information. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The key of the object for which to get the ACL information.
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: acl
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    put:
      operationId: PutObjectAcl
      description: '<p>Uses the <code>acl</code> subresource to set the access control list (ACL) permissions for a new or existing object in an S3 bucket. You must have <code>WRITE_ACP</code> permission to set the ACL of an object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#permissions">What permissions can I grant?</a> in the <i>Amazon S3 User Guide</i>.</p> <p>This action is not supported by Amazon S3 on Outposts.</p> <p>Depending on your application needs, you can choose to set the ACL on an object using either the request body or the headers. For example, if you have an existing application that updates a bucket ACL using the request body, you can continue to use that approach. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a> in the <i>Amazon S3 User Guide</i>.</p> <important> <p>If your bucket uses the bucket owner enforced setting for S3 Object Ownership, ACLs are disabled and no longer affect permissions. You must use policies to grant access to your bucket and the objects in it. Requests to set ACLs or update ACLs fail and return the <code>AccessControlListNotSupported</code> error code. Requests to read ACLs are still supported. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html">Controlling object ownership</a> in the <i>Amazon S3 User Guide</i>.</p> </important> <dl> <dt>Permissions</dt> <dd> <p>You can set access permissions using one of the following methods:</p> <ul> <li> <p>Specify a canned ACL with the <code>x-amz-acl</code> request header. Amazon S3 supports a set of predefined ACLs, known as canned ACLs. Each canned ACL has a predefined set of grantees and permissions. Specify the canned ACL name as the value of <code>x-amz-ac</code>l. If you use this header, you cannot use other access control-specific headers in your request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned ACL</a>.</p> </li> <li> <p>Specify access permissions explicitly with the <code>x-amz-grant-read</code>, <code>x-amz-grant-read-acp</code>, <code>x-amz-grant-write-acp</code>, and <code>x-amz-grant-full-control</code> headers. When using these headers, you specify explicit access permissions and grantees (Amazon Web Services accounts or Amazon S3 groups) who will receive the permission. If you use these ACL-specific headers, you cannot use <code>x-amz-acl</code> header to set a canned ACL. These parameters map to the set of permissions that Amazon S3 supports in an ACL. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a>.</p> <p>You specify each grantee as a type=value pair, where the type is one of the following:</p> <ul> <li> <p> <code>id</code> – if the value specified is the canonical user ID of an Amazon Web Services account</p> </li> <li> <p> <code>uri</code> – if you are granting permissions to a predefined group</p> </li> <li> <p> <code>emailAddress</code> – if the value specified is the email address of an Amazon Web Services account</p> <note> <p>Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: </p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p> US West (Oregon)</p> </li> <li> <p> Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p> </note> </li> </ul> <p>For example, the following <code>x-amz-grant-read</code> header grants list objects permission to the two Amazon Web Services accounts identified by their email addresses.</p> <p> <code>x-amz-grant-read: emailAddress="xyz@amazon.com", emailAddress="abc@amazon.com" </code> </p> </li> </ul> <p>You can use either a canned ACL or specify access permissions explicitly. You cannot do both.</p> </dd> <dt>Grantee Values</dt> <dd> <p>You can specify the person (grantee) to whom you''re assigning access rights (using request elements) in the following ways:</p> <ul> <li> <p>By the person''s ID:</p> <p> <code>&lt;Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser"&gt;&lt;ID&gt;&lt;&gt;ID&lt;&gt;&lt;/ID&gt;&lt;DisplayName&gt;&lt;&gt;GranteesEmail&lt;&gt;&lt;/DisplayName&gt; &lt;/Grantee&gt;</code> </p> <p>DisplayName is optional and ignored in the request.</p> </li> <li> <p>By URI:</p> <p> <code>&lt;Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group"&gt;&lt;URI&gt;&lt;&gt;http://acs.amazonaws.com/groups/global/AuthenticatedUsers&lt;&gt;&lt;/URI&gt;&lt;/Grantee&gt;</code> </p> </li> <li> <p>By Email address:</p> <p> <code>&lt;Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="AmazonCustomerByEmail"&gt;&lt;EmailAddress&gt;&lt;&gt;Grantees@email.com&lt;&gt;&lt;/EmailAddress&gt;lt;/Grantee&gt;</code> </p> <p>The grantee is resolved to the CanonicalUser and, in a response to a GET Object acl request, appears as the CanonicalUser.</p> <note> <p>Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: </p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p> US West (Oregon)</p> </li> <li> <p> Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p> </note> </li> </ul> </dd> <dt>Versioning</dt> <dd> <p>The ACL of an object is set at the object version level. By default, PUT sets the ACL of the current version of an object. To set the ACL of a different version, use the <code>versionId</code> subresource.</p> </dd> </dl> <p>The following operations are related to <code>PutObjectAcl</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html">CopyObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUTacl.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PutObjectAclOutput'
        '480':
          description: NoSuchKey
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchKey'
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: 'The canned ACL to apply to the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned ACL</a>.'
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - aws-exec-read
              - bucket-owner-read
              - bucket-owner-full-control
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name that contains the object to which you want to attach the ACL. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The base64-encoded 128-bit MD5 digest of the data. This header must be used as a message integrity check to verify that the request body was not corrupted in transit. For more information, go to <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864.&gt;</a> </p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: '<p>Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>'
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: <p>Allows grantee to list the objects in the bucket.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: <p>Allows grantee to read the bucket ACL.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
        - name: x-amz-grant-write
          in: header
          required: false
          description: '<p>Allows grantee to create new objects in the bucket.</p> <p>For the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.</p>'
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: <p>Allows grantee to write the ACL for the applicable bucket.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: '<p>Key for which the PUT action was initiated.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
            minLength: 1
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: acl
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                AccessControlPolicy:
                  description: Contains the elements that set the ACL permissions for an object per grantee.
                  type: object
                  properties:
                    Grants:
                      allOf:
                        - $ref: '#/components/schemas/Grants'
                        - xml:
                            name: AccessControlList
                          description: A list of grants.
                    Owner:
                      allOf:
                        - $ref: '#/components/schemas/Owner'
                        - description: Container for the bucket owner's display name and ID.
  '/{Bucket}/{Key}#attributes&x-amz-object-attributes':
    get:
      operationId: GetObjectAttributes
      description: '<p>Retrieves all the metadata from an object without returning the object itself. This action is useful if you''re interested only in an object''s metadata. To use <code>GetObjectAttributes</code>, you must have READ access to the object.</p> <p> <code>GetObjectAttributes</code> combines the functionality of <code>HeadObject</code> and <code>ListParts</code>. All of the data returned with each of those individual calls can be returned with a single call to <code>GetObjectAttributes</code>.</p> <p>If you encrypt an object by using server-side encryption with customer-provided encryption keys (SSE-C) when you store the object in Amazon S3, then when you retrieve the metadata from the object, you must use the following headers:</p> <ul> <li> <p> <code>x-amz-server-side-encryption-customer-algorithm</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-customer-key</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-customer-key-MD5</code> </p> </li> </ul> <p>For more information about SSE-C, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption (Using Customer-Provided Encryption Keys)</a> in the <i>Amazon S3 User Guide</i>.</p> <note> <ul> <li> <p>Encryption request headers, such as <code>x-amz-server-side-encryption</code>, should not be sent for GET requests if your object uses server-side encryption with Amazon Web Services KMS keys stored in Amazon Web Services Key Management Service (SSE-KMS) or server-side encryption with Amazon S3 managed keys (SSE-S3). If your object does use these types of keys, you''ll get an HTTP <code>400 Bad Request</code> error.</p> </li> <li> <p> The last modified property in this case is the creation date of the object.</p> </li> </ul> </note> <p>Consider the following when using request headers:</p> <ul> <li> <p> If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code> headers are present in the request as follows, then Amazon S3 returns the HTTP status code <code>200 OK</code> and the data requested:</p> <ul> <li> <p> <code>If-Match</code> condition evaluates to <code>true</code>.</p> </li> <li> <p> <code>If-Unmodified-Since</code> condition evaluates to <code>false</code>.</p> </li> </ul> </li> <li> <p>If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code> headers are present in the request as follows, then Amazon S3 returns the HTTP status code <code>304 Not Modified</code>:</p> <ul> <li> <p> <code>If-None-Match</code> condition evaluates to <code>false</code>.</p> </li> <li> <p> <code>If-Modified-Since</code> condition evaluates to <code>true</code>.</p> </li> </ul> </li> </ul> <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p> <dl> <dt>Permissions</dt> <dd> <p>The permissions that you need to use this operation depend on whether the bucket is versioned. If the bucket is versioned, you need both the <code>s3:GetObjectVersion</code> and <code>s3:GetObjectVersionAttributes</code> permissions for this operation. If the bucket is not versioned, you need the <code>s3:GetObject</code> and <code>s3:GetObjectAttributes</code> permissions. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying Permissions in a Policy</a> in the <i>Amazon S3 User Guide</i>. If the object that you request does not exist, the error Amazon S3 returns depends on whether you also have the <code>s3:ListBucket</code> permission.</p> <ul> <li> <p>If you have the <code>s3:ListBucket</code> permission on the bucket, Amazon S3 returns an HTTP status code <code>404 Not Found</code> ("no such key") error.</p> </li> <li> <p>If you don''t have the <code>s3:ListBucket</code> permission, Amazon S3 returns an HTTP status code <code>403 Forbidden</code> ("access denied") error.</p> </li> </ul> </dd> </dl> <p>The following actions are related to <code>GetObjectAttributes</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html">GetObjectAcl</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLegalHold.html">GetObjectLegalHold</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLockConfiguration.html">GetObjectLockConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectRetention.html">GetObjectRetention</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html">GetObjectTagging</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_HeadObject.html">HeadObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetObjectAttributesOutput'
        '480':
          description: NoSuchKey
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchKey'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The name of the bucket that contains the object.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The object key.
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: The version ID used to reference a specific version of the object.
          schema:
            type: string
        - name: x-amz-max-parts
          in: header
          required: false
          description: Sets the maximum number of parts to return.
          schema:
            type: integer
        - name: x-amz-part-number-marker
          in: header
          required: false
          description: Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.
          schema:
            type: integer
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use when encrypting the object (for example, AES256).'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-object-attributes
          in: header
          required: true
          description: Specifies the fields at the root level that you want returned in the response. Fields that you do not specify are not returned.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ObjectAttributes'
        - name: attributes
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#legal-hold':
    get:
      operationId: GetObjectLegalHold
      description: '<p>Gets an object''s current legal hold status. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Locking Objects</a>.</p> <p>This action is not supported by Amazon S3 on Outposts.</p> <p>The following action is related to <code>GetObjectLegalHold</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html">GetObjectAttributes</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetObjectLegalHoldOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name containing the object whose legal hold status you want to retrieve. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The key name for the object whose legal hold status you want to retrieve.
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: The version ID of the object whose legal hold status you want to retrieve.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: legal-hold
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    put:
      operationId: PutObjectLegalHold
      description: '<p>Applies a legal hold configuration to the specified object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Locking Objects</a>.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PutObjectLegalHoldOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name containing the object that you want to place a legal hold on. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The key name for the object that you want to place a legal hold on.
          schema:
            type: string
            minLength: 1
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: versionId
          in: query
          required: false
          description: The version ID of the object that you want to place a legal hold on.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The MD5 hash for the request body.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: legal-hold
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                LegalHold:
                  description: A legal hold configuration for an object.
                  type: object
                  properties:
                    Status:
                      allOf:
                        - $ref: '#/components/schemas/ObjectLockLegalHoldStatus'
                        - description: Indicates whether the specified object has a legal hold in place.
  '/{Bucket}#object-lock':
    get:
      operationId: GetObjectLockConfiguration
      description: '<p>Gets the Object Lock configuration for a bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Locking Objects</a>.</p> <p>The following action is related to <code>GetObjectLockConfiguration</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html">GetObjectAttributes</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetObjectLockConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket whose Object Lock configuration you want to retrieve.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: object-lock
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    put:
      operationId: PutObjectLockConfiguration
      description: '<p>Places an Object Lock configuration on the specified bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Locking Objects</a>. </p> <note> <ul> <li> <p>The <code>DefaultRetention</code> settings require both a mode and a period.</p> </li> <li> <p>The <code>DefaultRetention</code> period can be either <code>Days</code> or <code>Years</code> but you must select one. You cannot specify <code>Days</code> and <code>Years</code> at the same time.</p> </li> <li> <p>You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact Amazon Web Services Support.</p> </li> </ul> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PutObjectLockConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket whose Object Lock configuration you want to create or replace.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-bucket-object-lock-token
          in: header
          required: false
          description: A token to allow Object Lock to be enabled for an existing bucket.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The MD5 hash for the request body.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: object-lock
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                ObjectLockConfiguration:
                  description: The container element for Object Lock configuration parameters.
                  type: object
                  properties:
                    ObjectLockEnabled:
                      allOf:
                        - $ref: '#/components/schemas/ObjectLockEnabled'
                        - description: 'Indicates whether this bucket has an Object Lock configuration enabled. Enable <code>ObjectLockEnabled</code> when you apply <code>ObjectLockConfiguration</code> to a bucket. '
                    Rule:
                      allOf:
                        - $ref: '#/components/schemas/ObjectLockRule'
                        - description: Specifies the Object Lock rule for the specified object. Enable the this rule when you apply <code>ObjectLockConfiguration</code> to a bucket. Bucket settings require both a mode and a period. The period can be either <code>Days</code> or <code>Years</code> but you must select one. You cannot specify <code>Days</code> and <code>Years</code> at the same time.
  '/{Bucket}/{Key}#retention':
    get:
      operationId: GetObjectRetention
      description: '<p>Retrieves an object''s retention settings. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Locking Objects</a>.</p> <p>This action is not supported by Amazon S3 on Outposts.</p> <p>The following action is related to <code>GetObjectRetention</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html">GetObjectAttributes</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetObjectRetentionOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name containing the object whose retention settings you want to retrieve. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The key name for the object whose retention settings you want to retrieve.
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: The version ID for the object whose retention settings you want to retrieve.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: retention
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
    put:
      operationId: PutObjectRetention
      description: '<p>Places an Object Retention configuration on an object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Locking Objects</a>. Users or accounts require the <code>s3:PutObjectRetention</code> permission in order to place an Object Retention configuration on objects. Bypassing a Governance Retention configuration requires the <code>s3:BypassGovernanceRetention</code> permission. </p> <p>This action is not supported by Amazon S3 on Outposts.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PutObjectRetentionOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name that contains the object you want to apply this Object Retention configuration to. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The key name for the object that you want to apply this Object Retention configuration to.
          schema:
            type: string
            minLength: 1
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: versionId
          in: query
          required: false
          description: The version ID for the object that you want to apply this Object Retention configuration to.
          schema:
            type: string
        - name: x-amz-bypass-governance-retention
          in: header
          required: false
          description: Indicates whether this action should bypass Governance-mode restrictions.
          schema:
            type: boolean
        - name: Content-MD5
          in: header
          required: false
          description: '<p>The MD5 hash for the request body.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>'
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: retention
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                Retention:
                  description: A Retention configuration for an object.
                  type: object
                  properties:
                    Mode:
                      allOf:
                        - $ref: '#/components/schemas/ObjectLockRetentionMode'
                        - description: Indicates the Retention mode for the specified object.
                    RetainUntilDate:
                      allOf:
                        - $ref: '#/components/schemas/Date'
                        - description: The date on which this Object Lock Retention will expire.
  '/{Bucket}/{Key}#torrent':
    get:
      operationId: GetObjectTorrent
      description: '<p>Returns torrent files from a bucket. BitTorrent can save you bandwidth when you''re distributing large files.</p> <note> <p>You can get torrent only for objects that are less than 5 GB in size, and that are not encrypted using server-side encryption with a customer-provided encryption key.</p> </note> <p>To use GET, you must have READ access to the object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p> <p>The following action is related to <code>GetObjectTorrent</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETtorrent.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetObjectTorrentOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the object for which to get the torrent files.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The object key for which to get the information.
          schema:
            type: string
            minLength: 1
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: torrent
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}#analytics':
    get:
      operationId: ListBucketAnalyticsConfigurations
      description: '<p>Lists the analytics configurations for the bucket. You can have up to 1,000 analytics configurations per bucket.</p> <p>This action supports list pagination and does not return more than 100 configurations at a time. You should always check the <code>IsTruncated</code> element in the response. If there are no more configurations to list, <code>IsTruncated</code> is set to false. If there are more configurations to list, <code>IsTruncated</code> is set to true, and there will be a value in <code>NextContinuationToken</code>. You use the <code>NextContinuationToken</code> value to continue the pagination of the list by passing the value in continuation-token in the request to <code>GET</code> the next page.</p> <p>To use this operation, you must have permissions to perform the <code>s3:GetAnalyticsConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p>For information about Amazon S3 analytics feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html">Amazon S3 Analytics – Storage Class Analysis</a>. </p> <p>The following operations are related to <code>ListBucketAnalyticsConfigurations</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html">GetBucketAnalyticsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketAnalyticsConfiguration.html">DeleteBucketAnalyticsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html">PutBucketAnalyticsConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListBucketAnalyticsConfigurationsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket from which analytics configurations are retrieved.
          schema:
            type: string
        - name: continuation-token
          in: query
          required: false
          description: The <code>ContinuationToken</code> that represents a placeholder from where this request should begin.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: analytics
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}#intelligent-tiering':
    get:
      operationId: ListBucketIntelligentTieringConfigurations
      description: '<p>Lists the S3 Intelligent-Tiering configuration from the specified bucket.</p> <p>The S3 Intelligent-Tiering storage class is designed to optimize storage costs by automatically moving data to the most cost-effective storage access tier, without performance impact or operational overhead. S3 Intelligent-Tiering delivers automatic cost savings in three low latency and high throughput access tiers. To get the lowest storage cost on data that can be accessed in minutes to hours, you can choose to activate additional archiving capabilities.</p> <p>The S3 Intelligent-Tiering storage class is the ideal storage class for data with unknown, changing, or unpredictable access patterns, independent of object size or retention period. If the size of an object is less than 128 KB, it is not monitored and not eligible for auto-tiering. Smaller objects can be stored, but they are always charged at the Frequent Access tier rates in the S3 Intelligent-Tiering storage class.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access">Storage class for automatically optimizing frequently and infrequently accessed objects</a>.</p> <p>Operations related to <code>ListBucketIntelligentTieringConfigurations</code> include: </p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketIntelligentTieringConfiguration.html">DeleteBucketIntelligentTieringConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketIntelligentTieringConfiguration.html">PutBucketIntelligentTieringConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketIntelligentTieringConfiguration.html">GetBucketIntelligentTieringConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListBucketIntelligentTieringConfigurationsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.
          schema:
            type: string
        - name: continuation-token
          in: query
          required: false
          description: The <code>ContinuationToken</code> that represents a placeholder from where this request should begin.
          schema:
            type: string
        - name: intelligent-tiering
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}#inventory':
    get:
      operationId: ListBucketInventoryConfigurations
      description: '<p>Returns a list of inventory configurations for the bucket. You can have up to 1,000 analytics configurations per bucket.</p> <p>This action supports list pagination and does not return more than 100 configurations at a time. Always check the <code>IsTruncated</code> element in the response. If there are no more configurations to list, <code>IsTruncated</code> is set to false. If there are more configurations to list, <code>IsTruncated</code> is set to true, and there is a value in <code>NextContinuationToken</code>. You use the <code>NextContinuationToken</code> value to continue the pagination of the list by passing the value in continuation-token in the request to <code>GET</code> the next page.</p> <p> To use this operation, you must have permissions to perform the <code>s3:GetInventoryConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p>For information about the Amazon S3 inventory feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html">Amazon S3 Inventory</a> </p> <p>The following operations are related to <code>ListBucketInventoryConfigurations</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html">GetBucketInventoryConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html">DeleteBucketInventoryConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html">PutBucketInventoryConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListBucketInventoryConfigurationsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the inventory configurations to retrieve.
          schema:
            type: string
        - name: continuation-token
          in: query
          required: false
          description: The marker used to continue an inventory configuration listing that has been truncated. Use the <code>NextContinuationToken</code> from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: inventory
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}#metrics':
    get:
      operationId: ListBucketMetricsConfigurations
      description: '<p>Lists the metrics configurations for the bucket. The metrics configurations are only for the request metrics of the bucket and do not provide information on daily storage metrics. You can have up to 1,000 configurations per bucket.</p> <p>This action supports list pagination and does not return more than 100 configurations at a time. Always check the <code>IsTruncated</code> element in the response. If there are no more configurations to list, <code>IsTruncated</code> is set to false. If there are more configurations to list, <code>IsTruncated</code> is set to true, and there is a value in <code>NextContinuationToken</code>. You use the <code>NextContinuationToken</code> value to continue the pagination of the list by passing the value in <code>continuation-token</code> in the request to <code>GET</code> the next page.</p> <p>To use this operation, you must have permissions to perform the <code>s3:GetMetricsConfiguration</code> action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <p>For more information about metrics configurations and CloudWatch request metrics, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html">Monitoring Metrics with Amazon CloudWatch</a>.</p> <p>The following operations are related to <code>ListBucketMetricsConfigurations</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html">PutBucketMetricsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketMetricsConfiguration.html">GetBucketMetricsConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketMetricsConfiguration.html">DeleteBucketMetricsConfiguration</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListBucketMetricsConfigurationsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the metrics configurations to retrieve.
          schema:
            type: string
        - name: continuation-token
          in: query
          required: false
          description: The marker that is used to continue a metrics configuration listing that has been truncated. Use the <code>NextContinuationToken</code> from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: metrics
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  /:
    get:
      operationId: ListBuckets
      description: '<p>Returns a list of all buckets owned by the authenticated sender of the request. To use this operation, you must have the <code>s3:ListAllMyBuckets</code> permission. </p> <p>For information about Amazon S3 buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-buckets-s3.html">Creating, configuring, and working with Amazon S3 buckets</a>.</p>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTServiceGET.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListBucketsOutput'
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}#uploads':
    get:
      operationId: ListMultipartUploads
      description: '<p>This action lists in-progress multipart uploads. An in-progress multipart upload is a multipart upload that has been initiated using the Initiate Multipart Upload request, but has not yet been completed or aborted.</p> <p>This action returns at most 1,000 multipart uploads in the response. 1,000 multipart uploads is the maximum number of uploads a response can include, which is also the default value. You can further limit the number of uploads in a response by specifying the <code>max-uploads</code> parameter in the response. If additional multipart uploads satisfy the list criteria, the response will contain an <code>IsTruncated</code> element with the value true. To list the additional multipart uploads, use the <code>key-marker</code> and <code>upload-id-marker</code> request parameters.</p> <p>In the response, the uploads are sorted by key. If your application has initiated more than one multipart upload using the same object key, then uploads in the response are first sorted by key. Additionally, uploads are sorted in ascending order within each key by the upload initiation time.</p> <p>For more information on multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html">Uploading Objects Using Multipart Upload</a>.</p> <p>For information on permissions required to use the multipart upload API, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html">Multipart Upload and Permissions</a>.</p> <p>The following operations are related to <code>ListMultipartUploads</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html">CompleteMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html">AbortMultipartUpload</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListMPUpload.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListMultipartUploadsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The name of the bucket to which the multipart upload was initiated. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: delimiter
          in: query
          required: false
          description: '<p>Character you use to group keys.</p> <p>All keys that contain the same string between the prefix, if specified, and the first occurrence of the delimiter after the prefix are grouped under a single result element, <code>CommonPrefixes</code>. If you don''t specify the prefix parameter, then the substring starts at the beginning of the key. The keys that are grouped under <code>CommonPrefixes</code> result element are not returned elsewhere in the response.</p>'
          schema:
            type: string
        - name: encoding-type
          in: query
          required: false
          description: ''
          schema:
            type: string
            enum:
              - url
            description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key can contain any Unicode character; however, the XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
        - name: key-marker
          in: query
          required: false
          description: '<p>Together with <code>upload-id-marker</code>, this parameter specifies the multipart upload after which listing should begin.</p> <p>If <code>upload-id-marker</code> is not specified, only the keys lexicographically greater than the specified <code>key-marker</code> will be included in the list.</p> <p>If <code>upload-id-marker</code> is specified, any multipart uploads for a key equal to the <code>key-marker</code> might also be included, provided those multipart uploads have upload IDs lexicographically greater than the specified <code>upload-id-marker</code>.</p>'
          schema:
            type: string
        - name: max-uploads
          in: query
          required: false
          description: 'Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that can be returned in a response.'
          schema:
            type: integer
        - name: prefix
          in: query
          required: false
          description: Lists in-progress uploads only for those keys that begin with the specified prefix. You can use prefixes to separate a bucket into different grouping of keys. (You can think of using <code>prefix</code> to make groups in the same way that you'd use a folder in a file system.)
          schema:
            type: string
        - name: upload-id-marker
          in: query
          required: false
          description: 'Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the upload-id-marker parameter is ignored. Otherwise, any multipart uploads for a key equal to the key-marker might be included in the list only if they have an upload ID lexicographically greater than the specified <code>upload-id-marker</code>.'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: MaxUploads
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: KeyMarker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: UploadIdMarker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: uploads
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}#versions':
    get:
      operationId: ListObjectVersions
      description: '<p>Returns metadata about all versions of the objects in a bucket. You can also use request parameters as selection criteria to return metadata about a subset of all the object versions.</p> <important> <p> To use this operation, you must have permission to perform the <code>s3:ListBucketVersions</code> action. Be aware of the name difference. </p> </important> <note> <p> A <code>200 OK</code> response can contain valid or invalid XML. Make sure to design your application to parse the contents of the response and handle it appropriately.</p> </note> <p>To use this operation, you must have READ access to the bucket.</p> <p>This action is not supported by Amazon S3 on Outposts.</p> <p>The following operations are related to <code>ListObjectVersions</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html">ListObjectsV2</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETVersion.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListObjectVersionsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: 'The bucket name that contains the objects. '
          schema:
            type: string
        - name: delimiter
          in: query
          required: false
          description: A delimiter is a character that you specify to group keys. All keys that contain the same string between the <code>prefix</code> and the first occurrence of the delimiter are grouped under a single result element in <code>CommonPrefixes</code>. These groups are counted as one result against the <code>max-keys</code> limitation. These keys are not returned elsewhere in the response.
          schema:
            type: string
        - name: encoding-type
          in: query
          required: false
          description: ''
          schema:
            type: string
            enum:
              - url
            description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key can contain any Unicode character; however, the XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
        - name: key-marker
          in: query
          required: false
          description: Specifies the key to start with when listing objects in a bucket.
          schema:
            type: string
        - name: max-keys
          in: query
          required: false
          description: 'Sets the maximum number of keys returned in the response. By default, the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more. If additional keys satisfy the search criteria, but were not returned because <code>max-keys</code> was exceeded, the response contains <code>&lt;isTruncated&gt;true&lt;/isTruncated&gt;</code>. To return the additional keys, see <code>key-marker</code> and <code>version-id-marker</code>.'
          schema:
            type: integer
        - name: prefix
          in: query
          required: false
          description: 'Use this parameter to select only those keys that begin with the specified prefix. You can use prefixes to separate a bucket into different groupings of keys. (You can think of using <code>prefix</code> to make groups in the same way that you''d use a folder in a file system.) You can use <code>prefix</code> with <code>delimiter</code> to roll up numerous objects into a single result under <code>CommonPrefixes</code>. '
          schema:
            type: string
        - name: version-id-marker
          in: query
          required: false
          description: Specifies the object version you want to start listing from.
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-optional-object-attributes
          in: header
          required: false
          description: Specifies the optional fields that you want returned in the response. Fields that you do not specify are not returned.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OptionalObjectAttributes'
        - name: MaxKeys
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: KeyMarker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: VersionIdMarker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: versions
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}#list-type=2':
    get:
      operationId: ListObjectsV2
      description: '<p>Returns some or all (up to 1,000) of the objects in a bucket with each request. You can use the request parameters as selection criteria to return a subset of the objects in a bucket. A <code>200 OK</code> response can contain valid or invalid XML. Make sure to design your application to parse the contents of the response and handle it appropriately. Objects are returned sorted in an ascending order of the respective key names in the list. For more information about listing objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ListingKeysUsingAPIs.html">Listing object keys programmatically</a> in the <i>Amazon S3 User Guide</i>.</p> <p>To use this operation, you must have READ access to the bucket.</p> <p>To use this action in an Identity and Access Management (IAM) policy, you must have permission to perform the <code>s3:ListBucket</code> action. The bucket owner has this permission by default and can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a> in the <i>Amazon S3 User Guide</i>.</p> <important> <p>This section describes the latest revision of this action. We recommend that you use this revised API operation for application development. For backward compatibility, Amazon S3 continues to support the prior version of this API operation, <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html">ListObjects</a>.</p> </important> <p>To get a list of your buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html">ListBuckets</a>.</p> <p>The following operations are related to <code>ListObjectsV2</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListObjectsV2Output'
        '480':
          description: NoSuchBucket
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchBucket'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>Bucket name to list. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: delimiter
          in: query
          required: false
          description: A delimiter is a character that you use to group keys.
          schema:
            type: string
        - name: encoding-type
          in: query
          required: false
          description: Encoding type used by Amazon S3 to encode object keys in the response.
          schema:
            type: string
            enum:
              - url
            description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key can contain any Unicode character; however, the XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
        - name: max-keys
          in: query
          required: false
          description: 'Sets the maximum number of keys returned in the response. By default, the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.'
          schema:
            type: integer
        - name: prefix
          in: query
          required: false
          description: Limits the response to keys that begin with the specified prefix.
          schema:
            type: string
        - name: continuation-token
          in: query
          required: false
          description: ' <code>ContinuationToken</code> indicates to Amazon S3 that the list is being continued on this bucket with a token. <code>ContinuationToken</code> is obfuscated and is not a real key.'
          schema:
            type: string
        - name: fetch-owner
          in: query
          required: false
          description: 'The owner field is not present in <code>ListObjectsV2</code> by default. If you want to return the owner field with each key in the result, then set the <code>FetchOwner</code> field to <code>true</code>.'
          schema:
            type: boolean
        - name: start-after
          in: query
          required: false
          description: StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. StartAfter can be any key in the bucket.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for the list objects request in V2 style. Bucket owners need not specify this parameter in their requests.
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-optional-object-attributes
          in: header
          required: false
          description: Specifies the optional fields that you want returned in the response. Fields that you do not specify are not returned.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OptionalObjectAttributes'
        - name: MaxKeys
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: ContinuationToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: list-type
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2'
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#restore':
    post:
      operationId: RestoreObject
      description: '<p>Restores an archived copy of an object back into Amazon S3</p> <p>This action is not supported by Amazon S3 on Outposts.</p> <p>This action performs the following types of requests: </p> <ul> <li> <p> <code>select</code> - Perform a select query on an archived object</p> </li> <li> <p> <code>restore an archive</code> - Restore an archived object</p> </li> </ul> <p>For more information about the <code>S3</code> structure in the request body, see the following:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html">Managing Access with ACLs</a> in the <i>Amazon S3 User Guide</i> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html">Protecting Data Using Server-Side Encryption</a> in the <i>Amazon S3 User Guide</i> </p> </li> </ul> <p>Define the SQL expression for the <code>SELECT</code> type of restoration for your query in the request body''s <code>SelectParameters</code> structure. You can use expressions like the following examples.</p> <ul> <li> <p>The following expression returns all records from the specified object.</p> <p> <code>SELECT * FROM Object</code> </p> </li> <li> <p>Assuming that you are not using any headers for data stored in the object, you can specify columns with positional headers.</p> <p> <code>SELECT s._1, s._2 FROM Object s WHERE s._3 &gt; 100</code> </p> </li> <li> <p>If you have headers and you set the <code>fileHeaderInfo</code> in the <code>CSV</code> structure in the request body to <code>USE</code>, you can specify headers in the query. (If you set the <code>fileHeaderInfo</code> field to <code>IGNORE</code>, the first row is skipped for the query.) You cannot mix ordinal positions with header column names. </p> <p> <code>SELECT s.Id, s.FirstName, s.SSN FROM S3Object s</code> </p> </li> </ul> <p>When making a select request, you can also do the following:</p> <ul> <li> <p>To expedite your queries, specify the <code>Expedited</code> tier. For more information about tiers, see "Restoring Archives," later in this topic.</p> </li> <li> <p>Specify details about the data serialization format of both the input object that is being queried and the serialization of the CSV-encoded query results.</p> </li> </ul> <p>The following are additional important facts about the select feature:</p> <ul> <li> <p>The output results are new Amazon S3 objects. Unlike archive retrievals, they are stored until explicitly deleted-manually or through a lifecycle configuration.</p> </li> <li> <p>You can issue more than one select request on the same Amazon S3 object. Amazon S3 doesn''t duplicate requests, so avoid issuing duplicate requests.</p> </li> <li> <p> Amazon S3 accepts a select request even if the object has already been restored. A select request doesn’t return error response <code>409</code>.</p> </li> </ul> <dl> <dt>Permissions</dt> <dd> <p>To use this operation, you must have permissions to perform the <code>s3:RestoreObject</code> action. The bucket owner has this permission by default and can grant this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources</a> in the <i>Amazon S3 User Guide</i>.</p> </dd> <dt>Restoring objects</dt> <dd> <p>Objects that you archive to the S3 Glacier Flexible Retrieval Flexible Retrieval or S3 Glacier Deep Archive storage class, and S3 Intelligent-Tiering Archive or S3 Intelligent-Tiering Deep Archive tiers, are not accessible in real time. For objects in the S3 Glacier Flexible Retrieval Flexible Retrieval or S3 Glacier Deep Archive storage classes, you must first initiate a restore request, and then wait until a temporary copy of the object is available. If you want a permanent copy of the object, create a copy of it in the Amazon S3 Standard storage class in your S3 bucket. To access an archived object, you must restore the object for the duration (number of days) that you specify. For objects in the Archive Access or Deep Archive Access tiers of S3 Intelligent-Tiering, you must first initiate a restore request, and then wait until the object is moved into the Frequent Access tier.</p> <p>To restore a specific object version, you can provide a version ID. If you don''t provide a version ID, Amazon S3 restores the current version.</p> <p>When restoring an archived object, you can specify one of the following data access tier options in the <code>Tier</code> element of the request body: </p> <ul> <li> <p> <code>Expedited</code> - Expedited retrievals allow you to quickly access your data stored in the S3 Glacier Flexible Retrieval Flexible Retrieval storage class or S3 Intelligent-Tiering Archive tier when occasional urgent requests for restoring archives are required. For all but the largest archived objects (250 MB+), data accessed using Expedited retrievals is typically made available within 1–5 minutes. Provisioned capacity ensures that retrieval capacity for Expedited retrievals is available when you need it. Expedited retrievals and provisioned capacity are not available for objects stored in the S3 Glacier Deep Archive storage class or S3 Intelligent-Tiering Deep Archive tier.</p> </li> <li> <p> <code>Standard</code> - Standard retrievals allow you to access any of your archived objects within several hours. This is the default option for retrieval requests that do not specify the retrieval option. Standard retrievals typically finish within 3–5 hours for objects stored in the S3 Glacier Flexible Retrieval Flexible Retrieval storage class or S3 Intelligent-Tiering Archive tier. They typically finish within 12 hours for objects stored in the S3 Glacier Deep Archive storage class or S3 Intelligent-Tiering Deep Archive tier. Standard retrievals are free for objects stored in S3 Intelligent-Tiering.</p> </li> <li> <p> <code>Bulk</code> - Bulk retrievals free for objects stored in the S3 Glacier Flexible Retrieval and S3 Intelligent-Tiering storage classes, enabling you to retrieve large amounts, even petabytes, of data at no cost. Bulk retrievals typically finish within 5–12 hours for objects stored in the S3 Glacier Flexible Retrieval Flexible Retrieval storage class or S3 Intelligent-Tiering Archive tier. Bulk retrievals are also the lowest-cost retrieval option when restoring objects from S3 Glacier Deep Archive. They typically finish within 48 hours for objects stored in the S3 Glacier Deep Archive storage class or S3 Intelligent-Tiering Deep Archive tier. </p> </li> </ul> <p>For more information about archive retrieval options and provisioned capacity for <code>Expedited</code> data access, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/restoring-objects.html">Restoring Archived Objects</a> in the <i>Amazon S3 User Guide</i>. </p> <p>You can use Amazon S3 restore speed upgrade to change the restore speed to a faster speed while it is in progress. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/restoring-objects.html#restoring-objects-upgrade-tier.title.html"> Upgrading the speed of an in-progress restore</a> in the <i>Amazon S3 User Guide</i>. </p> <p>To get the status of object restoration, you can send a <code>HEAD</code> request. Operations return the <code>x-amz-restore</code> header, which provides information about the restoration status, in the response. You can use Amazon S3 event notifications to notify you when a restore is initiated or completed. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Amazon S3 Event Notifications</a> in the <i>Amazon S3 User Guide</i>.</p> <p>After restoring an archived object, you can update the restoration period by reissuing the request with a new period. Amazon S3 updates the restoration period relative to the current time and charges only for the request-there are no data transfer charges. You cannot update the restoration period when Amazon S3 is actively processing your current restore request for the object.</p> <p>If your bucket has a lifecycle configuration with a rule that includes an expiration action, the object expiration overrides the life span that you specify in a restore request. For example, if you restore an object copy for 10 days, but the object is scheduled to expire in 3 days, Amazon S3 deletes the object in 3 days. For more information about lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object Lifecycle Management</a> in <i>Amazon S3 User Guide</i>.</p> </dd> <dt>Responses</dt> <dd> <p>A successful action returns either the <code>200 OK</code> or <code>202 Accepted</code> status code. </p> <ul> <li> <p>If the object is not previously restored, then Amazon S3 returns <code>202 Accepted</code> in the response. </p> </li> <li> <p>If the object is previously restored, Amazon S3 returns <code>200 OK</code> in the response. </p> </li> </ul> <ul> <li> <p>Special errors:</p> <ul> <li> <p> <i>Code: RestoreAlreadyInProgress</i> </p> </li> <li> <p> <i>Cause: Object restore is already in progress. (This error does not apply to SELECT type requests.)</i> </p> </li> <li> <p> <i>HTTP Status Code: 409 Conflict</i> </p> </li> <li> <p> <i>SOAP Fault Code Prefix: Client</i> </p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code: GlacierExpeditedRetrievalNotAvailable</i> </p> </li> <li> <p> <i>Cause: expedited retrievals are currently not available. Try again later. (Returned if there is insufficient capacity to process the Expedited request. This error applies only to Expedited retrievals and not to S3 Standard or Bulk retrievals.)</i> </p> </li> <li> <p> <i>HTTP Status Code: 503</i> </p> </li> <li> <p> <i>SOAP Fault Code Prefix: N/A</i> </p> </li> </ul> </li> </ul> </dd> </dl> <p>The following operations are related to <code>RestoreObject</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketNotificationConfiguration.html">GetBucketNotificationConfiguration</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectRestore.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreObjectOutput'
        '480':
          description: ObjectAlreadyInActiveTierError
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ObjectAlreadyInActiveTierError'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name containing the object to restore. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Object key for which the action was initiated.
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: restore
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                RestoreRequest:
                  description: Container for restore job parameters.
                  type: object
                  properties:
                    Days:
                      allOf:
                        - $ref: '#/components/schemas/Days'
                        - description: '<p>Lifetime of the active copy in days. Do not use with restores that specify <code>OutputLocation</code>.</p> <p>The Days element is required for regular restores, and must not be provided for select requests.</p>'
                    GlacierJobParameters:
                      allOf:
                        - $ref: '#/components/schemas/GlacierJobParameters'
                        - description: S3 Glacier related parameters pertaining to this job. Do not use with restores that specify <code>OutputLocation</code>.
                    Type:
                      allOf:
                        - $ref: '#/components/schemas/RestoreRequestType'
                        - description: Type of restore request.
                    Tier:
                      allOf:
                        - $ref: '#/components/schemas/Tier'
                        - description: Retrieval tier at which the restore will be processed.
                    Description:
                      allOf:
                        - $ref: '#/components/schemas/Description'
                        - description: The optional description for the job.
                    SelectParameters:
                      allOf:
                        - $ref: '#/components/schemas/SelectParameters'
                        - description: Describes the parameters for Select job types.
                    OutputLocation:
                      allOf:
                        - $ref: '#/components/schemas/OutputLocation'
                        - description: Describes the location where the restore job's output is stored.
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#select&select-type=2':
    post:
      operationId: SelectObjectContent
      description: "<p>This action filters the contents of an Amazon S3 object based on a simple structured query language (SQL) statement. In the request, along with the SQL expression, you must also specify a data serialization format (JSON, CSV, or Apache Parquet) of the object. Amazon S3 uses this format to parse object data into records, and returns only records that match the specified SQL expression. You must also specify the data serialization format for the response.</p> <p>This action is not supported by Amazon S3 on Outposts.</p> <p>For more information about Amazon S3 Select, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/selecting-content-from-objects.html\">Selecting Content from Objects</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-glacier-select-sql-reference-select.html\">SELECT Command</a> in the <i>Amazon S3 User Guide</i>.</p> <p/> <dl> <dt>Permissions</dt> <dd> <p>You must have <code>s3:GetObject</code> permission for this operation.\_Amazon S3 Select does not support anonymous access. For more information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\">Specifying Permissions in a Policy</a> in the <i>Amazon S3 User Guide</i>.</p> </dd> <dt>Object Data Formats</dt> <dd> <p>You can use Amazon S3 Select to query objects that have the following format properties:</p> <ul> <li> <p> <i>CSV, JSON, and Parquet</i> - Objects must be in CSV, JSON, or Parquet format.</p> </li> <li> <p> <i>UTF-8</i> - UTF-8 is the only encoding type Amazon S3 Select supports.</p> </li> <li> <p> <i>GZIP or BZIP2</i> - CSV and JSON files can be compressed using GZIP or BZIP2. GZIP and BZIP2 are the only compression formats that Amazon S3 Select supports for CSV and JSON files. Amazon S3 Select supports columnar compression for Parquet using GZIP or Snappy. Amazon S3 Select does not support whole-object compression for Parquet objects.</p> </li> <li> <p> <i>Server-side encryption</i> - Amazon S3 Select supports querying objects that are protected with server-side encryption.</p> <p>For objects that are encrypted with customer-provided encryption keys (SSE-C), you must use HTTPS, and you must use the headers that are documented in the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a>. For more information about SSE-C, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html\">Server-Side Encryption (Using Customer-Provided Encryption Keys)</a> in the <i>Amazon S3 User Guide</i>.</p> <p>For objects that are encrypted with Amazon S3 managed keys (SSE-S3) and Amazon Web Services KMS keys (SSE-KMS), server-side encryption is handled transparently, so you don't need to specify anything. For more information about server-side encryption, including SSE-S3 and SSE-KMS, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html\">Protecting Data Using Server-Side Encryption</a> in the <i>Amazon S3 User Guide</i>.</p> </li> </ul> </dd> <dt>Working with the Response Body</dt> <dd> <p>Given the response size is unknown, Amazon S3 Select streams the response as a series of messages and includes a <code>Transfer-Encoding</code> header with <code>chunked</code> as its value in the response. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTSelectObjectAppendix.html\">Appendix: SelectObjectContent Response</a>.</p> </dd> <dt>GetObject Support</dt> <dd> <p>The <code>SelectObjectContent</code> action does not support the following <code>GetObject</code> functionality. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a>.</p> <ul> <li> <p> <code>Range</code>: Although you can specify a scan range for an Amazon S3 Select request (see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_SelectObjectContent.html#AmazonS3-SelectObjectContent-request-ScanRange\">SelectObjectContentRequest - ScanRange</a> in the request parameters), you cannot specify the range of bytes of an object to return. </p> </li> <li> <p>The <code>GLACIER</code>, <code>DEEP_ARCHIVE</code>, and <code>REDUCED_REDUNDANCY</code> storage classes, or the <code>ARCHIVE_ACCESS</code> and <code>DEEP_ARCHIVE_ACCESS</code> access tiers of the <code>INTELLIGENT_TIERING</code> storage class: You cannot query objects in the <code>GLACIER</code>, <code>DEEP_ARCHIVE</code>, or <code>REDUCED_REDUNDANCY</code> storage classes, nor objects in the <code>ARCHIVE_ACCESS</code> or <code>DEEP_ARCHIVE_ACCESS</code> access tiers of the <code>INTELLIGENT_TIERING</code> storage class. For more information about storage classes, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-class-intro.html\">Using Amazon S3 storage classes</a> in the <i>Amazon S3 User Guide</i>.</p> </li> </ul> </dd> <dt>Special Errors</dt> <dd> <p>For a list of special errors for this operation, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#SelectObjectContentErrorCodeList\">List of SELECT Object Content Error Codes</a> </p> </dd> </dl> <p>The following operations are related to <code>SelectObjectContent</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html\">GetBucketLifecycleConfiguration</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html\">PutBucketLifecycleConfiguration</a> </p> </li> </ul>"
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SelectObjectContentOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The S3 bucket.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The object key.
          schema:
            type: string
            minLength: 1
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: 'The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: 'The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: select
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
        - name: select-type
          in: query
          required: true
          schema:
            type: string
            enum:
              - '2'
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Expression
                - ExpressionType
                - InputSerialization
                - OutputSerialization
              properties:
                Expression:
                  description: The expression that is used to query the object.
                  type: string
                ExpressionType:
                  description: 'The type of the provided expression (for example, SQL).'
                  type: string
                  enum:
                    - SQL
                RequestProgress:
                  description: Container for specifying if periodic <code>QueryProgress</code> messages should be sent.
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/EnableRequestProgress'
                        - description: 'Specifies whether periodic QueryProgress frames should be sent. Valid values: TRUE, FALSE. Default value: FALSE.'
                InputSerialization:
                  description: Describes the serialization format of the object.
                  type: object
                  properties:
                    CSV:
                      allOf:
                        - $ref: '#/components/schemas/CSVInput'
                        - description: Describes the serialization of a CSV-encoded object.
                    CompressionType:
                      allOf:
                        - $ref: '#/components/schemas/CompressionType'
                        - description: 'Specifies object''s compression format. Valid values: NONE, GZIP, BZIP2. Default Value: NONE.'
                    JSON:
                      allOf:
                        - $ref: '#/components/schemas/JSONInput'
                        - description: Specifies JSON as object's input serialization format.
                    Parquet:
                      allOf:
                        - $ref: '#/components/schemas/ParquetInput'
                        - description: Specifies Parquet as object's input serialization format.
                OutputSerialization:
                  description: Describes how results of the Select job are serialized.
                  type: object
                  properties:
                    CSV:
                      allOf:
                        - $ref: '#/components/schemas/CSVOutput'
                        - description: Describes the serialization of CSV-encoded Select results.
                    JSON:
                      allOf:
                        - $ref: '#/components/schemas/JSONOutput'
                        - description: Specifies JSON as request's output serialization format.
                ScanRange:
                  description: 'Specifies the byte range of the object to get the records from. A record is processed when its first byte is contained by the range. This parameter is optional, but when specified, it must not be empty. See RFC 2616, Section 14.35.1 about how to specify the start and end of the range.'
                  type: object
                  properties:
                    Start:
                      allOf:
                        - $ref: '#/components/schemas/Start'
                        - description: 'Specifies the start of the byte range. This parameter is optional. Valid values: non-negative integers. The default value is 0. If only <code>start</code> is supplied, it means scan from that point to the end of the file. For example, <code>&lt;scanrange&gt;&lt;start&gt;50&lt;/start&gt;&lt;/scanrange&gt;</code> means scan from byte 50 until the end of the file.'
                    End:
                      allOf:
                        - $ref: '#/components/schemas/End'
                        - description: 'Specifies the end of the byte range. This parameter is optional. Valid values: non-negative integers. The default value is one less than the size of the object being queried. If only the End parameter is supplied, it is interpreted to mean scan the last N bytes of the file. For example, <code>&lt;scanrange&gt;&lt;end&gt;50&lt;/end&gt;&lt;/scanrange&gt;</code> means scan the last 50 bytes.'
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#partNumber&uploadId':
    put:
      operationId: UploadPart
      description: '<p>Uploads a part in a multipart upload.</p> <note> <p>In this operation, you provide part data in your request. However, you have an option to specify your existing Amazon S3 object as a data source for the part you are uploading. To upload a part from an existing object, you use the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html">UploadPartCopy</a> operation. </p> </note> <p>You must initiate a multipart upload (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a>) before you can upload any part. In response to your initiate request, Amazon S3 returns an upload ID, a unique identifier, that you must include in your upload part request.</p> <p>Part numbers can be any number from 1 to 10,000, inclusive. A part number uniquely identifies a part and also defines its position within the object being created. If you upload a new part using the same part number that was used with a previous part, the previously uploaded part is overwritten.</p> <p>For information about maximum and minimum part sizes and other multipart upload specifications, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/qfacts.html">Multipart upload limits</a> in the <i>Amazon S3 User Guide</i>.</p> <p>To ensure that data is not corrupted when traversing the network, specify the <code>Content-MD5</code> header in the upload part request. Amazon S3 checks the part data against the provided MD5 value. If they do not match, Amazon S3 returns an error. </p> <p>If the upload request is signed with Signature Version 4, then Amazon Web Services S3 uses the <code>x-amz-content-sha256</code> header as a checksum instead of <code>Content-MD5</code>. For more information see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html">Authenticating Requests: Using the Authorization Header (Amazon Web Services Signature Version 4)</a>. </p> <p> <b>Note:</b> After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.</p> <p>For more information on multipart uploads, go to <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html">Multipart Upload Overview</a> in the <i>Amazon S3 User Guide </i>.</p> <p>For information on the permissions required to use the multipart upload API, go to <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html">Multipart Upload and Permissions</a> in the <i>Amazon S3 User Guide</i>.</p> <p>Server-side encryption is for data encryption at rest. Amazon S3 encrypts your data as it writes it to disks in its data centers and decrypts it when you access it. You have three mutually exclusive options to protect data using server-side encryption in Amazon S3, depending on how you choose to manage the encryption keys. Specifically, the encryption key options are Amazon S3 managed keys (SSE-S3), Amazon Web Services KMS keys (SSE-KMS), and Customer-Provided Keys (SSE-C). Amazon S3 encrypts data with server-side encryption using Amazon S3 managed keys (SSE-S3) by default. You can optionally tell Amazon S3 to encrypt data at rest using server-side encryption with other key options. The option you use depends on whether you want to use KMS keys (SSE-KMS) or provide your own encryption key (SSE-C). If you choose to provide your own encryption key, the request headers you provide in the request must match the headers you used in the request to initiate the upload by using <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a>. For more information, go to <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html">Using Server-Side Encryption</a> in the <i>Amazon S3 User Guide</i>.</p> <p>Server-side encryption is supported by the S3 Multipart Upload actions. Unless you are using a customer-provided encryption key (SSE-C), you don''t need to specify the encryption parameters in each UploadPart request. Instead, you only need to specify the server-side encryption parameters in the initial Initiate Multipart request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a>.</p> <p>If you requested server-side encryption using a customer-provided encryption key (SSE-C) in your initiate multipart upload request, you must provide identical encryption information in each part upload using the following headers.</p> <ul> <li> <p>x-amz-server-side-encryption-customer-algorithm</p> </li> <li> <p>x-amz-server-side-encryption-customer-key</p> </li> <li> <p>x-amz-server-side-encryption-customer-key-MD5</p> </li> </ul> <p> <code>UploadPart</code> has the following special errors:</p> <ul> <li> <ul> <li> <p> <i>Code: NoSuchUpload</i> </p> </li> <li> <p> <i>Cause: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</i> </p> </li> <li> <p> <i> HTTP Status Code: 404 Not Found </i> </p> </li> <li> <p> <i>SOAP Fault Code Prefix: Client</i> </p> </li> </ul> </li> </ul> <p>The following operations are related to <code>UploadPart</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html">CompleteMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html">AbortMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html">ListMultipartUploads</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPart.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UploadPartOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The name of the bucket to which the multipart upload was initiated.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: Content-Length
          in: header
          required: false
          description: Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.
          schema:
            type: integer
        - name: Content-MD5
          in: header
          required: false
          description: The base64-encoded 128-bit MD5 digest of the part data. This parameter is auto-populated when using the command from the CLI. This parameter is required if object lock parameters are specified.
          schema:
            type: string
        - name: x-amz-sdk-checksum-algorithm
          in: header
          required: false
          description: '<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p> <p>This checksum algorithm must be the same for all parts and it match the checksum value supplied in the <code>CreateMultipartUpload</code> request.</p>'
          schema:
            type: string
            enum:
              - CRC32
              - CRC32C
              - SHA1
              - SHA256
        - name: x-amz-checksum-crc32
          in: header
          required: false
          description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-checksum-crc32c
          in: header
          required: false
          description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-checksum-sha1
          in: header
          required: false
          description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: x-amz-checksum-sha256
          in: header
          required: false
          description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Object key for which the multipart upload was initiated.
          schema:
            type: string
            minLength: 1
        - name: partNumber
          in: query
          required: true
          description: 'Part number of part being uploaded. This is a positive integer between 1 and 10,000.'
          schema:
            type: integer
        - name: uploadId
          in: query
          required: true
          description: Upload ID identifying the multipart upload whose part is being uploaded.
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (for example, AES256).'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm header</code>. This must be the same encryption key specified in the initiate multipart upload request.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                Body:
                  description: Object data.
                  type: string
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#x-amz-copy-source&partNumber&uploadId':
    put:
      operationId: UploadPartCopy
      description: '<p>Uploads a part by copying data from an existing object as data source. You specify the data source by adding the request header <code>x-amz-copy-source</code> in your request and a byte range by adding the request header <code>x-amz-copy-source-range</code> in your request. </p> <p>For information about maximum and minimum part sizes and other multipart upload specifications, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/qfacts.html">Multipart upload limits</a> in the <i>Amazon S3 User Guide</i>. </p> <note> <p>Instead of using an existing object as part data, you might use the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a> action and provide data in your request.</p> </note> <p>You must initiate a multipart upload before you can upload any part. In response to your initiate request. Amazon S3 returns a unique identifier, the upload ID, that you must include in your upload part request.</p> <p>For more information about using the <code>UploadPartCopy</code> operation, see the following:</p> <ul> <li> <p>For conceptual information about multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html">Uploading Objects Using Multipart Upload</a> in the <i>Amazon S3 User Guide</i>.</p> </li> <li> <p>For information about permissions required to use the multipart upload API, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html">Multipart Upload and Permissions</a> in the <i>Amazon S3 User Guide</i>.</p> </li> <li> <p>For information about copying objects using a single atomic action vs. a multipart upload, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectOperations.html">Operations on Objects</a> in the <i>Amazon S3 User Guide</i>.</p> </li> <li> <p>For information about using server-side encryption with customer-provided encryption keys with the <code>UploadPartCopy</code> operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html">CopyObject</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a>.</p> </li> </ul> <p>Note the following additional considerations about the request headers <code>x-amz-copy-source-if-match</code>, <code>x-amz-copy-source-if-none-match</code>, <code>x-amz-copy-source-if-unmodified-since</code>, and <code>x-amz-copy-source-if-modified-since</code>:</p> <p> </p> <ul> <li> <p> <b>Consideration 1</b> - If both of the <code>x-amz-copy-source-if-match</code> and <code>x-amz-copy-source-if-unmodified-since</code> headers are present in the request as follows:</p> <p> <code>x-amz-copy-source-if-match</code> condition evaluates to <code>true</code>, and;</p> <p> <code>x-amz-copy-source-if-unmodified-since</code> condition evaluates to <code>false</code>;</p> <p>Amazon S3 returns <code>200 OK</code> and copies the data. </p> </li> <li> <p> <b>Consideration 2</b> - If both of the <code>x-amz-copy-source-if-none-match</code> and <code>x-amz-copy-source-if-modified-since</code> headers are present in the request as follows:</p> <p> <code>x-amz-copy-source-if-none-match</code> condition evaluates to <code>false</code>, and;</p> <p> <code>x-amz-copy-source-if-modified-since</code> condition evaluates to <code>true</code>;</p> <p>Amazon S3 returns <code>412 Precondition Failed</code> response code. </p> </li> </ul> <dl> <dt>Versioning</dt> <dd> <p>If your bucket has versioning enabled, you could have multiple versions of the same object. By default, <code>x-amz-copy-source</code> identifies the current version of the object to copy. If the current version is a delete marker and you don''t specify a versionId in the <code>x-amz-copy-source</code>, Amazon S3 returns a 404 error, because the object does not exist. If you specify versionId in the <code>x-amz-copy-source</code> and the versionId is a delete marker, Amazon S3 returns an HTTP 400 error, because you are not allowed to specify a delete marker as a version for the <code>x-amz-copy-source</code>. </p> <p>You can optionally specify a specific version of the source object to copy by adding the <code>versionId</code> subresource as shown in the following example:</p> <p> <code>x-amz-copy-source: /bucket/object?versionId=version id</code> </p> </dd> <dt>Special errors</dt> <dd> <ul> <li> <ul> <li> <p> <i>Code: NoSuchUpload</i> </p> </li> <li> <p> <i>Cause: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</i> </p> </li> <li> <p> <i>HTTP Status Code: 404 Not Found</i> </p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code: InvalidRequest</i> </p> </li> <li> <p> <i>Cause: The specified copy source is not supported as a byte-range copy source.</i> </p> </li> <li> <p> <i>HTTP Status Code: 400 Bad Request</i> </p> </li> </ul> </li> </ul> </dd> </dl> <p>The following operations are related to <code>UploadPartCopy</code>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html">CompleteMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html">AbortMultipartUpload</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html">ListMultipartUploads</a> </p> </li> </ul>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPartCopy.html'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UploadPartCopyOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: '<p>The bucket name.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
          schema:
            type: string
        - name: x-amz-copy-source
          in: header
          required: true
          description: '<p>Specifies the source object for the copy operation. You specify the value in one of two formats, depending on whether you want to access the source object through an <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">access point</a>:</p> <ul> <li> <p>For objects not accessed through an access point, specify the name of the source bucket and key of the source object, separated by a slash (/). For example, to copy the object <code>reports/january.pdf</code> from the bucket <code>awsexamplebucket</code>, use <code>awsexamplebucket/reports/january.pdf</code>. The value must be URL-encoded.</p> </li> <li> <p>For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format <code>arn:aws:s3:&lt;Region&gt;:&lt;account-id&gt;:accesspoint/&lt;access-point-name&gt;/object/&lt;key&gt;</code>. For example, to copy the object <code>reports/january.pdf</code> through access point <code>my-access-point</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/reports/january.pdf</code>. The value must be URL encoded.</p> <note> <p>Amazon S3 supports copy operations using access points only when the source and destination buckets are in the same Amazon Web Services Region.</p> </note> <p>Alternatively, for objects accessed through Amazon S3 on Outposts, specify the ARN of the object as accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/object/&lt;key&gt;</code>. For example, to copy the object <code>reports/january.pdf</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/object/reports/january.pdf</code>. The value must be URL-encoded. </p> </li> </ul> <p>To copy a specific version of an object, append <code>?versionId=&lt;version-id&gt;</code> to the value (for example, <code>awsexamplebucket/reports/january.pdf?versionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893</code>). If you don''t specify a version ID, Amazon S3 copies the latest version of the source object.</p>'
          schema:
            type: string
            pattern: \/.+\/.+
        - name: x-amz-copy-source-if-match
          in: header
          required: false
          description: Copies the object if its entity tag (ETag) matches the specified tag.
          schema:
            type: string
        - name: x-amz-copy-source-if-modified-since
          in: header
          required: false
          description: Copies the object if it has been modified since the specified time.
          schema:
            type: string
            format: date-time
        - name: x-amz-copy-source-if-none-match
          in: header
          required: false
          description: Copies the object if its entity tag (ETag) is different than the specified ETag.
          schema:
            type: string
        - name: x-amz-copy-source-if-unmodified-since
          in: header
          required: false
          description: Copies the object if it hasn't been modified since the specified time.
          schema:
            type: string
            format: date-time
        - name: x-amz-copy-source-range
          in: header
          required: false
          description: 'The range of bytes to copy from the source object. The range value must use the form bytes=first-last, where the first and last are the zero-based byte offsets to copy. For example, bytes=0-9 indicates that you want to copy the first 10 bytes of the source. You can copy a range only if the source object is greater than 5 MB.'
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Object key for which the multipart upload was initiated.
          schema:
            type: string
            minLength: 1
        - name: partNumber
          in: query
          required: true
          description: 'Part number of part being copied. This is a positive integer between 1 and 10,000.'
          schema:
            type: integer
        - name: uploadId
          in: query
          required: true
          description: Upload ID identifying the multipart upload whose part is being copied.
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (for example, AES256).'
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header. This must be the same encryption key specified in the initiate multipart upload request.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-copy-source-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use when decrypting the source object (for example, AES256).'
          schema:
            type: string
        - name: x-amz-copy-source-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.
          schema:
            type: string
            format: password
        - name: x-amz-copy-source-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
        - name: x-amz-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected destination bucket owner. If the destination bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
        - name: x-amz-source-expected-bucket-owner
          in: header
          required: false
          description: 'The account ID of the expected source bucket owner. If the source bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
  /WriteGetObjectResponse#x-amz-request-route&x-amz-request-token:
    post:
      operationId: WriteGetObjectResponse
      description: '<p>Passes transformed objects to a <code>GetObject</code> operation when using Object Lambda access points. For information about Object Lambda access points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/transforming-objects.html">Transforming objects with Object Lambda access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>This operation supports metadata that can be returned by <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a>, in addition to <code>RequestRoute</code>, <code>RequestToken</code>, <code>StatusCode</code>, <code>ErrorCode</code>, and <code>ErrorMessage</code>. The <code>GetObject</code> response metadata is supported so that the <code>WriteGetObjectResponse</code> caller, typically an Lambda function, can provide the same metadata when it internally invokes <code>GetObject</code>. When <code>WriteGetObjectResponse</code> is called by a customer-owned Lambda function, the metadata returned to the end user <code>GetObject</code> call might differ from what Amazon S3 would normally return.</p> <p>You can include any number of metadata headers. When including a metadata header, it should be prefaced with <code>x-amz-meta</code>. For example, <code>x-amz-meta-my-custom-header: MyCustomValue</code>. The primary use case for this is to forward <code>GetObject</code> metadata.</p> <p>Amazon Web Services provides some prebuilt Lambda functions that you can use with S3 Object Lambda to detect and redact personally identifiable information (PII) and decompress S3 objects. These Lambda functions are available in the Amazon Web Services Serverless Application Repository, and can be selected through the Amazon Web Services Management Console when you create your Object Lambda access point.</p> <p>Example 1: PII Access Control - This Lambda function uses Amazon Comprehend, a natural language processing (NLP) service using machine learning to find insights and relationships in text. It automatically detects personally identifiable information (PII) such as names, addresses, dates, credit card numbers, and social security numbers from documents in your Amazon S3 bucket. </p> <p>Example 2: PII Redaction - This Lambda function uses Amazon Comprehend, a natural language processing (NLP) service using machine learning to find insights and relationships in text. It automatically redacts personally identifiable information (PII) such as names, addresses, dates, credit card numbers, and social security numbers from documents in your Amazon S3 bucket. </p> <p>Example 3: Decompression - The Lambda function S3ObjectLambdaDecompression, is equipped to decompress objects stored in S3 in one of six compressed file formats including bzip2, gzip, snappy, zlib, zstandard and ZIP. </p> <p>For information on how to view and use these functions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/olap-examples.html">Using Amazon Web Services built Lambda functions</a> in the <i>Amazon S3 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-request-route
          in: header
          required: true
          description: Route prefix to the HTTP URL generated.
          schema:
            type: string
        - name: x-amz-request-token
          in: header
          required: true
          description: A single use encrypted token that maps <code>WriteGetObjectResponse</code> to the end user <code>GetObject</code> request.
          schema:
            type: string
        - name: x-amz-fwd-status
          in: header
          required: false
          description: <p>The integer status code for an HTTP response of a corresponding <code>GetObject</code> request. The following is a list of status codes.</p> <ul> <li> <p> <code>200 - OK</code> </p> </li> <li> <p> <code>206 - Partial Content</code> </p> </li> <li> <p> <code>304 - Not Modified</code> </p> </li> <li> <p> <code>400 - Bad Request</code> </p> </li> <li> <p> <code>401 - Unauthorized</code> </p> </li> <li> <p> <code>403 - Forbidden</code> </p> </li> <li> <p> <code>404 - Not Found</code> </p> </li> <li> <p> <code>405 - Method Not Allowed</code> </p> </li> <li> <p> <code>409 - Conflict</code> </p> </li> <li> <p> <code>411 - Length Required</code> </p> </li> <li> <p> <code>412 - Precondition Failed</code> </p> </li> <li> <p> <code>416 - Range Not Satisfiable</code> </p> </li> <li> <p> <code>500 - Internal Server Error</code> </p> </li> <li> <p> <code>503 - Service Unavailable</code> </p> </li> </ul>
          schema:
            type: integer
        - name: x-amz-fwd-error-code
          in: header
          required: false
          description: 'A string that uniquely identifies an error condition. Returned in the &lt;Code&gt; tag of the error XML response for a corresponding <code>GetObject</code> call. Cannot be used with a successful <code>StatusCode</code> header or when the transformed object is provided in the body. All error codes from S3 are sentence-cased. The regular expression (regex) value is <code>"^[A-Z][a-zA-Z]+$"</code>.'
          schema:
            type: string
        - name: x-amz-fwd-error-message
          in: header
          required: false
          description: Contains a generic description of the error condition. Returned in the &lt;Message&gt; tag of the error XML response for a corresponding <code>GetObject</code> call. Cannot be used with a successful <code>StatusCode</code> header or when the transformed object is provided in body.
          schema:
            type: string
        - name: x-amz-fwd-header-accept-ranges
          in: header
          required: false
          description: Indicates that a range of bytes was specified.
          schema:
            type: string
        - name: x-amz-fwd-header-Cache-Control
          in: header
          required: false
          description: Specifies caching behavior along the request/reply chain.
          schema:
            type: string
        - name: x-amz-fwd-header-Content-Disposition
          in: header
          required: false
          description: Specifies presentational information for the object.
          schema:
            type: string
        - name: x-amz-fwd-header-Content-Encoding
          in: header
          required: false
          description: Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
          schema:
            type: string
        - name: x-amz-fwd-header-Content-Language
          in: header
          required: false
          description: The language the content is in.
          schema:
            type: string
        - name: Content-Length
          in: header
          required: false
          description: The size of the content body in bytes.
          schema:
            type: integer
        - name: x-amz-fwd-header-Content-Range
          in: header
          required: false
          description: The portion of the object returned in the response.
          schema:
            type: string
        - name: x-amz-fwd-header-Content-Type
          in: header
          required: false
          description: A standard MIME type describing the format of the object data.
          schema:
            type: string
        - name: x-amz-fwd-header-x-amz-checksum-crc32
          in: header
          required: false
          description: '<p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 32-bit CRC32 checksum of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original <code>GetObject</code> request required checksum validation. For more information about checksums, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>Only one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.</p> <p/>'
          schema:
            type: string
        - name: x-amz-fwd-header-x-amz-checksum-crc32c
          in: header
          required: false
          description: '<p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 32-bit CRC32C checksum of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original <code>GetObject</code> request required checksum validation. For more information about checksums, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>Only one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.</p>'
          schema:
            type: string
        - name: x-amz-fwd-header-x-amz-checksum-sha1
          in: header
          required: false
          description: '<p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 160-bit SHA-1 digest of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original <code>GetObject</code> request required checksum validation. For more information about checksums, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>Only one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.</p>'
          schema:
            type: string
        - name: x-amz-fwd-header-x-amz-checksum-sha256
          in: header
          required: false
          description: '<p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 256-bit SHA-256 digest of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original <code>GetObject</code> request required checksum validation. For more information about checksums, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>Only one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.</p>'
          schema:
            type: string
        - name: x-amz-fwd-header-x-amz-delete-marker
          in: header
          required: false
          description: 'Specifies whether an object stored in Amazon S3 is (<code>true</code>) or is not (<code>false</code>) a delete marker. '
          schema:
            type: boolean
        - name: x-amz-fwd-header-ETag
          in: header
          required: false
          description: 'An opaque identifier assigned by a web server to a specific version of a resource found at a URL. '
          schema:
            type: string
        - name: x-amz-fwd-header-Expires
          in: header
          required: false
          description: The date and time at which the object is no longer cacheable.
          schema:
            type: string
            format: date-time
        - name: x-amz-fwd-header-x-amz-expiration
          in: header
          required: false
          description: 'If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the <code>expiry-date</code> and <code>rule-id</code> key-value pairs that provide the object expiration information. The value of the <code>rule-id</code> is URL-encoded. '
          schema:
            type: string
        - name: x-amz-fwd-header-Last-Modified
          in: header
          required: false
          description: The date and time that the object was last modified.
          schema:
            type: string
            format: date-time
        - name: x-amz-fwd-header-x-amz-missing-meta
          in: header
          required: false
          description: 'Set to the number of metadata entries not returned in <code>x-amz-meta</code> headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.'
          schema:
            type: integer
        - name: x-amz-fwd-header-x-amz-object-lock-mode
          in: header
          required: false
          description: 'Indicates whether an object stored in Amazon S3 has Object Lock enabled. For more information about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock.html">Object Lock</a>.'
          schema:
            type: string
            enum:
              - GOVERNANCE
              - COMPLIANCE
        - name: x-amz-fwd-header-x-amz-object-lock-legal-hold
          in: header
          required: false
          description: Indicates whether an object stored in Amazon S3 has an active legal hold.
          schema:
            type: string
            enum:
              - 'ON'
              - 'OFF'
        - name: x-amz-fwd-header-x-amz-object-lock-retain-until-date
          in: header
          required: false
          description: The date and time when Object Lock is configured to expire.
          schema:
            type: string
            format: date-time
        - name: x-amz-fwd-header-x-amz-mp-parts-count
          in: header
          required: false
          description: The count of parts this object has.
          schema:
            type: integer
        - name: x-amz-fwd-header-x-amz-replication-status
          in: header
          required: false
          description: 'Indicates if request involves bucket that is either a source or destination in a Replication rule. For more information about S3 Replication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication.html">Replication</a>.'
          schema:
            type: string
            enum:
              - COMPLETE
              - PENDING
              - FAILED
              - REPLICA
        - name: x-amz-fwd-header-x-amz-request-charged
          in: header
          required: false
          description: ''
          schema:
            type: string
            enum:
              - requester
            description: 'If present, indicates that the requester was successfully charged for the request.'
        - name: x-amz-fwd-header-x-amz-restore
          in: header
          required: false
          description: Provides information about object restoration operation and expiration time of the restored object copy.
          schema:
            type: string
        - name: x-amz-fwd-header-x-amz-server-side-encryption
          in: header
          required: false
          description: ' The server-side encryption algorithm used when storing requested object in Amazon S3 (for example, AES256, <code>aws:kms</code>).'
          schema:
            type: string
            enum:
              - AES256
              - 'aws:kms'
              - 'aws:kms:dsse'
        - name: x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: Encryption algorithm used if server-side encryption with a customer-provided encryption key was specified for object stored in Amazon S3.
          schema:
            type: string
        - name: x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id
          in: header
          required: false
          description: ' If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric encryption customer managed key that was used for stored in Amazon S3 object. '
          schema:
            type: string
            format: password
        - name: x-amz-fwd-header-x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: ' 128-bit MD5 digest of customer-provided encryption key used in Amazon S3 to encrypt data stored in S3. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html">Protecting data using server-side encryption with customer-provided encryption keys (SSE-C)</a>.'
          schema:
            type: string
        - name: x-amz-fwd-header-x-amz-storage-class
          in: header
          required: false
          description: '<p>Provides storage class information of the object. Amazon S3 returns this header for all objects except for S3 Standard storage class objects.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a>.</p>'
          schema:
            type: string
            enum:
              - STANDARD
              - REDUCED_REDUNDANCY
              - STANDARD_IA
              - ONEZONE_IA
              - INTELLIGENT_TIERING
              - GLACIER
              - DEEP_ARCHIVE
              - OUTPOSTS
              - GLACIER_IR
              - SNOW
        - name: x-amz-fwd-header-x-amz-tagging-count
          in: header
          required: false
          description: 'The number of tags, if any, on the object.'
          schema:
            type: integer
        - name: x-amz-fwd-header-x-amz-version-id
          in: header
          required: false
          description: An ID used to reference a specific version of the object.
          schema:
            type: string
        - name: x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled
          in: header
          required: false
          description: ' Indicates whether the object stored in Amazon S3 uses an S3 bucket key for server-side encryption with Amazon Web Services KMS (SSE-KMS).'
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                Body:
                  description: The object data.
                  type: string
                x-amz-meta-:
                  description: A map of metadata to store with the object in S3.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/MetadataValue'
    parameters:
      - $ref: '#/components/parameters/x-amz-security-token'
components:
  parameters:
    x-amz-security-token:
      name: x-amz-security-token
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon S3 signature
      x-amazon-apigateway-authtype: awsS3
  schemas:
    AbortMultipartUploadOutput:
      type: object
      example: {}
      properties: {}
    NoSuchUpload: {}
    CompleteMultipartUploadOutput:
      type: object
      example:
        Bucket: acexamplebucket
        ETag: '"4d9031c7644d8081c2829f4ea23c55f7-2"'
        Key: bigobject
        Location: 'https://examplebucket.s3.<Region>.amazonaws.com/bigobject'
      properties:
        Location:
          allOf:
            - $ref: '#/components/schemas/Location'
            - description: The URI that identifies the newly created object.
        Bucket:
          allOf:
            - $ref: '#/components/schemas/BucketName'
            - description: '<p>The name of the bucket that contains the newly created object. Does not return the access point ARN or access point alias if used.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
        Key:
          allOf:
            - $ref: '#/components/schemas/ObjectKey'
            - description: The object key of the newly created object.
        ETag:
          allOf:
            - $ref: '#/components/schemas/ETag'
            - description: 'Entity tag that identifies the newly created object''s data. Objects with different object data will have different entity tags. The entity tag is an opaque string. The entity tag may or may not be an MD5 digest of the object data. If the entity tag is not an MD5 digest of the object data, it will contain one or more nonhexadecimal characters and/or will consist of less than 32 or more than 32 hexadecimal digits. For more information about how the entity tag is calculated, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumCRC32:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32'
            - description: 'The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumCRC32C:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32C'
            - description: 'The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA1:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA1'
            - description: 'The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA256:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA256'
            - description: 'The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
    CompletedPartList:
      type: array
      items:
        $ref: '#/components/schemas/CompletedPart'
      xml:
        wrapped: false
    CopyObjectOutput:
      type: object
      example:
        CopyObjectResult:
          ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
          LastModified: '2016-12-15T17:38:53.000Z'
      properties:
        CopyObjectResult:
          allOf:
            - $ref: '#/components/schemas/CopyObjectResult'
            - description: Container for all response elements.
    MetadataValue:
      type: string
    ObjectNotInActiveTierError: {}
    CreateBucketOutput:
      type: object
      example:
        Location: /examplebucket
      properties: {}
    BucketLocationConstraint:
      type: string
      enum:
        - af-south-1
        - ap-east-1
        - ap-northeast-1
        - ap-northeast-2
        - ap-northeast-3
        - ap-south-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-southeast-3
        - ca-central-1
        - cn-north-1
        - cn-northwest-1
        - EU
        - eu-central-1
        - eu-north-1
        - eu-south-1
        - eu-west-1
        - eu-west-2
        - eu-west-3
        - me-south-1
        - sa-east-1
        - us-east-2
        - us-gov-east-1
        - us-gov-west-1
        - us-west-1
        - us-west-2
        - ap-south-2
        - eu-south-2
    BucketAlreadyExists: {}
    BucketAlreadyOwnedByYou: {}
    CreateMultipartUploadOutput:
      type: object
      example:
        Bucket: examplebucket
        Key: largeobject
        UploadId: ibZBv_75gd9r8lH_gqXatLdxMVpAlj6ZQjEs.OwyF3953YdwbcQnMA2BLGn8Lx12fQNICtMw5KyteFeHw.Sjng--
      properties:
        Bucket:
          allOf:
            - $ref: '#/components/schemas/BucketName'
            - description: '<p>The name of the bucket to which the multipart upload was initiated. Does not return the access point ARN or access point alias if used.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
        Key:
          allOf:
            - $ref: '#/components/schemas/ObjectKey'
            - description: Object key for which the multipart upload was initiated.
        UploadId:
          allOf:
            - $ref: '#/components/schemas/MultipartUploadId'
            - description: ID for the initiated multipart upload.
    DeleteObjectOutput:
      type: object
      example: {}
      properties: {}
    DeleteObjectTaggingOutput:
      type: object
      example:
        VersionId: ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI
      properties: {}
    DeleteObjectsOutput:
      type: object
      example:
        Deleted:
          - Key: HappyFace.jpg
            VersionId: yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd
          - Key: HappyFace.jpg
            VersionId: 2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b
      properties:
        Deleted:
          allOf:
            - $ref: '#/components/schemas/DeletedObjects'
            - description: Container element for a successful delete. It identifies the object that was successfully deleted.
        Errors:
          allOf:
            - $ref: '#/components/schemas/Errors'
            - xml:
                name: Error
              description: Container for a failed delete action that describes the object that Amazon S3 attempted to delete and the error it encountered.
    ObjectIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectIdentifier'
      xml:
        wrapped: false
    Quiet:
      type: boolean
    GetBucketAccelerateConfigurationOutput:
      type: object
      properties:
        Status:
          allOf:
            - $ref: '#/components/schemas/BucketAccelerateStatus'
            - description: The accelerate configuration of the bucket.
    GetBucketAclOutput:
      type: object
      properties:
        Owner:
          allOf:
            - $ref: '#/components/schemas/Owner'
            - description: Container for the bucket owner's display name and ID.
        Grants:
          allOf:
            - $ref: '#/components/schemas/Grants'
            - xml:
                name: AccessControlList
              description: A list of grants.
    GetBucketAnalyticsConfigurationOutput:
      type: object
      properties:
        AnalyticsConfiguration:
          allOf:
            - $ref: '#/components/schemas/AnalyticsConfiguration'
            - description: The configuration and any analyses for the analytics filter.
    GetBucketCorsOutput:
      type: object
      example:
        CORSRules:
          - AllowedHeaders:
              - Authorization
            AllowedMethods:
              - GET
            AllowedOrigins:
              - '*'
            MaxAgeSeconds: 3000
      properties:
        CORSRules:
          allOf:
            - $ref: '#/components/schemas/CORSRules'
            - xml:
                name: CORSRule
              description: A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.
    GetBucketEncryptionOutput:
      type: object
      properties:
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
    GetBucketIntelligentTieringConfigurationOutput:
      type: object
      properties:
        IntelligentTieringConfiguration:
          allOf:
            - $ref: '#/components/schemas/IntelligentTieringConfiguration'
            - description: Container for S3 Intelligent-Tiering configuration.
    GetBucketInventoryConfigurationOutput:
      type: object
      properties:
        InventoryConfiguration:
          allOf:
            - $ref: '#/components/schemas/InventoryConfiguration'
            - description: Specifies the inventory configuration.
    GetBucketLifecycleOutput:
      type: object
      example:
        Rules:
          - Expiration:
              Days: 1
            ID: delete logs
            Prefix: 123/
            Status: Enabled
      properties:
        Rules:
          allOf:
            - $ref: '#/components/schemas/Rules'
            - xml:
                name: Rule
              description: Container for a lifecycle rule.
    GetBucketLifecycleConfigurationOutput:
      type: object
      example:
        Rules:
          - ID: Rule for TaxDocs/
            Prefix: TaxDocs
            Status: Enabled
            Transitions:
              - Days: 365
                StorageClass: STANDARD_IA
      properties:
        Rules:
          allOf:
            - $ref: '#/components/schemas/LifecycleRules'
            - xml:
                name: Rule
              description: Container for a lifecycle rule.
    GetBucketLocationOutput:
      type: object
      example:
        LocationConstraint: us-west-2
      properties:
        LocationConstraint:
          allOf:
            - $ref: '#/components/schemas/BucketLocationConstraint'
            - description: 'Specifies the Region where the bucket resides. For a list of all the Amazon S3 supported location constraints by Region, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a>. Buckets in Region <code>us-east-1</code> have a LocationConstraint of <code>null</code>.'
    GetBucketLoggingOutput:
      type: object
      properties:
        LoggingEnabled:
          $ref: '#/components/schemas/LoggingEnabled'
    GetBucketMetricsConfigurationOutput:
      type: object
      properties:
        MetricsConfiguration:
          allOf:
            - $ref: '#/components/schemas/MetricsConfiguration'
            - description: Specifies the metrics configuration.
    NotificationConfigurationDeprecated:
      type: object
      example:
        QueueConfiguration:
          Event: 's3:ObjectCreated:Put'
          Events:
            - 's3:ObjectCreated:Put'
          Id: MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx
          Queue: 'arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue'
        TopicConfiguration:
          Event: 's3:ObjectCreated:Copy'
          Events:
            - 's3:ObjectCreated:Copy'
          Id: YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi
          Topic: 'arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic'
      properties:
        TopicConfiguration:
          allOf:
            - $ref: '#/components/schemas/TopicConfigurationDeprecated'
            - description: 'This data type is deprecated. A container for specifying the configuration for publication of messages to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events. '
        QueueConfiguration:
          allOf:
            - $ref: '#/components/schemas/QueueConfigurationDeprecated'
            - description: 'This data type is deprecated. This data type specifies the configuration for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon S3 detects specified events. '
        CloudFunctionConfiguration:
          allOf:
            - $ref: '#/components/schemas/CloudFunctionConfiguration'
            - description: Container for specifying the Lambda notification configuration.
    NotificationConfiguration:
      type: object
      properties:
        TopicConfigurations:
          allOf:
            - $ref: '#/components/schemas/TopicConfigurationList'
            - xml:
                name: TopicConfiguration
              description: The topic to which notifications are sent and the events for which notifications are generated.
        QueueConfigurations:
          allOf:
            - $ref: '#/components/schemas/QueueConfigurationList'
            - xml:
                name: QueueConfiguration
              description: The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
        LambdaFunctionConfigurations:
          allOf:
            - $ref: '#/components/schemas/LambdaFunctionConfigurationList'
            - xml:
                name: CloudFunctionConfiguration
              description: Describes the Lambda functions to invoke and the events for which to invoke them.
        EventBridgeConfiguration:
          allOf:
            - $ref: '#/components/schemas/EventBridgeConfiguration'
            - description: Enables delivery of events to Amazon EventBridge.
      description: 'A container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off for the bucket.'
    GetBucketOwnershipControlsOutput:
      type: object
      properties:
        OwnershipControls:
          allOf:
            - $ref: '#/components/schemas/OwnershipControls'
            - description: 'The <code>OwnershipControls</code> (BucketOwnerEnforced, BucketOwnerPreferred, or ObjectWriter) currently in effect for this Amazon S3 bucket.'
    GetBucketPolicyOutput:
      type: object
      example:
        Policy: '{"Version":"2008-10-17","Id":"LogPolicy","Statement":[{"Sid":"Enables the log delivery group to publish logs to your bucket ","Effect":"Allow","Principal":{"AWS":"111122223333"},"Action":["s3:GetBucketAcl","s3:GetObjectAcl","s3:PutObject"],"Resource":["arn:aws:s3:::policytest1/*","arn:aws:s3:::policytest1"]}]}'
      properties:
        Policy:
          allOf:
            - $ref: '#/components/schemas/Policy'
            - description: The bucket policy as a JSON document.
    GetBucketPolicyStatusOutput:
      type: object
      properties:
        PolicyStatus:
          allOf:
            - $ref: '#/components/schemas/PolicyStatus'
            - description: The policy status for the specified bucket.
    GetBucketReplicationOutput:
      type: object
      example:
        ReplicationConfiguration:
          Role: 'arn:aws:iam::acct-id:role/example-role'
          Rules:
            - Destination:
                Bucket: 'arn:aws:s3:::destination-bucket'
              ID: MWIwNTkwZmItMTE3MS00ZTc3LWJkZDEtNzRmODQwYzc1OTQy
              Prefix: Tax
              Status: Enabled
      properties:
        ReplicationConfiguration:
          $ref: '#/components/schemas/ReplicationConfiguration'
    GetBucketRequestPaymentOutput:
      type: object
      example:
        Payer: BucketOwner
      properties:
        Payer:
          allOf:
            - $ref: '#/components/schemas/Payer'
            - description: Specifies who pays for the download and request fees.
    GetBucketTaggingOutput:
      type: object
      required:
        - TagSet
      example:
        TagSet:
          - Key: key1
            Value: value1
          - Key: key2
            Value: value2
      properties:
        TagSet:
          allOf:
            - $ref: '#/components/schemas/TagSet'
            - description: Contains the tag set.
    GetBucketVersioningOutput:
      type: object
      example:
        MFADelete: Disabled
        Status: Enabled
      properties:
        Status:
          allOf:
            - $ref: '#/components/schemas/BucketVersioningStatus'
            - description: The versioning state of the bucket.
        MFADelete:
          allOf:
            - $ref: '#/components/schemas/MFADeleteStatus'
            - xml:
                name: MfaDelete
              description: 'Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.'
    GetBucketWebsiteOutput:
      type: object
      example:
        ErrorDocument:
          Key: error.html
        IndexDocument:
          Suffix: index.html
      properties:
        RedirectAllRequestsTo:
          allOf:
            - $ref: '#/components/schemas/RedirectAllRequestsTo'
            - description: Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
        IndexDocument:
          allOf:
            - $ref: '#/components/schemas/IndexDocument'
            - description: The name of the index document for the website (for example <code>index.html</code>).
        ErrorDocument:
          allOf:
            - $ref: '#/components/schemas/ErrorDocument'
            - description: The object key name of the website error document to use for 4XX class errors.
        RoutingRules:
          allOf:
            - $ref: '#/components/schemas/RoutingRules'
            - description: Rules that define when a redirect is applied and the redirect behavior.
    GetObjectOutput:
      type: object
      example:
        AcceptRanges: bytes
        ContentLength: '3191'
        ContentType: image/jpeg
        ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
        LastModified: 'Thu, 15 Dec 2016 01:19:41 GMT'
        Metadata: {}
        TagCount: 2
        VersionId: 'null'
      properties:
        Body:
          allOf:
            - $ref: '#/components/schemas/Body'
            - description: Object data.
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - xml:
                name: x-amz-meta-
              description: A map of metadata to store with the object in S3.
    NoSuchKey: {}
    InvalidObjectState: {}
    GetObjectAclOutput:
      type: object
      example:
        Grants:
          - Grantee:
              DisplayName: owner-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
              Type: CanonicalUser
            Permission: WRITE
          - Grantee:
              DisplayName: owner-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
              Type: CanonicalUser
            Permission: WRITE_ACP
          - Grantee:
              DisplayName: owner-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
              Type: CanonicalUser
            Permission: READ
          - Grantee:
              DisplayName: owner-display-name
              ID: 852b113eexamplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
              Type: CanonicalUser
            Permission: READ_ACP
        Owner:
          DisplayName: owner-display-name
          ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
      properties:
        Owner:
          allOf:
            - $ref: '#/components/schemas/Owner'
            - description: ' Container for the bucket owner''s display name and ID.'
        Grants:
          allOf:
            - $ref: '#/components/schemas/Grants'
            - xml:
                name: AccessControlList
              description: A list of grants.
    GetObjectAttributesOutput:
      type: object
      properties:
        ETag:
          allOf:
            - $ref: '#/components/schemas/ETag'
            - description: An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.
        Checksum:
          allOf:
            - $ref: '#/components/schemas/Checksum'
            - description: The checksum or digest of the object.
        ObjectParts:
          allOf:
            - $ref: '#/components/schemas/GetObjectAttributesParts'
            - description: A collection of parts associated with a multipart upload.
        StorageClass:
          allOf:
            - $ref: '#/components/schemas/StorageClass'
            - description: '<p>Provides the storage class information of the object. Amazon S3 returns this header for all objects except for S3 Standard storage class objects.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a>.</p>'
        ObjectSize:
          allOf:
            - $ref: '#/components/schemas/ObjectSize'
            - description: The size of the object in bytes.
    ObjectAttributes:
      type: string
      enum:
        - ETag
        - Checksum
        - ObjectParts
        - StorageClass
        - ObjectSize
    GetObjectLegalHoldOutput:
      type: object
      properties:
        LegalHold:
          allOf:
            - $ref: '#/components/schemas/ObjectLockLegalHold'
            - description: The current legal hold status for the specified object.
    GetObjectLockConfigurationOutput:
      type: object
      properties:
        ObjectLockConfiguration:
          allOf:
            - $ref: '#/components/schemas/ObjectLockConfiguration'
            - description: The specified bucket's Object Lock configuration.
    GetObjectRetentionOutput:
      type: object
      properties:
        Retention:
          allOf:
            - $ref: '#/components/schemas/ObjectLockRetention'
            - description: The container element for an object's retention settings.
    GetObjectTaggingOutput:
      type: object
      required:
        - TagSet
      example:
        TagSet:
          - Key: Key4
            Value: Value4
          - Key: Key3
            Value: Value3
        VersionId: 'null'
      properties:
        TagSet:
          allOf:
            - $ref: '#/components/schemas/TagSet'
            - description: Contains the tag set.
    GetObjectTorrentOutput:
      type: object
      example: {}
      properties:
        Body:
          allOf:
            - $ref: '#/components/schemas/Body'
            - description: A Bencoded dictionary as defined by the BitTorrent specification
    GetPublicAccessBlockOutput:
      type: object
      properties:
        PublicAccessBlockConfiguration:
          allOf:
            - $ref: '#/components/schemas/PublicAccessBlockConfiguration'
            - description: The <code>PublicAccessBlock</code> configuration currently in effect for this Amazon S3 bucket.
    NoSuchBucket: {}
    HeadObjectOutput:
      type: object
      example:
        AcceptRanges: bytes
        ContentLength: '3191'
        ContentType: image/jpeg
        ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
        LastModified: 'Thu, 15 Dec 2016 01:19:41 GMT'
        Metadata: {}
        VersionId: 'null'
      properties:
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - xml:
                name: x-amz-meta-
              description: A map of metadata to store with the object in S3.
    ListBucketAnalyticsConfigurationsOutput:
      type: object
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/IsTruncated'
            - description: Indicates whether the returned list of analytics configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken will be provided for a subsequent request.
        ContinuationToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: The marker that is used as a starting point for this analytics configuration list response. This value is present if it was sent in the request.
        NextContinuationToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: ' <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which indicates that there are more analytics configurations to list. The next request must include this <code>NextContinuationToken</code>. The token is obfuscated and is not a usable value.'
        AnalyticsConfigurationList:
          allOf:
            - $ref: '#/components/schemas/AnalyticsConfigurationList'
            - xml:
                name: AnalyticsConfiguration
              description: The list of analytics configurations for a bucket.
    ListBucketIntelligentTieringConfigurationsOutput:
      type: object
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/IsTruncated'
            - description: Indicates whether the returned list of analytics configurations is complete. A value of <code>true</code> indicates that the list is not complete and the <code>NextContinuationToken</code> will be provided for a subsequent request.
        ContinuationToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: The <code>ContinuationToken</code> that represents a placeholder from where this request should begin.
        NextContinuationToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The marker used to continue this inventory configuration listing. Use the <code>NextContinuationToken</code> from this response to continue the listing in a subsequent request. The continuation token is an opaque value that Amazon S3 understands.
        IntelligentTieringConfigurationList:
          allOf:
            - $ref: '#/components/schemas/IntelligentTieringConfigurationList'
            - xml:
                name: IntelligentTieringConfiguration
              description: The list of S3 Intelligent-Tiering configurations for a bucket.
    ListBucketInventoryConfigurationsOutput:
      type: object
      properties:
        ContinuationToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: 'If sent in the request, the marker that is used as a starting point for this inventory configuration list response.'
        InventoryConfigurationList:
          allOf:
            - $ref: '#/components/schemas/InventoryConfigurationList'
            - xml:
                name: InventoryConfiguration
              description: The list of inventory configurations for a bucket.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/IsTruncated'
            - description: Tells whether the returned list of inventory configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken is provided for a subsequent request.
        NextContinuationToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The marker used to continue this inventory configuration listing. Use the <code>NextContinuationToken</code> from this response to continue the listing in a subsequent request. The continuation token is an opaque value that Amazon S3 understands.
    ListBucketMetricsConfigurationsOutput:
      type: object
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/IsTruncated'
            - description: Indicates whether the returned list of metrics configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken will be provided for a subsequent request.
        ContinuationToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: The marker that is used as a starting point for this metrics configuration list response. This value is present if it was sent in the request.
        NextContinuationToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The marker used to continue a metrics configuration listing that has been truncated. Use the <code>NextContinuationToken</code> from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.
        MetricsConfigurationList:
          allOf:
            - $ref: '#/components/schemas/MetricsConfigurationList'
            - xml:
                name: MetricsConfiguration
              description: The list of metrics configurations for a bucket.
    ListBucketsOutput:
      type: object
      example:
        Buckets:
          - CreationDate: '2012-02-15T21:03:02.000Z'
            Name: examplebucket
          - CreationDate: '2011-07-24T19:33:50.000Z'
            Name: examplebucket2
          - CreationDate: '2010-12-17T00:56:49.000Z'
            Name: examplebucket3
        Owner:
          DisplayName: own-display-name
          ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31
      properties:
        Buckets:
          allOf:
            - $ref: '#/components/schemas/Buckets'
            - description: The list of buckets owned by the requester.
        Owner:
          allOf:
            - $ref: '#/components/schemas/Owner'
            - description: The owner of the buckets listed.
    ListMultipartUploadsOutput:
      type: object
      example:
        Bucket: acl1
        IsTruncated: true
        KeyMarker: ''
        MaxUploads: '2'
        NextKeyMarker: someobjectkey
        NextUploadIdMarker: examplelo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--
        UploadIdMarker: ''
        Uploads:
          - Initiated: '2014-05-01T05:40:58.000Z'
            Initiator:
              DisplayName: ownder-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Key: JavaFile
            Owner:
              DisplayName: mohanataws
              ID: 852b113e7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            StorageClass: STANDARD
            UploadId: gZ30jIqlUa.CInXklLQtSMJITdUnoZ1Y5GACB5UckOtspm5zbDMCkPF_qkfZzMiFZ6dksmcnqxJyIBvQMG9X9Q--
          - Initiated: '2014-05-01T05:41:27.000Z'
            Initiator:
              DisplayName: ownder-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Key: JavaFile
            Owner:
              DisplayName: ownder-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            StorageClass: STANDARD
            UploadId: b7tZSqIlo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--
      properties:
        Bucket:
          allOf:
            - $ref: '#/components/schemas/BucketName'
            - description: The name of the bucket to which the multipart upload was initiated. Does not return the access point ARN or access point alias if used.
        KeyMarker:
          allOf:
            - $ref: '#/components/schemas/KeyMarker'
            - description: The key at or after which the listing began.
        UploadIdMarker:
          allOf:
            - $ref: '#/components/schemas/UploadIdMarker'
            - description: Upload ID after which listing began.
        NextKeyMarker:
          allOf:
            - $ref: '#/components/schemas/NextKeyMarker'
            - description: 'When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request.'
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: 'When a prefix is provided in the request, this field contains the specified prefix. The result contains only keys starting with the specified prefix.'
        Delimiter:
          allOf:
            - $ref: '#/components/schemas/Delimiter'
            - description: 'Contains the delimiter you specified in the request. If you don''t specify a delimiter in your request, this element is absent from the response.'
        NextUploadIdMarker:
          allOf:
            - $ref: '#/components/schemas/NextUploadIdMarker'
            - description: 'When a list is truncated, this element specifies the value that should be used for the <code>upload-id-marker</code> request parameter in a subsequent request.'
        MaxUploads:
          allOf:
            - $ref: '#/components/schemas/MaxUploads'
            - description: Maximum number of multipart uploads that could have been included in the response.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/IsTruncated'
            - description: Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads.
        Uploads:
          allOf:
            - $ref: '#/components/schemas/MultipartUploadList'
            - xml:
                name: Upload
              description: Container for elements related to a particular multipart upload. A response can contain zero or more <code>Upload</code> elements.
        CommonPrefixes:
          allOf:
            - $ref: '#/components/schemas/CommonPrefixList'
            - description: 'If you specify a delimiter in the request, then the result returns each distinct key prefix containing the delimiter in a <code>CommonPrefixes</code> element. The distinct key prefixes are returned in the <code>Prefix</code> child element.'
        EncodingType:
          allOf:
            - $ref: '#/components/schemas/EncodingType'
            - description: '<p>Encoding type used by Amazon S3 to encode object keys in the response.</p> <p>If you specify the <code>encoding-type</code> request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:</p> <p> <code>Delimiter</code>, <code>KeyMarker</code>, <code>Prefix</code>, <code>NextKeyMarker</code>, <code>Key</code>.</p>'
    ListObjectVersionsOutput:
      type: object
      example:
        Versions:
          - ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
            IsLatest: true
            Key: HappyFace.jpg
            LastModified: '2016-12-15T01:19:41.000Z'
            Owner:
              DisplayName: owner-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Size: 3191
            StorageClass: STANDARD
            VersionId: 'null'
          - ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
            IsLatest: false
            Key: HappyFace.jpg
            LastModified: '2016-12-13T00:58:26.000Z'
            Owner:
              DisplayName: owner-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Size: 3191
            StorageClass: STANDARD
            VersionId: PHtexPGjH2y.zBgT8LmB7wwLI2mpbz.k
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/IsTruncated'
            - description: 'A flag that indicates whether Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request by using the <code>NextKeyMarker</code> and <code>NextVersionIdMarker</code> response parameters as a starting place in another request to return the rest of the results.'
        KeyMarker:
          allOf:
            - $ref: '#/components/schemas/KeyMarker'
            - description: Marks the last key returned in a truncated response.
        VersionIdMarker:
          allOf:
            - $ref: '#/components/schemas/VersionIdMarker'
            - description: Marks the last version of the key returned in a truncated response.
        NextKeyMarker:
          allOf:
            - $ref: '#/components/schemas/NextKeyMarker'
            - description: 'When the number of responses exceeds the value of <code>MaxKeys</code>, <code>NextKeyMarker</code> specifies the first key not returned that satisfies the search criteria. Use this value for the key-marker request parameter in a subsequent request.'
        NextVersionIdMarker:
          allOf:
            - $ref: '#/components/schemas/NextVersionIdMarker'
            - description: 'When the number of responses exceeds the value of <code>MaxKeys</code>, <code>NextVersionIdMarker</code> specifies the first object version not returned that satisfies the search criteria. Use this value for the <code>version-id-marker</code> request parameter in a subsequent request.'
        Versions:
          allOf:
            - $ref: '#/components/schemas/ObjectVersionList'
            - xml:
                name: Version
              description: Container for version information.
        DeleteMarkers:
          allOf:
            - $ref: '#/components/schemas/DeleteMarkers'
            - xml:
                name: DeleteMarker
              description: Container for an object that is a delete marker.
        Name:
          allOf:
            - $ref: '#/components/schemas/BucketName'
            - description: The bucket name.
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: Selects objects that start with the value supplied by this parameter.
        Delimiter:
          allOf:
            - $ref: '#/components/schemas/Delimiter'
            - description: The delimiter grouping the included keys. A delimiter is a character that you specify to group keys. All keys that contain the same string between the prefix and the first occurrence of the delimiter are grouped under a single result element in <code>CommonPrefixes</code>. These groups are counted as one result against the <code>max-keys</code> limitation. These keys are not returned elsewhere in the response.
        MaxKeys:
          allOf:
            - $ref: '#/components/schemas/MaxKeys'
            - description: Specifies the maximum number of objects to return.
        CommonPrefixes:
          allOf:
            - $ref: '#/components/schemas/CommonPrefixList'
            - description: All of the keys rolled up into a common prefix count as a single return when calculating the number of returns.
        EncodingType:
          allOf:
            - $ref: '#/components/schemas/EncodingType'
            - description: '<p> Encoding type used by Amazon S3 to encode object key names in the XML response.</p> <p>If you specify the <code>encoding-type</code> request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:</p> <p> <code>KeyMarker, NextKeyMarker, Prefix, Key</code>, and <code>Delimiter</code>.</p>'
    OptionalObjectAttributes:
      type: string
      enum:
        - RestoreStatus
    ListObjectsOutput:
      type: object
      example:
        Contents:
          - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
            Key: example1.jpg
            LastModified: '2014-11-21T19:40:05.000Z'
            Owner:
              DisplayName: myname
              ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Size: 11
            StorageClass: STANDARD
          - ETag: '"9c8af9a76df052144598c115ef33e511"'
            Key: example2.jpg
            LastModified: '2013-11-15T01:10:49.000Z'
            Owner:
              DisplayName: myname
              ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Size: 713193
            StorageClass: STANDARD
        NextMarker: eyJNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyfQ==
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/IsTruncated'
            - description: A flag that indicates whether Amazon S3 returned all of the results that satisfied the search criteria.
        Marker:
          allOf:
            - $ref: '#/components/schemas/Marker'
            - description: Indicates where in the bucket listing begins. Marker is included in the response if it was sent with the request.
        NextMarker:
          allOf:
            - $ref: '#/components/schemas/NextMarker'
            - description: '<p>When the response is truncated (the <code>IsTruncated</code> element value in the response is <code>true</code>), you can use the key name in this field as the <code>marker</code> parameter in the subsequent request to get the next set of objects. Amazon S3 lists objects in alphabetical order. </p> <note> <p>This element is returned only if you have the <code>delimiter</code> request parameter specified. If the response does not include the <code>NextMarker</code> element and it is truncated, you can use the value of the last <code>Key</code> element in the response as the <code>marker</code> parameter in the subsequent request to get the next set of object keys.</p> </note>'
        Contents:
          allOf:
            - $ref: '#/components/schemas/ObjectList'
            - description: Metadata about each object returned.
        Name:
          allOf:
            - $ref: '#/components/schemas/BucketName'
            - description: The bucket name.
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: Keys that begin with the indicated prefix.
        Delimiter:
          allOf:
            - $ref: '#/components/schemas/Delimiter'
            - description: Causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the <code>CommonPrefixes</code> collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up result counts as only one return against the <code>MaxKeys</code> value.
        MaxKeys:
          allOf:
            - $ref: '#/components/schemas/MaxKeys'
            - description: The maximum number of keys returned in the response body.
        CommonPrefixes:
          allOf:
            - $ref: '#/components/schemas/CommonPrefixList'
            - description: '<p>All of the keys (up to 1,000) rolled up in a common prefix count as a single return when calculating the number of returns. </p> <p>A response can contain <code>CommonPrefixes</code> only if you specify a delimiter.</p> <p> <code>CommonPrefixes</code> contains all (if there are any) keys between <code>Prefix</code> and the next occurrence of the string specified by the delimiter.</p> <p> <code>CommonPrefixes</code> lists keys that act like subdirectories in the directory specified by <code>Prefix</code>.</p> <p>For example, if the prefix is <code>notes/</code> and the delimiter is a slash (<code>/</code>), as in <code>notes/summer/july</code>, the common prefix is <code>notes/summer/</code>. All of the keys that roll up into a common prefix count as a single return when calculating the number of returns.</p>'
        EncodingType:
          allOf:
            - $ref: '#/components/schemas/EncodingType'
            - description: Encoding type used by Amazon S3 to encode object keys in the response.
    ListObjectsV2Output:
      type: object
      example:
        Contents:
          - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
            Key: happyface.jpg
            LastModified: '2014-11-21T19:40:05.000Z'
            Size: 11
            StorageClass: STANDARD
          - ETag: '"becf17f89c30367a9a44495d62ed521a-1"'
            Key: test.jpg
            LastModified: '2014-05-02T04:51:50.000Z'
            Size: 4192256
            StorageClass: STANDARD
        IsTruncated: true
        KeyCount: '2'
        MaxKeys: '2'
        Name: DOC-EXAMPLE-BUCKET
        NextContinuationToken: 1w41l63U0xa8q7smH50vCxyTQqdxo69O3EmK28Bi5PcROI4wI/EyIJg==
        Prefix: ''
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/IsTruncated'
            - description: 'Set to <code>false</code> if all of the results were returned. Set to <code>true</code> if more keys are available to return. If the number of results exceeds that specified by <code>MaxKeys</code>, all of the results might not be returned.'
        Contents:
          allOf:
            - $ref: '#/components/schemas/ObjectList'
            - description: Metadata about each object returned.
        Name:
          allOf:
            - $ref: '#/components/schemas/BucketName'
            - description: '<p>The bucket name.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>'
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: ' Keys that begin with the indicated prefix.'
        Delimiter:
          allOf:
            - $ref: '#/components/schemas/Delimiter'
            - description: Causes keys that contain the same string between the <code>prefix</code> and the first occurrence of the delimiter to be rolled up into a single result element in the <code>CommonPrefixes</code> collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up result counts as only one return against the <code>MaxKeys</code> value.
        MaxKeys:
          allOf:
            - $ref: '#/components/schemas/MaxKeys'
            - description: 'Sets the maximum number of keys returned in the response. By default, the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.'
        CommonPrefixes:
          allOf:
            - $ref: '#/components/schemas/CommonPrefixList'
            - description: '<p>All of the keys (up to 1,000) rolled up into a common prefix count as a single return when calculating the number of returns.</p> <p>A response can contain <code>CommonPrefixes</code> only if you specify a delimiter.</p> <p> <code>CommonPrefixes</code> contains all (if there are any) keys between <code>Prefix</code> and the next occurrence of the string specified by a delimiter.</p> <p> <code>CommonPrefixes</code> lists keys that act like subdirectories in the directory specified by <code>Prefix</code>.</p> <p>For example, if the prefix is <code>notes/</code> and the delimiter is a slash (<code>/</code>) as in <code>notes/summer/july</code>, the common prefix is <code>notes/summer/</code>. All of the keys that roll up into a common prefix count as a single return when calculating the number of returns. </p>'
        EncodingType:
          allOf:
            - $ref: '#/components/schemas/EncodingType'
            - description: '<p>Encoding type used by Amazon S3 to encode object key names in the XML response.</p> <p>If you specify the <code>encoding-type</code> request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:</p> <p> <code>Delimiter, Prefix, Key,</code> and <code>StartAfter</code>.</p>'
        KeyCount:
          allOf:
            - $ref: '#/components/schemas/KeyCount'
            - description: ' <code>KeyCount</code> is the number of keys returned with this request. <code>KeyCount</code> will always be less than or equal to the <code>MaxKeys</code> field. For example, if you ask for 50 keys, your result will include 50 keys or fewer.'
        ContinuationToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: ' If <code>ContinuationToken</code> was sent with the request, it is included in the response.'
        NextContinuationToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: ' <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which means there are more keys in the bucket that can be listed. The next list requests to Amazon S3 can be continued with this <code>NextContinuationToken</code>. <code>NextContinuationToken</code> is obfuscated and is not a real key'
        StartAfter:
          allOf:
            - $ref: '#/components/schemas/StartAfter'
            - description: 'If StartAfter was sent with the request, it is included in the response.'
    ListPartsOutput:
      type: object
      example:
        Initiator:
          DisplayName: owner-display-name
          ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
        Owner:
          DisplayName: owner-display-name
          ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
        Parts:
          - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
            LastModified: '2016-12-16T00:11:42.000Z'
            PartNumber: '1'
            Size: 26246026
          - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
            LastModified: '2016-12-16T00:15:01.000Z'
            PartNumber: '2'
            Size: 26246026
        StorageClass: STANDARD
      properties:
        Bucket:
          allOf:
            - $ref: '#/components/schemas/BucketName'
            - description: The name of the bucket to which the multipart upload was initiated. Does not return the access point ARN or access point alias if used.
        Key:
          allOf:
            - $ref: '#/components/schemas/ObjectKey'
            - description: Object key for which the multipart upload was initiated.
        UploadId:
          allOf:
            - $ref: '#/components/schemas/MultipartUploadId'
            - description: Upload ID identifying the multipart upload whose parts are being listed.
        PartNumberMarker:
          allOf:
            - $ref: '#/components/schemas/PartNumberMarker'
            - description: 'When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request.'
        NextPartNumberMarker:
          allOf:
            - $ref: '#/components/schemas/NextPartNumberMarker'
            - description: 'When a list is truncated, this element specifies the last part in the list, as well as the value to use for the <code>part-number-marker</code> request parameter in a subsequent request.'
        MaxParts:
          allOf:
            - $ref: '#/components/schemas/MaxParts'
            - description: Maximum number of parts that were allowed in the response.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/IsTruncated'
            - description: ' Indicates whether the returned list of parts is truncated. A true value indicates that the list was truncated. A list can be truncated if the number of parts exceeds the limit returned in the MaxParts element.'
        Parts:
          allOf:
            - $ref: '#/components/schemas/Parts'
            - xml:
                name: Part
              description: ' Container for elements related to a particular part. A response can contain zero or more <code>Part</code> elements.'
        Initiator:
          allOf:
            - $ref: '#/components/schemas/Initiator'
            - description: 'Container element that identifies who initiated the multipart upload. If the initiator is an Amazon Web Services account, this element provides the same information as the <code>Owner</code> element. If the initiator is an IAM User, this element provides the user ARN and display name.'
        Owner:
          allOf:
            - $ref: '#/components/schemas/Owner'
            - description: ' Container element that identifies the object owner, after the object is created. If multipart upload is initiated by an IAM user, this element provides the parent account ID and display name.'
        StorageClass:
          allOf:
            - $ref: '#/components/schemas/StorageClass'
            - description: Class of storage (STANDARD or REDUCED_REDUNDANCY) used to store the uploaded object.
        ChecksumAlgorithm:
          allOf:
            - $ref: '#/components/schemas/ChecksumAlgorithm'
            - description: The algorithm that was used to create a checksum of the object.
    BucketAccelerateStatus:
      type: string
      enum:
        - Enabled
        - Suspended
    Grants:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Grant'
          - xml:
              name: Grant
    Owner:
      type: object
      properties:
        DisplayName:
          allOf:
            - $ref: '#/components/schemas/DisplayName'
            - description: '<p>Container for the display name of the owner. This value is only supported in the following Amazon Web Services Regions:</p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p>US West (Oregon)</p> </li> <li> <p>Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul>'
        ID:
          allOf:
            - $ref: '#/components/schemas/ID'
            - description: Container for the ID of the owner.
      description: Container for the owner's display name and ID.
    AnalyticsId:
      type: string
    AnalyticsFilter:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: The prefix to use when evaluating an analytics filter.
        Tag:
          allOf:
            - $ref: '#/components/schemas/Tag'
            - description: The tag to use when evaluating an analytics filter.
        And:
          allOf:
            - $ref: '#/components/schemas/AnalyticsAndOperator'
            - description: 'A conjunction (logical AND) of predicates, which is used in evaluating an analytics filter. The operator must have at least two predicates.'
      description: 'The filter used to describe a set of objects for analyses. A filter must have exactly one prefix, one tag, or one conjunction (AnalyticsAndOperator). If no filter is provided, all objects will be considered in any analysis.'
    StorageClassAnalysis:
      type: object
      properties:
        DataExport:
          allOf:
            - $ref: '#/components/schemas/StorageClassAnalysisDataExport'
            - description: Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
      description: Specifies data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes for an Amazon S3 bucket.
    CORSRules:
      type: array
      items:
        $ref: '#/components/schemas/CORSRule'
      xml:
        wrapped: false
    ServerSideEncryptionRules:
      type: array
      items:
        $ref: '#/components/schemas/ServerSideEncryptionRule'
      xml:
        wrapped: false
    IntelligentTieringId:
      type: string
    IntelligentTieringFilter:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: '<p>An object key name prefix that identifies the subset of objects to which the rule applies.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
        Tag:
          $ref: '#/components/schemas/Tag'
        And:
          allOf:
            - $ref: '#/components/schemas/IntelligentTieringAndOperator'
            - description: 'A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter. The operator must have at least two predicates, and an object must match all of the predicates in order for the filter to apply.'
      description: The <code>Filter</code> is used to identify objects that the S3 Intelligent-Tiering configuration applies to.
    IntelligentTieringStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    TieringList:
      type: array
      items:
        $ref: '#/components/schemas/Tiering'
      xml:
        wrapped: false
    InventoryDestination:
      type: object
      required:
        - S3BucketDestination
      properties:
        S3BucketDestination:
          allOf:
            - $ref: '#/components/schemas/InventoryS3BucketDestination'
            - description: 'Contains the bucket name, file format, bucket owner (optional), and prefix (optional) where inventory results are published.'
      description: Specifies the inventory configuration for an Amazon S3 bucket.
    IsEnabled:
      type: boolean
    InventoryFilter:
      type: object
      required:
        - Prefix
      properties:
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: The prefix that an object must have to be included in the inventory results.
      description: Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria.
    InventoryId:
      type: string
    InventoryIncludedObjectVersions:
      type: string
      enum:
        - All
        - Current
    InventoryOptionalFields:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InventoryOptionalField'
          - xml:
              name: Field
    InventorySchedule:
      type: object
      required:
        - Frequency
      properties:
        Frequency:
          allOf:
            - $ref: '#/components/schemas/InventoryFrequency'
            - description: Specifies how frequently inventory results are produced.
      description: Specifies the schedule for generating inventory results.
    Rules:
      type: array
      items:
        $ref: '#/components/schemas/Rule'
      xml:
        wrapped: false
    LifecycleRules:
      type: array
      items:
        $ref: '#/components/schemas/LifecycleRule'
      xml:
        wrapped: false
    LoggingEnabled:
      type: object
      required:
        - TargetBucket
        - TargetPrefix
      properties:
        TargetBucket:
          allOf:
            - $ref: '#/components/schemas/TargetBucket'
            - description: 'Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own, including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In this case, you should choose a different <code>TargetPrefix</code> for each source bucket so that the delivered log files can be distinguished by key.'
        TargetGrants:
          allOf:
            - $ref: '#/components/schemas/TargetGrants'
            - description: '<p>Container for granting information.</p> <p>Buckets that use the bucket owner enforced setting for Object Ownership don''t support target grants. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-server-access-logging.html#grant-log-delivery-permissions-general">Permissions for server access log delivery</a> in the <i>Amazon S3 User Guide</i>.</p>'
        TargetPrefix:
          allOf:
            - $ref: '#/components/schemas/TargetPrefix'
            - description: 'A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets in a single bucket, you can use a prefix to distinguish which log files came from which bucket.'
      description: 'Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html">PUT Bucket logging</a> in the <i>Amazon S3 API Reference</i>.'
    MetricsId:
      type: string
    MetricsFilter:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: The prefix used when evaluating a metrics filter.
        Tag:
          allOf:
            - $ref: '#/components/schemas/Tag'
            - description: The tag used when evaluating a metrics filter.
        AccessPointArn:
          allOf:
            - $ref: '#/components/schemas/AccessPointArn'
            - description: The access point ARN used when evaluating a metrics filter.
        And:
          allOf:
            - $ref: '#/components/schemas/MetricsAndOperator'
            - description: 'A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter. The operator must have at least two predicates, and an object must match all of the predicates in order for the filter to apply.'
      description: 'Specifies a metrics configuration filter. The metrics configuration only includes objects that meet the filter''s criteria. A filter must be a prefix, an object tag, an access point ARN, or a conjunction (MetricsAndOperator). For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html">PutBucketMetricsConfiguration</a>.'
    TopicConfigurationDeprecated:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/NotificationId'
        Events:
          allOf:
            - $ref: '#/components/schemas/EventList'
            - xml:
                name: Event
              description: A collection of events related to objects
        Event:
          allOf:
            - $ref: '#/components/schemas/Event'
            - deprecated: true
              description: Bucket event for which to send notifications.
        Topic:
          allOf:
            - $ref: '#/components/schemas/TopicArn'
            - description: Amazon SNS topic to which Amazon S3 will publish a message to report the specified events for the bucket.
      description: 'A container for specifying the configuration for publication of messages to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events. This data type is deprecated. Use <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_TopicConfiguration.html">TopicConfiguration</a> instead.'
    QueueConfigurationDeprecated:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/NotificationId'
        Event:
          allOf:
            - $ref: '#/components/schemas/Event'
            - deprecated: true
        Events:
          allOf:
            - $ref: '#/components/schemas/EventList'
            - xml:
                name: Event
              description: A collection of bucket events for which to send notifications.
        Queue:
          allOf:
            - $ref: '#/components/schemas/QueueArn'
            - description: 'The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type. '
      description: 'This data type is deprecated. Use <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_QueueConfiguration.html">QueueConfiguration</a> for the same purposes. This data type specifies the configuration for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon S3 detects specified events. '
    CloudFunctionConfiguration:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/NotificationId'
        Event:
          allOf:
            - $ref: '#/components/schemas/Event'
            - deprecated: true
        Events:
          allOf:
            - $ref: '#/components/schemas/EventList'
            - xml:
                name: Event
              description: Bucket events for which to send notifications.
        CloudFunction:
          allOf:
            - $ref: '#/components/schemas/CloudFunction'
            - description: Lambda cloud function ARN that Amazon S3 can invoke when it detects events of the specified type.
        InvocationRole:
          allOf:
            - $ref: '#/components/schemas/CloudFunctionInvocationRole'
            - description: The role supporting the invocation of the Lambda function
      description: Container for specifying the Lambda notification configuration.
    TopicConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/TopicConfiguration'
      xml:
        wrapped: false
    QueueConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/QueueConfiguration'
      xml:
        wrapped: false
    LambdaFunctionConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/LambdaFunctionConfiguration'
      xml:
        wrapped: false
    EventBridgeConfiguration:
      type: object
      properties: {}
      description: A container for specifying the configuration for Amazon EventBridge.
    OwnershipControlsRules:
      type: array
      items:
        $ref: '#/components/schemas/OwnershipControlsRule'
      xml:
        wrapped: false
    Role:
      type: string
    ReplicationRules:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationRule'
      xml:
        wrapped: false
    Payer:
      type: string
      enum:
        - Requester
        - BucketOwner
    TagSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Tag'
          - xml:
              name: Tag
    MFADelete:
      type: string
      enum:
        - Enabled
        - Disabled
    BucketVersioningStatus:
      type: string
      enum:
        - Enabled
        - Suspended
    ErrorDocument:
      type: object
      required:
        - Key
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/ObjectKey'
            - description: '<p>The object key name to use when a 4XX class error occurs.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
      description: The error information.
    IndexDocument:
      type: object
      required:
        - Suffix
      properties:
        Suffix:
          allOf:
            - $ref: '#/components/schemas/Suffix'
            - description: '<p>A suffix that is appended to a request that is for a directory on the website endpoint (for example,if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
      description: Container for the <code>Suffix</code> element.
    RedirectAllRequestsTo:
      type: object
      required:
        - HostName
      properties:
        HostName:
          allOf:
            - $ref: '#/components/schemas/HostName'
            - description: Name of the host where requests are redirected.
        Protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - description: Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
      description: Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
    RoutingRules:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RoutingRule'
          - xml:
              name: RoutingRule
    PutObjectOutput:
      type: object
      example:
        ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
        VersionId: Kirh.unyZwjQ69YxcQLA8z4F5j3kJJKr
      properties: {}
    PutObjectAclOutput:
      type: object
      example: {}
      properties: {}
    PutObjectLegalHoldOutput:
      type: object
      properties: {}
    ObjectLockLegalHoldStatus:
      type: string
      enum:
        - 'ON'
        - 'OFF'
    PutObjectLockConfigurationOutput:
      type: object
      properties: {}
    ObjectLockEnabled:
      type: string
      enum:
        - Enabled
    ObjectLockRule:
      type: object
      properties:
        DefaultRetention:
          allOf:
            - $ref: '#/components/schemas/DefaultRetention'
            - description: The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. Bucket settings require both a mode and a period. The period can be either <code>Days</code> or <code>Years</code> but you must select one. You cannot specify <code>Days</code> and <code>Years</code> at the same time.
      description: The container element for an Object Lock rule.
    PutObjectRetentionOutput:
      type: object
      properties: {}
    ObjectLockRetentionMode:
      type: string
      enum:
        - GOVERNANCE
        - COMPLIANCE
    Date:
      type: string
      format: date-time
    PutObjectTaggingOutput:
      type: object
      example:
        VersionId: 'null'
      properties: {}
    Setting:
      type: boolean
    RestoreObjectOutput:
      type: object
      example: {}
      properties: {}
    Days:
      type: integer
    GlacierJobParameters:
      type: object
      required:
        - Tier
      properties:
        Tier:
          allOf:
            - $ref: '#/components/schemas/Tier'
            - description: Retrieval tier at which the restore will be processed.
      description: Container for S3 Glacier job parameters.
    RestoreRequestType:
      type: string
      enum:
        - SELECT
    Tier:
      type: string
      enum:
        - Standard
        - Bulk
        - Expedited
    Description:
      type: string
    SelectParameters:
      type: object
      required:
        - InputSerialization
        - ExpressionType
        - Expression
        - OutputSerialization
      properties:
        InputSerialization:
          allOf:
            - $ref: '#/components/schemas/InputSerialization'
            - description: Describes the serialization format of the object.
        ExpressionType:
          allOf:
            - $ref: '#/components/schemas/ExpressionType'
            - description: 'The type of the provided expression (for example, SQL).'
        Expression:
          allOf:
            - $ref: '#/components/schemas/Expression'
            - description: The expression that is used to query the object.
        OutputSerialization:
          allOf:
            - $ref: '#/components/schemas/OutputSerialization'
            - description: Describes how the results of the Select job are serialized.
      description: Describes the parameters for Select job types.
    OutputLocation:
      type: object
      properties:
        S3:
          allOf:
            - $ref: '#/components/schemas/S3Location'
            - description: Describes an S3 location that will receive the results of the restore request.
      description: Describes the location where the restore job's output is stored.
    ObjectAlreadyInActiveTierError: {}
    SelectObjectContentOutput:
      type: object
      properties:
        Payload:
          allOf:
            - $ref: '#/components/schemas/SelectObjectContentEventStream'
            - description: The array of results.
    EnableRequestProgress:
      type: boolean
    CSVInput:
      type: object
      properties:
        FileHeaderInfo:
          allOf:
            - $ref: '#/components/schemas/FileHeaderInfo'
            - description: '<p>Describes the first line of input. Valid values are:</p> <ul> <li> <p> <code>NONE</code>: First line is not a header.</p> </li> <li> <p> <code>IGNORE</code>: First line is a header, but you can''t use the header values to indicate the column in an expression. You can use column position (such as _1, _2, …) to indicate the column (<code>SELECT s._1 FROM OBJECT s</code>).</p> </li> <li> <p> <code>Use</code>: First line is a header, and you can use the header value to identify a column in an expression (<code>SELECT "name" FROM OBJECT</code>). </p> </li> </ul>'
        Comments:
          allOf:
            - $ref: '#/components/schemas/Comments'
            - description: '<p>A single character used to indicate that a row should be ignored when the character is present at the start of that row. You can specify any character to indicate a comment line. The default character is <code>#</code>.</p> <p>Default: <code>#</code> </p>'
        QuoteEscapeCharacter:
          allOf:
            - $ref: '#/components/schemas/QuoteEscapeCharacter'
            - description: 'A single character used for escaping the quotation mark character inside an already escaped value. For example, the value <code>""" a , b """</code> is parsed as <code>" a , b "</code>.'
        RecordDelimiter:
          allOf:
            - $ref: '#/components/schemas/RecordDelimiter'
            - description: 'A single character used to separate individual records in the input. Instead of the default value, you can specify an arbitrary delimiter.'
        FieldDelimiter:
          allOf:
            - $ref: '#/components/schemas/FieldDelimiter'
            - description: A single character used to separate individual fields in a record. You can specify an arbitrary delimiter.
        QuoteCharacter:
          allOf:
            - $ref: '#/components/schemas/QuoteCharacter'
            - description: '<p>A single character used for escaping when the field delimiter is part of the value. For example, if the value is <code>a, b</code>, Amazon S3 wraps this field value in quotation marks, as follows: <code>" a , b "</code>.</p> <p>Type: String</p> <p>Default: <code>"</code> </p> <p>Ancestors: <code>CSV</code> </p>'
        AllowQuotedRecordDelimiter:
          allOf:
            - $ref: '#/components/schemas/AllowQuotedRecordDelimiter'
            - description: Specifies that CSV field values may contain quoted record delimiters and such records should be allowed. Default value is FALSE. Setting this value to TRUE may lower performance.
      description: Describes how an uncompressed comma-separated values (CSV)-formatted input object is formatted.
    CompressionType:
      type: string
      enum:
        - NONE
        - GZIP
        - BZIP2
    JSONInput:
      type: object
      properties:
        Type:
          allOf:
            - $ref: '#/components/schemas/JSONType'
            - description: 'The type of JSON. Valid values: Document, Lines.'
      description: Specifies JSON as object's input serialization format.
    ParquetInput:
      type: object
      properties: {}
      description: Container for Parquet.
    CSVOutput:
      type: object
      properties:
        QuoteFields:
          allOf:
            - $ref: '#/components/schemas/QuoteFields'
            - description: '<p>Indicates whether to use quotation marks around output fields. </p> <ul> <li> <p> <code>ALWAYS</code>: Always use quotation marks for output fields.</p> </li> <li> <p> <code>ASNEEDED</code>: Use quotation marks for output fields when needed.</p> </li> </ul>'
        QuoteEscapeCharacter:
          allOf:
            - $ref: '#/components/schemas/QuoteEscapeCharacter'
            - description: The single character used for escaping the quote character inside an already escaped value.
        RecordDelimiter:
          allOf:
            - $ref: '#/components/schemas/RecordDelimiter'
            - description: 'A single character used to separate individual records in the output. Instead of the default value, you can specify an arbitrary delimiter.'
        FieldDelimiter:
          allOf:
            - $ref: '#/components/schemas/FieldDelimiter'
            - description: The value used to separate individual fields in a record. You can specify an arbitrary delimiter.
        QuoteCharacter:
          allOf:
            - $ref: '#/components/schemas/QuoteCharacter'
            - description: 'A single character used for escaping when the field delimiter is part of the value. For example, if the value is <code>a, b</code>, Amazon S3 wraps this field value in quotation marks, as follows: <code>" a , b "</code>.'
      description: Describes how uncompressed comma-separated values (CSV)-formatted results are formatted.
    JSONOutput:
      type: object
      properties:
        RecordDelimiter:
          allOf:
            - $ref: '#/components/schemas/RecordDelimiter'
            - description: 'The value used to separate individual records in the output. If no value is specified, Amazon S3 uses a newline character (''\n'').'
      description: Specifies JSON as request's output serialization format.
    Start:
      type: integer
    End:
      type: integer
    UploadPartOutput:
      type: object
      example:
        ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
      properties: {}
    UploadPartCopyOutput:
      type: object
      example:
        CopyPartResult:
          ETag: '"b0c6f0e7e054ab8fa2536a2677f8734d"'
          LastModified: '2016-12-29T21:24:43.000Z'
      properties:
        CopyPartResult:
          allOf:
            - $ref: '#/components/schemas/CopyPartResult'
            - description: Container for all response elements.
    AbortDate:
      type: string
      format: date-time
    DaysAfterInitiation:
      type: integer
    AbortIncompleteMultipartUpload:
      type: object
      properties:
        DaysAfterInitiation:
          allOf:
            - $ref: '#/components/schemas/DaysAfterInitiation'
            - description: Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.
      description: 'Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config"> Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Configuration</a> in the <i>Amazon S3 User Guide</i>.'
    RequestCharged:
      type: string
      enum:
        - requester
      description: 'If present, indicates that the requester was successfully charged for the request.'
    BucketName:
      type: string
    ObjectKey:
      type: string
      minLength: 1
    MultipartUploadId:
      type: string
    RequestPayer:
      type: string
      enum:
        - requester
      description: 'Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.'
    AccountId:
      type: string
    AbortMultipartUploadRequest:
      type: object
      title: AbortMultipartUploadRequest
      properties: {}
    AbortRuleId:
      type: string
    AccelerateConfiguration:
      type: object
      properties:
        Status:
          allOf:
            - $ref: '#/components/schemas/BucketAccelerateStatus'
            - description: Specifies the transfer acceleration status of the bucket.
      description: 'Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Amazon S3 Transfer Acceleration</a> in the <i>Amazon S3 User Guide</i>.'
    AcceptRanges:
      type: string
    AccessControlPolicy:
      type: object
      properties:
        Grants:
          allOf:
            - $ref: '#/components/schemas/Grants'
            - xml:
                name: AccessControlList
              description: A list of grants.
        Owner:
          allOf:
            - $ref: '#/components/schemas/Owner'
            - description: Container for the bucket owner's display name and ID.
      description: Contains the elements that set the ACL permissions for an object per grantee.
    OwnerOverride:
      type: string
      enum:
        - Destination
    AccessControlTranslation:
      type: object
      required:
        - Owner
      properties:
        Owner:
          allOf:
            - $ref: '#/components/schemas/OwnerOverride'
            - description: 'Specifies the replica ownership. For default and valid values, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html">PUT bucket replication</a> in the <i>Amazon S3 API Reference</i>.'
      description: A container for information about access control for replicas.
    AccessPointArn:
      type: string
    AllowQuotedRecordDelimiter:
      type: boolean
    AllowedHeader:
      type: string
    AllowedHeaders:
      type: array
      items:
        $ref: '#/components/schemas/AllowedHeader'
      xml:
        wrapped: false
    AllowedMethod:
      type: string
    AllowedMethods:
      type: array
      items:
        $ref: '#/components/schemas/AllowedMethod'
      xml:
        wrapped: false
    AllowedOrigin:
      type: string
    AllowedOrigins:
      type: array
      items:
        $ref: '#/components/schemas/AllowedOrigin'
      xml:
        wrapped: false
    Prefix:
      type: string
    AnalyticsAndOperator:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: 'The prefix to use when evaluating an AND predicate: The prefix that an object must have to be included in the metrics results.'
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagSet'
            - xml:
                name: Tag
              description: The list of tags to use when evaluating an AND predicate.
      description: 'A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter. The operator must have at least two predicates in any combination, and an object must match all of the predicates for the filter to apply.'
      xml:
        wrapped: false
    AnalyticsConfiguration:
      type: object
      required:
        - Id
        - StorageClassAnalysis
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/AnalyticsId'
            - description: The ID that identifies the analytics configuration.
        Filter:
          allOf:
            - $ref: '#/components/schemas/AnalyticsFilter'
            - description: 'The filter used to describe a set of objects for analyses. A filter must have exactly one prefix, one tag, or one conjunction (AnalyticsAndOperator). If no filter is provided, all objects will be considered in any analysis.'
        StorageClassAnalysis:
          allOf:
            - $ref: '#/components/schemas/StorageClassAnalysis'
            - description: ' Contains data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes. '
      description: Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
    AnalyticsConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/AnalyticsConfiguration'
      xml:
        wrapped: false
    AnalyticsS3BucketDestination:
      type: object
      required:
        - Format
        - Bucket
      properties:
        Format:
          allOf:
            - $ref: '#/components/schemas/AnalyticsS3ExportFileFormat'
            - description: Specifies the file format used when exporting data to Amazon S3.
        BucketAccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: '<p>The account ID that owns the destination S3 bucket. If no account ID is provided, the owner is not validated before exporting data.</p> <note> <p> Although this value is optional, we strongly recommend that you set it to help prevent problems if the destination bucket ownership changes. </p> </note>'
        Bucket:
          allOf:
            - $ref: '#/components/schemas/BucketName'
            - description: The Amazon Resource Name (ARN) of the bucket to which data is exported.
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: The prefix to use when exporting data. The prefix is prepended to all results.
      description: Contains information about where to publish the analytics results.
    AnalyticsExportDestination:
      type: object
      required:
        - S3BucketDestination
      properties:
        S3BucketDestination:
          allOf:
            - $ref: '#/components/schemas/AnalyticsS3BucketDestination'
            - description: A destination signifying output to an S3 bucket.
      description: Where to publish the analytics results.
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/ObjectKey'
            - description: Name of the object key.
        Value:
          allOf:
            - $ref: '#/components/schemas/Value'
            - description: Value of the tag.
      description: A container of a key value name pair.
    AnalyticsS3ExportFileFormat:
      type: string
      enum:
        - CSV
    ArchiveStatus:
      type: string
      enum:
        - ARCHIVE_ACCESS
        - DEEP_ARCHIVE_ACCESS
    Body:
      type: string
    CreationDate:
      type: string
      format: date-time
    Bucket:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/BucketName'
            - description: The name of the bucket.
        CreationDate:
          allOf:
            - $ref: '#/components/schemas/CreationDate'
            - description: 'Date the bucket was created. This date can change when making changes to your bucket, such as editing its bucket policy.'
      description: ' In terms of implementation, a Bucket is a resource. An Amazon S3 bucket name is globally unique, and the namespace is shared by all Amazon Web Services accounts. '
    BucketCannedACL:
      type: string
      enum:
        - private
        - public-read
        - public-read-write
        - authenticated-read
    BucketKeyEnabled:
      type: boolean
    BucketLifecycleConfiguration:
      type: object
      required:
        - Rules
      properties:
        Rules:
          allOf:
            - $ref: '#/components/schemas/LifecycleRules'
            - xml:
                name: Rule
              description: A lifecycle rule for individual objects in an Amazon S3 bucket.
      description: 'Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object Lifecycle Management</a> in the <i>Amazon S3 User Guide</i>.'
    BucketLoggingStatus:
      type: object
      properties:
        LoggingEnabled:
          $ref: '#/components/schemas/LoggingEnabled'
      description: Container for logging status information.
    BucketLogsPermission:
      type: string
      enum:
        - FULL_CONTROL
        - READ
        - WRITE
    Buckets:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Bucket'
          - xml:
              name: Bucket
    BypassGovernanceRetention:
      type: boolean
    BytesProcessed:
      type: integer
    BytesReturned:
      type: integer
    BytesScanned:
      type: integer
    CORSConfiguration:
      type: object
      required:
        - CORSRules
      properties:
        CORSRules:
          allOf:
            - $ref: '#/components/schemas/CORSRules'
            - xml:
                name: CORSRule
              description: A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.
      description: 'Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">Enabling Cross-Origin Resource Sharing</a> in the <i>Amazon S3 User Guide</i>.'
    ID:
      type: string
    ExposeHeaders:
      type: array
      items:
        $ref: '#/components/schemas/ExposeHeader'
      xml:
        wrapped: false
    MaxAgeSeconds:
      type: integer
    CORSRule:
      type: object
      required:
        - AllowedMethods
        - AllowedOrigins
      properties:
        ID:
          allOf:
            - $ref: '#/components/schemas/ID'
            - description: Unique identifier for the rule. The value cannot be longer than 255 characters.
        AllowedHeaders:
          allOf:
            - $ref: '#/components/schemas/AllowedHeaders'
            - xml:
                name: AllowedHeader
              description: 'Headers that are specified in the <code>Access-Control-Request-Headers</code> header. These headers are allowed in a preflight OPTIONS request. In response to any preflight OPTIONS request, Amazon S3 returns any requested headers that are allowed.'
        AllowedMethods:
          allOf:
            - $ref: '#/components/schemas/AllowedMethods'
            - xml:
                name: AllowedMethod
              description: 'An HTTP method that you allow the origin to execute. Valid values are <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, <code>POST</code>, and <code>DELETE</code>.'
        AllowedOrigins:
          allOf:
            - $ref: '#/components/schemas/AllowedOrigins'
            - xml:
                name: AllowedOrigin
              description: One or more origins you want customers to be able to access the bucket from.
        ExposeHeaders:
          allOf:
            - $ref: '#/components/schemas/ExposeHeaders'
            - xml:
                name: ExposeHeader
              description: 'One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).'
        MaxAgeSeconds:
          allOf:
            - $ref: '#/components/schemas/MaxAgeSeconds'
            - description: The time in seconds that your browser is to cache the preflight response for the specified resource.
      description: Specifies a cross-origin access rule for an Amazon S3 bucket.
    FileHeaderInfo:
      type: string
      enum:
        - USE
        - IGNORE
        - NONE
    Comments:
      type: string
    QuoteEscapeCharacter:
      type: string
    RecordDelimiter:
      type: string
    FieldDelimiter:
      type: string
    QuoteCharacter:
      type: string
    QuoteFields:
      type: string
      enum:
        - ALWAYS
        - ASNEEDED
    CacheControl:
      type: string
    ChecksumCRC32:
      type: string
    ChecksumCRC32C:
      type: string
    ChecksumSHA1:
      type: string
    ChecksumSHA256:
      type: string
    Checksum:
      type: object
      properties:
        ChecksumCRC32:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32'
            - description: 'The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumCRC32C:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32C'
            - description: 'The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA1:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA1'
            - description: 'The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA256:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA256'
            - description: 'The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
      description: Contains all the possible checksum or digest values for an object.
    ChecksumAlgorithm:
      type: string
      enum:
        - CRC32
        - CRC32C
        - SHA1
        - SHA256
    ChecksumAlgorithmList:
      type: array
      items:
        $ref: '#/components/schemas/ChecksumAlgorithm'
      xml:
        wrapped: false
    ChecksumMode:
      type: string
      enum:
        - ENABLED
    CloudFunction:
      type: string
    NotificationId:
      type: string
      description: 'An optional unique identifier for configurations in a notification configuration. If you don''t provide one, Amazon S3 will assign an ID.'
    Event:
      type: string
      enum:
        - 's3:ReducedRedundancyLostObject'
        - 's3:ObjectCreated:*'
        - 's3:ObjectCreated:Put'
        - 's3:ObjectCreated:Post'
        - 's3:ObjectCreated:Copy'
        - 's3:ObjectCreated:CompleteMultipartUpload'
        - 's3:ObjectRemoved:*'
        - 's3:ObjectRemoved:Delete'
        - 's3:ObjectRemoved:DeleteMarkerCreated'
        - 's3:ObjectRestore:*'
        - 's3:ObjectRestore:Post'
        - 's3:ObjectRestore:Completed'
        - 's3:Replication:*'
        - 's3:Replication:OperationFailedReplication'
        - 's3:Replication:OperationNotTracked'
        - 's3:Replication:OperationMissedThreshold'
        - 's3:Replication:OperationReplicatedAfterThreshold'
        - 's3:ObjectRestore:Delete'
        - 's3:LifecycleTransition'
        - 's3:IntelligentTiering'
        - 's3:ObjectAcl:Put'
        - 's3:LifecycleExpiration:*'
        - 's3:LifecycleExpiration:Delete'
        - 's3:LifecycleExpiration:DeleteMarkerCreated'
        - 's3:ObjectTagging:*'
        - 's3:ObjectTagging:Put'
        - 's3:ObjectTagging:Delete'
      description: The bucket event for which to send notifications.
    EventList:
      type: array
      items:
        $ref: '#/components/schemas/Event'
      xml:
        wrapped: false
    CloudFunctionInvocationRole:
      type: string
    Code:
      type: string
    CommonPrefix:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: Container for the specified common prefix.
      description: 'Container for all (if there are any) keys between Prefix and the next occurrence of the string specified by a delimiter. CommonPrefixes lists keys that act like subdirectories in the directory specified by Prefix. For example, if the prefix is notes/ and the delimiter is a slash (/) as in notes/summer/july, the common prefix is notes/summer/. '
    CommonPrefixList:
      type: array
      items:
        $ref: '#/components/schemas/CommonPrefix'
      xml:
        wrapped: false
    Location:
      type: string
    Expiration:
      type: string
    ETag:
      type: string
    ServerSideEncryption:
      type: string
      enum:
        - AES256
        - 'aws:kms'
        - 'aws:kms:dsse'
    ObjectVersionId:
      type: string
    SSEKMSKeyId:
      type: string
      format: password
    CompletedMultipartUpload:
      type: object
      properties:
        Parts:
          allOf:
            - $ref: '#/components/schemas/CompletedPartList'
            - xml:
                name: Part
              description: '<p>Array of CompletedPart data types.</p> <p>If you do not supply a valid <code>Part</code> with your request, the service sends back an HTTP 400 response.</p>'
      description: The container for the completed multipart upload details.
    SSECustomerAlgorithm:
      type: string
    SSECustomerKey:
      type: string
      format: password
    SSECustomerKeyMD5:
      type: string
    CompleteMultipartUploadRequest:
      type: object
      title: CompleteMultipartUploadRequest
      properties:
        MultipartUpload:
          allOf:
            - $ref: '#/components/schemas/CompletedMultipartUpload'
            - xml:
                name: CompleteMultipartUpload
              description: The container for the multipart upload request information.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PartNumber:
      type: integer
    CompletedPart:
      type: object
      properties:
        ETag:
          allOf:
            - $ref: '#/components/schemas/ETag'
            - description: Entity tag returned when the part was uploaded.
        ChecksumCRC32:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32'
            - description: 'The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumCRC32C:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32C'
            - description: 'The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA1:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA1'
            - description: 'The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA256:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA256'
            - description: 'The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        PartNumber:
          allOf:
            - $ref: '#/components/schemas/PartNumber'
            - description: 'Part number that identifies the part. This is a positive integer between 1 and 10,000.'
      description: Details of the parts that were uploaded.
    HttpErrorCodeReturnedEquals:
      type: string
    KeyPrefixEquals:
      type: string
    Condition:
      type: object
      properties:
        HttpErrorCodeReturnedEquals:
          allOf:
            - $ref: '#/components/schemas/HttpErrorCodeReturnedEquals'
            - description: 'The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element <code>Condition</code> is specified and sibling <code>KeyPrefixEquals</code> is not specified. If both are specified, then both must be true for the redirect to be applied.'
        KeyPrefixEquals:
          allOf:
            - $ref: '#/components/schemas/KeyPrefixEquals'
            - description: '<p>The object key name prefix when the redirect is applied. For example, to redirect requests for <code>ExamplePage.html</code>, the key prefix will be <code>ExamplePage.html</code>. To redirect request for all pages with the prefix <code>docs/</code>, the key prefix will be <code>/docs</code>, which identifies all objects in the <code>docs/</code> folder. Required when the parent element <code>Condition</code> is specified and sibling <code>HttpErrorCodeReturnedEquals</code> is not specified. If both conditions are specified, both must be true for the redirect to be applied.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
      description: 'A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the <code>/docs</code> folder, redirect to the <code>/documents</code> folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.'
    ConfirmRemoveSelfBucketAccess:
      type: boolean
    ContentDisposition:
      type: string
    ContentEncoding:
      type: string
    ContentLanguage:
      type: string
    ContentLength:
      type: integer
    ContentMD5:
      type: string
    ContentRange:
      type: string
    ContentType:
      type: string
    ContinuationEvent:
      type: object
      properties: {}
      description: <p/>
    CopyObjectResult:
      type: object
      properties:
        ETag:
          allOf:
            - $ref: '#/components/schemas/ETag'
            - description: 'Returns the ETag of the new object. The ETag reflects only changes to the contents of an object, not its metadata.'
        LastModified:
          allOf:
            - $ref: '#/components/schemas/LastModified'
            - description: Creation date of the object.
        ChecksumCRC32:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32'
            - description: 'The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumCRC32C:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32C'
            - description: 'The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA1:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA1'
            - description: 'The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA256:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA256'
            - description: 'The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
      description: Container for all response elements.
    CopySourceVersionId:
      type: string
    SSEKMSEncryptionContext:
      type: string
      format: password
    ObjectCannedACL:
      type: string
      enum:
        - private
        - public-read
        - public-read-write
        - authenticated-read
        - aws-exec-read
        - bucket-owner-read
        - bucket-owner-full-control
    CopySource:
      type: string
      pattern: \/.+\/.+
    CopySourceIfMatch:
      type: string
    CopySourceIfModifiedSince:
      type: string
      format: date-time
    CopySourceIfNoneMatch:
      type: string
    CopySourceIfUnmodifiedSince:
      type: string
      format: date-time
    Expires:
      type: string
      format: date-time
    GrantFullControl:
      type: string
    GrantRead:
      type: string
    GrantReadACP:
      type: string
    GrantWriteACP:
      type: string
    Metadata:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MetadataValue'
    MetadataDirective:
      type: string
      enum:
        - COPY
        - REPLACE
    TaggingDirective:
      type: string
      enum:
        - COPY
        - REPLACE
    StorageClass:
      type: string
      enum:
        - STANDARD
        - REDUCED_REDUNDANCY
        - STANDARD_IA
        - ONEZONE_IA
        - INTELLIGENT_TIERING
        - GLACIER
        - DEEP_ARCHIVE
        - OUTPOSTS
        - GLACIER_IR
        - SNOW
    WebsiteRedirectLocation:
      type: string
    CopySourceSSECustomerAlgorithm:
      type: string
    CopySourceSSECustomerKey:
      type: string
      format: password
    CopySourceSSECustomerKeyMD5:
      type: string
    TaggingHeader:
      type: string
    ObjectLockMode:
      type: string
      enum:
        - GOVERNANCE
        - COMPLIANCE
    ObjectLockRetainUntilDate:
      type: string
      format: date-time
    CopyObjectRequest:
      type: object
      title: CopyObjectRequest
      properties:
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - xml:
                name: x-amz-meta-
              description: A map of metadata to store with the object in S3.
    LastModified:
      type: string
      format: date-time
    CopyPartResult:
      type: object
      properties:
        ETag:
          allOf:
            - $ref: '#/components/schemas/ETag'
            - description: Entity tag of the object.
        LastModified:
          allOf:
            - $ref: '#/components/schemas/LastModified'
            - description: Date and time at which the object was uploaded.
        ChecksumCRC32:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32'
            - description: 'The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumCRC32C:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32C'
            - description: 'The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA1:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA1'
            - description: 'The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA256:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA256'
            - description: 'The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
      description: Container for all response elements.
    CopySourceRange:
      type: string
    CreateBucketConfiguration:
      type: object
      properties:
        LocationConstraint:
          allOf:
            - $ref: '#/components/schemas/BucketLocationConstraint'
            - description: 'Specifies the Region where the bucket will be created. If you don''t specify a Region, the bucket is created in the US East (N. Virginia) Region (us-east-1).'
      description: The configuration information for the bucket.
    GrantWrite:
      type: string
    ObjectLockEnabledForBucket:
      type: boolean
    ObjectOwnership:
      type: string
      enum:
        - BucketOwnerPreferred
        - ObjectWriter
        - BucketOwnerEnforced
      description: '<p>The container element for object ownership for a bucket''s ownership controls.</p> <p>BucketOwnerPreferred - Objects uploaded to the bucket change ownership to the bucket owner if the objects are uploaded with the <code>bucket-owner-full-control</code> canned ACL.</p> <p>ObjectWriter - The uploading account will own the object if the object is uploaded with the <code>bucket-owner-full-control</code> canned ACL.</p> <p>BucketOwnerEnforced - Access control lists (ACLs) are disabled and no longer affect permissions. The bucket owner automatically owns and has full control over every object in the bucket. The bucket only accepts PUT requests that don''t specify an ACL or bucket owner full control ACLs, such as the <code>bucket-owner-full-control</code> canned ACL or an equivalent form of this ACL expressed in the XML format.</p>'
    CreateBucketRequest:
      type: object
      title: CreateBucketRequest
      properties:
        CreateBucketConfiguration:
          allOf:
            - $ref: '#/components/schemas/CreateBucketConfiguration'
            - description: The configuration information for the bucket.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    CreateMultipartUploadRequest:
      type: object
      title: CreateMultipartUploadRequest
      properties:
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - xml:
                name: x-amz-meta-
              description: A map of metadata to store with the object in S3.
    Years:
      type: integer
    DefaultRetention:
      type: object
      properties:
        Mode:
          allOf:
            - $ref: '#/components/schemas/ObjectLockRetentionMode'
            - description: The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. Must be used with either <code>Days</code> or <code>Years</code>.
        Days:
          allOf:
            - $ref: '#/components/schemas/Days'
            - description: The number of days that you want to specify for the default retention period. Must be used with <code>Mode</code>.
        Years:
          allOf:
            - $ref: '#/components/schemas/Years'
            - description: The number of years that you want to specify for the default retention period. Must be used with <code>Mode</code>.
      description: <p>The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.</p> <note> <ul> <li> <p>The <code>DefaultRetention</code> settings require both a mode and a period.</p> </li> <li> <p>The <code>DefaultRetention</code> period can be either <code>Days</code> or <code>Years</code> but you must select one. You cannot specify <code>Days</code> and <code>Years</code> at the same time.</p> </li> </ul> </note>
    Delete:
      type: object
      required:
        - Objects
      properties:
        Objects:
          allOf:
            - $ref: '#/components/schemas/ObjectIdentifierList'
            - xml:
                name: Object
              description: The object to delete.
        Quiet:
          allOf:
            - $ref: '#/components/schemas/Quiet'
            - description: 'Element to enable quiet mode for the request. When you add this element, you must set its value to true.'
      description: Container for the objects to delete.
    DeleteBucketAnalyticsConfigurationRequest:
      type: object
      title: DeleteBucketAnalyticsConfigurationRequest
      properties: {}
    DeleteBucketCorsRequest:
      type: object
      title: DeleteBucketCorsRequest
      properties: {}
    DeleteBucketEncryptionRequest:
      type: object
      title: DeleteBucketEncryptionRequest
      properties: {}
    DeleteBucketIntelligentTieringConfigurationRequest:
      type: object
      title: DeleteBucketIntelligentTieringConfigurationRequest
      properties: {}
    DeleteBucketInventoryConfigurationRequest:
      type: object
      title: DeleteBucketInventoryConfigurationRequest
      properties: {}
    DeleteBucketLifecycleRequest:
      type: object
      title: DeleteBucketLifecycleRequest
      properties: {}
    DeleteBucketMetricsConfigurationRequest:
      type: object
      title: DeleteBucketMetricsConfigurationRequest
      properties: {}
    DeleteBucketOwnershipControlsRequest:
      type: object
      title: DeleteBucketOwnershipControlsRequest
      properties: {}
    DeleteBucketPolicyRequest:
      type: object
      title: DeleteBucketPolicyRequest
      properties: {}
    DeleteBucketReplicationRequest:
      type: object
      title: DeleteBucketReplicationRequest
      properties: {}
    DeleteBucketRequest:
      type: object
      title: DeleteBucketRequest
      properties: {}
    DeleteBucketTaggingRequest:
      type: object
      title: DeleteBucketTaggingRequest
      properties: {}
    DeleteBucketWebsiteRequest:
      type: object
      title: DeleteBucketWebsiteRequest
      properties: {}
    DeleteMarker:
      type: boolean
    IsLatest:
      type: boolean
    DeleteMarkerEntry:
      type: object
      properties:
        Owner:
          allOf:
            - $ref: '#/components/schemas/Owner'
            - description: The account that created the delete marker.&gt;
        Key:
          allOf:
            - $ref: '#/components/schemas/ObjectKey'
            - description: The object key.
        VersionId:
          allOf:
            - $ref: '#/components/schemas/ObjectVersionId'
            - description: Version ID of an object.
        IsLatest:
          allOf:
            - $ref: '#/components/schemas/IsLatest'
            - description: Specifies whether the object is (true) or is not (false) the latest version of an object.
        LastModified:
          allOf:
            - $ref: '#/components/schemas/LastModified'
            - description: Date and time the object was last modified.
      description: Information about the delete marker.
    DeleteMarkerReplicationStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    DeleteMarkerReplication:
      type: object
      properties:
        Status:
          allOf:
            - $ref: '#/components/schemas/DeleteMarkerReplicationStatus'
            - description: <p>Indicates whether to replicate delete markers.</p> <note> <p>Indicates whether to replicate delete markers.</p> </note>
      description: '<p>Specifies whether Amazon S3 replicates delete markers. If you specify a <code>Filter</code> in your replication configuration, you must also include a <code>DeleteMarkerReplication</code> element. If your <code>Filter</code> includes a <code>Tag</code> element, the <code>DeleteMarkerReplication</code> <code>Status</code> must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config">Basic Rule Configuration</a>. </p> <p>For more information about delete marker replication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html">Basic Rule Configuration</a>. </p> <note> <p>If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations">Backward Compatibility</a>.</p> </note>'
    DeleteMarkerVersionId:
      type: string
    DeleteMarkers:
      type: array
      items:
        $ref: '#/components/schemas/DeleteMarkerEntry'
      xml:
        wrapped: false
    MFA:
      type: string
    DeleteObjectRequest:
      type: object
      title: DeleteObjectRequest
      properties: {}
    DeleteObjectTaggingRequest:
      type: object
      title: DeleteObjectTaggingRequest
      properties: {}
    DeletedObjects:
      type: array
      items:
        $ref: '#/components/schemas/DeletedObject'
      xml:
        wrapped: false
    Errors:
      type: array
      items:
        $ref: '#/components/schemas/Error'
      xml:
        wrapped: false
    DeleteObjectsRequest:
      type: object
      required:
        - Delete
      title: DeleteObjectsRequest
      properties:
        Delete:
          allOf:
            - $ref: '#/components/schemas/Delete'
            - description: Container for the request.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    DeletePublicAccessBlockRequest:
      type: object
      title: DeletePublicAccessBlockRequest
      properties: {}
    DeletedObject:
      type: object
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/ObjectKey'
            - description: The name of the deleted object.
        VersionId:
          allOf:
            - $ref: '#/components/schemas/ObjectVersionId'
            - description: The version ID of the deleted object.
        DeleteMarker:
          allOf:
            - $ref: '#/components/schemas/DeleteMarker'
            - description: 'Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker. In a simple DELETE, this header indicates whether (true) or not (false) a delete marker was created.'
        DeleteMarkerVersionId:
          allOf:
            - $ref: '#/components/schemas/DeleteMarkerVersionId'
            - description: 'The version ID of the delete marker created as a result of the DELETE operation. If you delete a specific object version, the value returned by this header is the version ID of the object version deleted.'
      description: Information about the deleted object.
    Delimiter:
      type: string
    EncryptionConfiguration:
      type: object
      properties:
        ReplicaKmsKeyID:
          allOf:
            - $ref: '#/components/schemas/ReplicaKmsKeyID'
            - description: 'Specifies the ID (Key ARN or Alias ARN) of the customer managed Amazon Web Services KMS key stored in Amazon Web Services Key Management Service (KMS) for the destination bucket. Amazon S3 uses this key to encrypt replica objects. Amazon S3 only supports symmetric encryption KMS keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Asymmetric keys in Amazon Web Services KMS</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.'
      description: Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
    ReplicationTime:
      type: object
      required:
        - Status
        - Time
      properties:
        Status:
          allOf:
            - $ref: '#/components/schemas/ReplicationTimeStatus'
            - description: ' Specifies whether the replication time is enabled. '
        Time:
          allOf:
            - $ref: '#/components/schemas/ReplicationTimeValue'
            - description: ' A container specifying the time by which replication should be complete for all objects and operations on objects. '
      description: ' A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a <code>Metrics</code> block. '
    Metrics:
      type: object
      required:
        - Status
      properties:
        Status:
          allOf:
            - $ref: '#/components/schemas/MetricsStatus'
            - description: ' Specifies whether the replication metrics are enabled. '
        EventThreshold:
          allOf:
            - $ref: '#/components/schemas/ReplicationTimeValue'
            - description: ' A container specifying the time threshold for emitting the <code>s3:Replication:OperationMissedThreshold</code> event. '
      description: ' A container specifying replication metrics-related settings enabling replication metrics and events.'
    Destination:
      type: object
      required:
        - Bucket
      properties:
        Bucket:
          allOf:
            - $ref: '#/components/schemas/BucketName'
            - description: ' The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.'
        Account:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: 'Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the Amazon Web Services account that owns the destination bucket by specifying the <code>AccessControlTranslation</code> property, this is the account ID of the destination bucket owner. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-change-owner.html">Replication Additional Configuration: Changing the Replica Owner</a> in the <i>Amazon S3 User Guide</i>.'
        StorageClass:
          allOf:
            - $ref: '#/components/schemas/StorageClass'
            - description: '<p> The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica. </p> <p>For valid values, see the <code>StorageClass</code> element of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html">PUT Bucket replication</a> action in the <i>Amazon S3 API Reference</i>.</p>'
        AccessControlTranslation:
          allOf:
            - $ref: '#/components/schemas/AccessControlTranslation'
            - description: 'Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the Amazon Web Services account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same Amazon Web Services account that owns the source object.'
        EncryptionConfiguration:
          allOf:
            - $ref: '#/components/schemas/EncryptionConfiguration'
            - description: 'A container that provides information about encryption. If <code>SourceSelectionCriteria</code> is specified, you must specify this element.'
        ReplicationTime:
          allOf:
            - $ref: '#/components/schemas/ReplicationTime'
            - description: ' A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a <code>Metrics</code> block. '
        Metrics:
          allOf:
            - $ref: '#/components/schemas/Metrics'
            - description: ' A container specifying replication metrics-related settings enabling replication metrics and events. '
      description: Specifies information about where to publish analysis or configuration results for an Amazon S3 bucket and S3 Replication Time Control (S3 RTC).
    DisplayName:
      type: string
    EmailAddress:
      type: string
    EncodingType:
      type: string
      enum:
        - url
      description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key can contain any Unicode character; however, the XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
    KMSContext:
      type: string
    Encryption:
      type: object
      required:
        - EncryptionType
      properties:
        EncryptionType:
          allOf:
            - $ref: '#/components/schemas/ServerSideEncryption'
            - description: 'The server-side encryption algorithm used when storing job results in Amazon S3 (for example, AES256, <code>aws:kms</code>).'
        KMSKeyId:
          allOf:
            - $ref: '#/components/schemas/SSEKMSKeyId'
            - description: 'If the encryption type is <code>aws:kms</code>, this optional value specifies the ID of the symmetric encryption customer managed key to use for encryption of job results. Amazon S3 only supports symmetric encryption KMS keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Asymmetric keys in KMS</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.'
        KMSContext:
          allOf:
            - $ref: '#/components/schemas/KMSContext'
            - description: 'If the encryption type is <code>aws:kms</code>, this optional value can be used to specify the encryption context for the restore results.'
      description: Contains the type of server-side encryption used.
    ReplicaKmsKeyID:
      type: string
    EndEvent:
      type: object
      properties: {}
      description: A message that indicates the request is complete and no more messages will be sent. You should not assume that the request is complete until the client receives an <code>EndEvent</code>.
    Message:
      type: string
    Error:
      type: object
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/ObjectKey'
            - description: The error key.
        VersionId:
          allOf:
            - $ref: '#/components/schemas/ObjectVersionId'
            - description: The version ID of the error.
        Code:
          allOf:
            - $ref: '#/components/schemas/Code'
            - description: '<p>The error code is a string that uniquely identifies an error condition. It is meant to be read and understood by programs that detect and handle errors by type. The following is a list of Amazon S3 error codes. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html">Error responses</a>.</p> <ul> <li> <ul> <li> <p> <i>Code:</i> AccessDenied </p> </li> <li> <p> <i>Description:</i> Access Denied</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> AccountProblem</p> </li> <li> <p> <i>Description:</i> There is a problem with your Amazon Web Services account that prevents the action from completing successfully. Contact Amazon Web Services Support for further assistance.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> AllAccessDisabled</p> </li> <li> <p> <i>Description:</i> All access to this Amazon S3 resource has been disabled. Contact Amazon Web Services Support for further assistance.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> AmbiguousGrantByEmailAddress</p> </li> <li> <p> <i>Description:</i> The email address you provided is associated with more than one account.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> AuthorizationHeaderMalformed</p> </li> <li> <p> <i>Description:</i> The authorization header you provided is invalid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>HTTP Status Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> BadDigest</p> </li> <li> <p> <i>Description:</i> The Content-MD5 you specified did not match what we received.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> BucketAlreadyExists</p> </li> <li> <p> <i>Description:</i> The requested bucket name is not available. The bucket namespace is shared by all users of the system. Please select a different name and try again.</p> </li> <li> <p> <i>HTTP Status Code:</i> 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> BucketAlreadyOwnedByYou</p> </li> <li> <p> <i>Description:</i> The bucket you tried to create already exists, and you own it. Amazon S3 returns this error in all Amazon Web Services Regions except in the North Virginia Region. For legacy compatibility, if you re-create an existing bucket that you already own in the North Virginia Region, Amazon S3 returns 200 OK and resets the bucket access control lists (ACLs).</p> </li> <li> <p> <i>Code:</i> 409 Conflict (in all Regions except the North Virginia Region) </p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> BucketNotEmpty</p> </li> <li> <p> <i>Description:</i> The bucket you tried to delete is not empty.</p> </li> <li> <p> <i>HTTP Status Code:</i> 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> CredentialsNotSupported</p> </li> <li> <p> <i>Description:</i> This request does not support credentials.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> CrossLocationLoggingProhibited</p> </li> <li> <p> <i>Description:</i> Cross-location logging not allowed. Buckets in one geographic location cannot log information to a bucket in another location.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> EntityTooSmall</p> </li> <li> <p> <i>Description:</i> Your proposed upload is smaller than the minimum allowed object size.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> EntityTooLarge</p> </li> <li> <p> <i>Description:</i> Your proposed upload exceeds the maximum allowed object size.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> ExpiredToken</p> </li> <li> <p> <i>Description:</i> The provided token has expired.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> IllegalVersioningConfigurationException </p> </li> <li> <p> <i>Description:</i> Indicates that the versioning configuration specified in the request is invalid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> IncompleteBody</p> </li> <li> <p> <i>Description:</i> You did not provide the number of bytes specified by the Content-Length HTTP header</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> IncorrectNumberOfFilesInPostRequest</p> </li> <li> <p> <i>Description:</i> POST requires exactly one file upload per request.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InlineDataTooLarge</p> </li> <li> <p> <i>Description:</i> Inline data exceeds the maximum allowed size.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InternalError</p> </li> <li> <p> <i>Description:</i> We encountered an internal error. Please try again.</p> </li> <li> <p> <i>HTTP Status Code:</i> 500 Internal Server Error</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Server</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidAccessKeyId</p> </li> <li> <p> <i>Description:</i> The Amazon Web Services access key ID you provided does not exist in our records.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidAddressingHeader</p> </li> <li> <p> <i>Description:</i> You must specify the Anonymous role.</p> </li> <li> <p> <i>HTTP Status Code:</i> N/A</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidArgument</p> </li> <li> <p> <i>Description:</i> Invalid Argument</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidBucketName</p> </li> <li> <p> <i>Description:</i> The specified bucket is not valid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidBucketState</p> </li> <li> <p> <i>Description:</i> The request is not valid with the current state of the bucket.</p> </li> <li> <p> <i>HTTP Status Code:</i> 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidDigest</p> </li> <li> <p> <i>Description:</i> The Content-MD5 you specified is not valid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidEncryptionAlgorithmError</p> </li> <li> <p> <i>Description:</i> The encryption request you specified is not valid. The valid value is AES256.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidLocationConstraint</p> </li> <li> <p> <i>Description:</i> The specified location constraint is not valid. For more information about Regions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro">How to Select a Region for Your Buckets</a>. </p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidObjectState</p> </li> <li> <p> <i>Description:</i> The action is not valid for the current state of the object.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidPart</p> </li> <li> <p> <i>Description:</i> One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part''s entity tag.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidPartOrder</p> </li> <li> <p> <i>Description:</i> The list of parts was not in ascending order. Parts list must be specified in order by part number.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidPayer</p> </li> <li> <p> <i>Description:</i> All access to this object has been disabled. Please contact Amazon Web Services Support for further assistance.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidPolicyDocument</p> </li> <li> <p> <i>Description:</i> The content of the form does not meet the conditions specified in the policy document.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRange</p> </li> <li> <p> <i>Description:</i> The requested range cannot be satisfied.</p> </li> <li> <p> <i>HTTP Status Code:</i> 416 Requested Range Not Satisfiable</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Please use <code>AWS4-HMAC-SHA256</code>.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> SOAP requests must be made over an HTTPS connection.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Acceleration is not supported for buckets with non-DNS compliant names.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Acceleration is not supported for buckets with periods (.) in their names.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Accelerate endpoint only supports virtual style requests.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Accelerate is not configured on this bucket.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Accelerate is disabled on this bucket.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Acceleration is not supported on this bucket. Contact Amazon Web Services Support for more information.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Acceleration cannot be enabled on this bucket. Contact Amazon Web Services Support for more information.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidSecurity</p> </li> <li> <p> <i>Description:</i> The provided security credentials are not valid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidSOAPRequest</p> </li> <li> <p> <i>Description:</i> The SOAP request body is invalid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidStorageClass</p> </li> <li> <p> <i>Description:</i> The storage class you specified is not valid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidTargetBucketForLogging</p> </li> <li> <p> <i>Description:</i> The target bucket for logging does not exist, is not owned by you, or does not have the appropriate grants for the log-delivery group. </p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidToken</p> </li> <li> <p> <i>Description:</i> The provided token is malformed or otherwise invalid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidURI</p> </li> <li> <p> <i>Description:</i> Couldn''t parse the specified URI.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> KeyTooLongError</p> </li> <li> <p> <i>Description:</i> Your key is too long.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MalformedACLError</p> </li> <li> <p> <i>Description:</i> The XML you provided was not well-formed or did not validate against our published schema.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MalformedPOSTRequest </p> </li> <li> <p> <i>Description:</i> The body of your POST request is not well-formed multipart/form-data.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MalformedXML</p> </li> <li> <p> <i>Description:</i> This happens when the user sends malformed XML (XML that doesn''t conform to the published XSD) for the configuration. The error message is, "The XML you provided was not well-formed or did not validate against our published schema." </p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MaxMessageLengthExceeded</p> </li> <li> <p> <i>Description:</i> Your request was too big.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MaxPostPreDataLengthExceededError</p> </li> <li> <p> <i>Description:</i> Your POST request fields preceding the upload file were too large.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MetadataTooLarge</p> </li> <li> <p> <i>Description:</i> Your metadata headers exceed the maximum allowed metadata size.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MethodNotAllowed</p> </li> <li> <p> <i>Description:</i> The specified method is not allowed against this resource.</p> </li> <li> <p> <i>HTTP Status Code:</i> 405 Method Not Allowed</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingAttachment</p> </li> <li> <p> <i>Description:</i> A SOAP attachment was expected, but none were found.</p> </li> <li> <p> <i>HTTP Status Code:</i> N/A</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingContentLength</p> </li> <li> <p> <i>Description:</i> You must provide the Content-Length HTTP header.</p> </li> <li> <p> <i>HTTP Status Code:</i> 411 Length Required</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingRequestBodyError</p> </li> <li> <p> <i>Description:</i> This happens when the user sends an empty XML document as a request. The error message is, "Request body is empty." </p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingSecurityElement</p> </li> <li> <p> <i>Description:</i> The SOAP 1.1 request is missing a security element.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingSecurityHeader</p> </li> <li> <p> <i>Description:</i> Your request is missing a required header.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoLoggingStatusForKey</p> </li> <li> <p> <i>Description:</i> There is no such thing as a logging status subresource for a key.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchBucket</p> </li> <li> <p> <i>Description:</i> The specified bucket does not exist.</p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchBucketPolicy</p> </li> <li> <p> <i>Description:</i> The specified bucket does not have a bucket policy.</p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchKey</p> </li> <li> <p> <i>Description:</i> The specified key does not exist.</p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchLifecycleConfiguration</p> </li> <li> <p> <i>Description:</i> The lifecycle configuration does not exist. </p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchUpload</p> </li> <li> <p> <i>Description:</i> The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchVersion </p> </li> <li> <p> <i>Description:</i> Indicates that the version ID specified in the request does not match an existing version.</p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NotImplemented</p> </li> <li> <p> <i>Description:</i> A header you provided implies functionality that is not implemented.</p> </li> <li> <p> <i>HTTP Status Code:</i> 501 Not Implemented</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Server</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NotSignedUp</p> </li> <li> <p> <i>Description:</i> Your account is not signed up for the Amazon S3 service. You must sign up before you can use Amazon S3. You can sign up at the following URL: <a href="http://aws.amazon.com/s3">Amazon S3</a> </p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> OperationAborted</p> </li> <li> <p> <i>Description:</i> A conflicting conditional action is currently in progress against this resource. Try again.</p> </li> <li> <p> <i>HTTP Status Code:</i> 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> PermanentRedirect</p> </li> <li> <p> <i>Description:</i> The bucket you are attempting to access must be addressed using the specified endpoint. Send all future requests to this endpoint.</p> </li> <li> <p> <i>HTTP Status Code:</i> 301 Moved Permanently</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> PreconditionFailed</p> </li> <li> <p> <i>Description:</i> At least one of the preconditions you specified did not hold.</p> </li> <li> <p> <i>HTTP Status Code:</i> 412 Precondition Failed</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> Redirect</p> </li> <li> <p> <i>Description:</i> Temporary redirect.</p> </li> <li> <p> <i>HTTP Status Code:</i> 307 Moved Temporarily</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> RestoreAlreadyInProgress</p> </li> <li> <p> <i>Description:</i> Object restore is already in progress.</p> </li> <li> <p> <i>HTTP Status Code:</i> 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> RequestIsNotMultiPartContent</p> </li> <li> <p> <i>Description:</i> Bucket POST must be of the enclosure-type multipart/form-data.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> RequestTimeout</p> </li> <li> <p> <i>Description:</i> Your socket connection to the server was not read from or written to within the timeout period.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> RequestTimeTooSkewed</p> </li> <li> <p> <i>Description:</i> The difference between the request time and the server''s time is too large.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> RequestTorrentOfBucketError</p> </li> <li> <p> <i>Description:</i> Requesting the torrent file of a bucket is not permitted.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> SignatureDoesNotMatch</p> </li> <li> <p> <i>Description:</i> The request signature we calculated does not match the signature you provided. Check your Amazon Web Services secret access key and signing method. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">REST Authentication</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/SOAPAuthentication.html">SOAP Authentication</a> for details.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> ServiceUnavailable</p> </li> <li> <p> <i>Description:</i> Service is unable to handle request.</p> </li> <li> <p> <i>HTTP Status Code:</i> 503 Service Unavailable</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Server</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> SlowDown</p> </li> <li> <p> <i>Description:</i> Reduce your request rate.</p> </li> <li> <p> <i>HTTP Status Code:</i> 503 Slow Down</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Server</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> TemporaryRedirect</p> </li> <li> <p> <i>Description:</i> You are being redirected to the bucket while DNS updates.</p> </li> <li> <p> <i>HTTP Status Code:</i> 307 Moved Temporarily</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> TokenRefreshRequired</p> </li> <li> <p> <i>Description:</i> The provided token must be refreshed.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> TooManyBuckets</p> </li> <li> <p> <i>Description:</i> You have attempted to create more buckets than allowed.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> UnexpectedContent</p> </li> <li> <p> <i>Description:</i> This request does not support content.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> UnresolvableGrantByEmailAddress</p> </li> <li> <p> <i>Description:</i> The email address you provided does not match any account on record.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> UserKeyMustBeSpecified</p> </li> <li> <p> <i>Description:</i> The bucket POST must contain the specified field name. If it is specified, check the order of the fields.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> </ul> <p/>'
        Message:
          allOf:
            - $ref: '#/components/schemas/Message'
            - description: The error message contains a generic description of the error condition in English. It is intended for a human audience. Simple programs display the message directly to the end user if they encounter an error condition they don't know how or don't care to handle. Sophisticated programs with more exhaustive error handling and proper internationalization are more likely to ignore the error message.
      description: Container for all error elements.
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
    ExistingObjectReplicationStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    ExistingObjectReplication:
      type: object
      required:
        - Status
      properties:
        Status:
          allOf:
            - $ref: '#/components/schemas/ExistingObjectReplicationStatus'
            - description: 'Specifies whether Amazon S3 replicates existing source bucket objects. '
      description: 'Optional configuration to replicate existing source bucket objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-what-is-isnot-replicated.html#existing-object-replication">Replicating Existing Objects</a> in the <i>Amazon S3 User Guide</i>. '
    ExpirationStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    ExpiredObjectDeleteMarker:
      type: boolean
    ExposeHeader:
      type: string
    Expression:
      type: string
    ExpressionType:
      type: string
      enum:
        - SQL
    FetchOwner:
      type: boolean
    FilterRuleName:
      type: string
      enum:
        - prefix
        - suffix
    FilterRuleValue:
      type: string
    FilterRule:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/FilterRuleName'
            - description: 'The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Event Notifications</a> in the <i>Amazon S3 User Guide</i>.'
        Value:
          allOf:
            - $ref: '#/components/schemas/FilterRuleValue'
            - description: The value that the filter searches for in object key names.
      description: Specifies the Amazon S3 object key name to filter on and whether to filter on the suffix or prefix of the key name.
    FilterRuleList:
      type: array
      description: A list of containers for the key-value pair that defines the criteria for the filter rule.
      items:
        $ref: '#/components/schemas/FilterRule'
      xml:
        wrapped: false
    GetBucketAccelerateConfigurationRequest:
      type: object
      title: GetBucketAccelerateConfigurationRequest
      properties: {}
    GetBucketAclRequest:
      type: object
      title: GetBucketAclRequest
      properties: {}
    GetBucketAnalyticsConfigurationRequest:
      type: object
      title: GetBucketAnalyticsConfigurationRequest
      properties: {}
    GetBucketCorsRequest:
      type: object
      title: GetBucketCorsRequest
      properties: {}
    ServerSideEncryptionConfiguration:
      type: object
      required:
        - Rules
      properties:
        Rules:
          allOf:
            - $ref: '#/components/schemas/ServerSideEncryptionRules'
            - xml:
                name: Rule
              description: Container for information about a particular server-side encryption configuration rule.
      description: Specifies the default server-side-encryption configuration.
    GetBucketEncryptionRequest:
      type: object
      title: GetBucketEncryptionRequest
      properties: {}
    IntelligentTieringConfiguration:
      type: object
      required:
        - Id
        - Status
        - Tierings
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/IntelligentTieringId'
            - description: The ID used to identify the S3 Intelligent-Tiering configuration.
        Filter:
          allOf:
            - $ref: '#/components/schemas/IntelligentTieringFilter'
            - description: Specifies a bucket filter. The configuration only includes objects that meet the filter's criteria.
        Status:
          allOf:
            - $ref: '#/components/schemas/IntelligentTieringStatus'
            - description: Specifies the status of the configuration.
        Tierings:
          allOf:
            - $ref: '#/components/schemas/TieringList'
            - xml:
                name: Tiering
              description: Specifies the S3 Intelligent-Tiering storage class tier of the configuration.
      description: '<p>Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.</p> <p>For information about the S3 Intelligent-Tiering storage class, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access">Storage class for automatically optimizing frequently and infrequently accessed objects</a>.</p>'
    GetBucketIntelligentTieringConfigurationRequest:
      type: object
      title: GetBucketIntelligentTieringConfigurationRequest
      properties: {}
    InventoryConfiguration:
      type: object
      required:
        - Destination
        - IsEnabled
        - Id
        - IncludedObjectVersions
        - Schedule
      properties:
        Destination:
          allOf:
            - $ref: '#/components/schemas/InventoryDestination'
            - description: Contains information about where to publish the inventory results.
        IsEnabled:
          allOf:
            - $ref: '#/components/schemas/IsEnabled'
            - description: 'Specifies whether the inventory is enabled or disabled. If set to <code>True</code>, an inventory list is generated. If set to <code>False</code>, no inventory list is generated.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/InventoryFilter'
            - description: Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria.
        Id:
          allOf:
            - $ref: '#/components/schemas/InventoryId'
            - description: The ID used to identify the inventory configuration.
        IncludedObjectVersions:
          allOf:
            - $ref: '#/components/schemas/InventoryIncludedObjectVersions'
            - description: 'Object versions to include in the inventory list. If set to <code>All</code>, the list includes all the object versions, which adds the version-related fields <code>VersionId</code>, <code>IsLatest</code>, and <code>DeleteMarker</code> to the list. If set to <code>Current</code>, the list does not contain these version-related fields.'
        OptionalFields:
          allOf:
            - $ref: '#/components/schemas/InventoryOptionalFields'
            - description: Contains the optional fields that are included in the inventory results.
        Schedule:
          allOf:
            - $ref: '#/components/schemas/InventorySchedule'
            - description: Specifies the schedule for generating inventory results.
      description: 'Specifies the inventory configuration for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html">GET Bucket inventory</a> in the <i>Amazon S3 API Reference</i>. '
    GetBucketInventoryConfigurationRequest:
      type: object
      title: GetBucketInventoryConfigurationRequest
      properties: {}
    GetBucketLifecycleConfigurationRequest:
      type: object
      title: GetBucketLifecycleConfigurationRequest
      properties: {}
    GetBucketLifecycleRequest:
      type: object
      title: GetBucketLifecycleRequest
      properties: {}
    GetBucketLocationRequest:
      type: object
      title: GetBucketLocationRequest
      properties: {}
    GetBucketLoggingRequest:
      type: object
      title: GetBucketLoggingRequest
      properties: {}
    MetricsConfiguration:
      type: object
      required:
        - Id
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/MetricsId'
            - description: 'The ID used to identify the metrics configuration. The ID has a 64 character limit and can only contain letters, numbers, periods, dashes, and underscores.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/MetricsFilter'
            - description: 'Specifies a metrics configuration filter. The metrics configuration will only include objects that meet the filter''s criteria. A filter must be a prefix, an object tag, an access point ARN, or a conjunction (MetricsAndOperator).'
      description: 'Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you''re updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don''t include the elements you want to keep, they are erased. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html">PutBucketMetricsConfiguration</a>.'
    GetBucketMetricsConfigurationRequest:
      type: object
      title: GetBucketMetricsConfigurationRequest
      properties: {}
    GetBucketNotificationConfigurationRequest:
      type: object
      title: GetBucketNotificationConfigurationRequest
      properties: {}
    OwnershipControls:
      type: object
      required:
        - Rules
      properties:
        Rules:
          allOf:
            - $ref: '#/components/schemas/OwnershipControlsRules'
            - xml:
                name: Rule
              description: The container element for an ownership control rule.
      description: The container element for a bucket's ownership controls.
    GetBucketOwnershipControlsRequest:
      type: object
      title: GetBucketOwnershipControlsRequest
      properties: {}
    Policy:
      type: string
    GetBucketPolicyRequest:
      type: object
      title: GetBucketPolicyRequest
      properties: {}
    PolicyStatus:
      type: object
      properties:
        IsPublic:
          allOf:
            - $ref: '#/components/schemas/IsPublic'
            - description: The policy status for this bucket. <code>TRUE</code> indicates that this bucket is public. <code>FALSE</code> indicates that the bucket is not public.
      description: The container element for a bucket's policy status.
    GetBucketPolicyStatusRequest:
      type: object
      title: GetBucketPolicyStatusRequest
      properties: {}
    ReplicationConfiguration:
      type: object
      required:
        - Role
        - Rules
      properties:
        Role:
          allOf:
            - $ref: '#/components/schemas/Role'
            - description: 'The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that Amazon S3 assumes when replicating objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html">How to Set Up Replication</a> in the <i>Amazon S3 User Guide</i>.'
        Rules:
          allOf:
            - $ref: '#/components/schemas/ReplicationRules'
            - xml:
                name: Rule
              description: 'A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules. '
      description: 'A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.'
    GetBucketReplicationRequest:
      type: object
      title: GetBucketReplicationRequest
      properties: {}
    GetBucketRequestPaymentRequest:
      type: object
      title: GetBucketRequestPaymentRequest
      properties: {}
    GetBucketTaggingRequest:
      type: object
      title: GetBucketTaggingRequest
      properties: {}
    MFADeleteStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    GetBucketVersioningRequest:
      type: object
      title: GetBucketVersioningRequest
      properties: {}
    GetBucketWebsiteRequest:
      type: object
      title: GetBucketWebsiteRequest
      properties: {}
    GetObjectAclRequest:
      type: object
      title: GetObjectAclRequest
      properties: {}
    GetObjectAttributesParts:
      type: object
      properties:
        TotalPartsCount:
          allOf:
            - $ref: '#/components/schemas/PartsCount'
            - xml:
                name: PartsCount
              description: The total number of parts.
        PartNumberMarker:
          allOf:
            - $ref: '#/components/schemas/PartNumberMarker'
            - description: The marker for the current part.
        NextPartNumberMarker:
          allOf:
            - $ref: '#/components/schemas/NextPartNumberMarker'
            - description: 'When a list is truncated, this element specifies the last part in the list, as well as the value to use for the <code>PartNumberMarker</code> request parameter in a subsequent request.'
        MaxParts:
          allOf:
            - $ref: '#/components/schemas/MaxParts'
            - description: The maximum number of parts allowed in the response.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/IsTruncated'
            - description: Indicates whether the returned list of parts is truncated. A value of <code>true</code> indicates that the list was truncated. A list can be truncated if the number of parts exceeds the limit returned in the <code>MaxParts</code> element.
        Parts:
          allOf:
            - $ref: '#/components/schemas/PartsList'
            - xml:
                name: Part
              description: A container for elements related to a particular part. A response can contain zero or more <code>Parts</code> elements.
      description: A collection of parts associated with a multipart upload.
    ObjectSize:
      type: integer
    PartsCount:
      type: integer
    PartNumberMarker:
      type: integer
    NextPartNumberMarker:
      type: integer
    MaxParts:
      type: integer
    IsTruncated:
      type: boolean
    PartsList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectPart'
      xml:
        wrapped: false
    ObjectAttributesList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectAttributes'
    GetObjectAttributesRequest:
      type: object
      title: GetObjectAttributesRequest
      properties: {}
    ObjectLockLegalHold:
      type: object
      properties:
        Status:
          allOf:
            - $ref: '#/components/schemas/ObjectLockLegalHoldStatus'
            - description: Indicates whether the specified object has a legal hold in place.
      description: A legal hold configuration for an object.
    GetObjectLegalHoldRequest:
      type: object
      title: GetObjectLegalHoldRequest
      properties: {}
    ObjectLockConfiguration:
      type: object
      properties:
        ObjectLockEnabled:
          allOf:
            - $ref: '#/components/schemas/ObjectLockEnabled'
            - description: 'Indicates whether this bucket has an Object Lock configuration enabled. Enable <code>ObjectLockEnabled</code> when you apply <code>ObjectLockConfiguration</code> to a bucket. '
        Rule:
          allOf:
            - $ref: '#/components/schemas/ObjectLockRule'
            - description: Specifies the Object Lock rule for the specified object. Enable the this rule when you apply <code>ObjectLockConfiguration</code> to a bucket. Bucket settings require both a mode and a period. The period can be either <code>Days</code> or <code>Years</code> but you must select one. You cannot specify <code>Days</code> and <code>Years</code> at the same time.
      description: The container element for Object Lock configuration parameters.
    GetObjectLockConfigurationRequest:
      type: object
      title: GetObjectLockConfigurationRequest
      properties: {}
    Restore:
      type: string
    MissingMeta:
      type: integer
    ReplicationStatus:
      type: string
      enum:
        - COMPLETE
        - PENDING
        - FAILED
        - REPLICA
    TagCount:
      type: integer
    IfMatch:
      type: string
    IfModifiedSince:
      type: string
      format: date-time
    IfNoneMatch:
      type: string
    IfUnmodifiedSince:
      type: string
      format: date-time
    Range:
      type: string
    ResponseCacheControl:
      type: string
    ResponseContentDisposition:
      type: string
    ResponseContentEncoding:
      type: string
    ResponseContentLanguage:
      type: string
    ResponseContentType:
      type: string
    ResponseExpires:
      type: string
      format: date-time
    GetObjectRequest:
      type: object
      title: GetObjectRequest
      properties: {}
    GetObjectResponseStatusCode:
      type: integer
    ObjectLockRetention:
      type: object
      properties:
        Mode:
          allOf:
            - $ref: '#/components/schemas/ObjectLockRetentionMode'
            - description: Indicates the Retention mode for the specified object.
        RetainUntilDate:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The date on which this Object Lock Retention will expire.
      description: A Retention configuration for an object.
    GetObjectRetentionRequest:
      type: object
      title: GetObjectRetentionRequest
      properties: {}
    GetObjectTaggingRequest:
      type: object
      title: GetObjectTaggingRequest
      properties: {}
    GetObjectTorrentRequest:
      type: object
      title: GetObjectTorrentRequest
      properties: {}
    PublicAccessBlockConfiguration:
      type: object
      properties:
        BlockPublicAcls:
          allOf:
            - $ref: '#/components/schemas/Setting'
            - description: '<p>Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.</p> </li> <li> <p>PUT Object calls fail if the request includes a public ACL.</p> </li> <li> <p>PUT Bucket calls fail if the request includes a public ACL.</p> </li> </ul> <p>Enabling this setting doesn''t affect existing policies or ACLs.</p>'
        IgnorePublicAcls:
          allOf:
            - $ref: '#/components/schemas/Setting'
            - description: <p>Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.</p> <p>Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>
        BlockPublicPolicy:
          allOf:
            - $ref: '#/components/schemas/Setting'
            - description: <p>Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Enabling this setting doesn't affect existing bucket policies.</p>
        RestrictPublicBuckets:
          allOf:
            - $ref: '#/components/schemas/Setting'
            - description: '<p>Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to <code>TRUE</code> restricts access to this bucket to only Amazon Web Service principals and authorized users within this account if the bucket has a public policy.</p> <p>Enabling this setting doesn''t affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.</p>'
      description: 'The PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>. '
    GetPublicAccessBlockRequest:
      type: object
      title: GetPublicAccessBlockRequest
      properties: {}
    Grantee:
      type: object
      required:
        - Type
      properties:
        DisplayName:
          allOf:
            - $ref: '#/components/schemas/DisplayName'
            - description: Screen name of the grantee.
        EmailAddress:
          allOf:
            - $ref: '#/components/schemas/EmailAddress'
            - description: '<p>Email address of the grantee.</p> <note> <p>Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: </p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p> US West (Oregon)</p> </li> <li> <p> Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p> </note>'
        ID:
          allOf:
            - $ref: '#/components/schemas/ID'
            - description: The canonical user ID of the grantee.
        Type:
          allOf:
            - $ref: '#/components/schemas/Type'
            - xml:
                name: 'xsi:type'
              description: Type of grantee
        URI:
          allOf:
            - $ref: '#/components/schemas/URI'
            - description: URI of the grantee group.
      description: Container for the person being granted permissions.
      xml:
        namespace: 'http://www.w3.org/2001/XMLSchema-instance'
        attribute: true
    Permission:
      type: string
      enum:
        - FULL_CONTROL
        - WRITE
        - WRITE_ACP
        - READ
        - READ_ACP
    Grant:
      type: object
      properties:
        Grantee:
          allOf:
            - $ref: '#/components/schemas/Grantee'
            - description: The person being granted permissions.
        Permission:
          allOf:
            - $ref: '#/components/schemas/Permission'
            - description: Specifies the permission given to the grantee.
      description: Container for grant information.
    Type:
      type: string
      enum:
        - CanonicalUser
        - AmazonCustomerByEmail
        - Group
    URI:
      type: string
    HeadBucketRequest:
      type: object
      title: HeadBucketRequest
      properties: {}
    HeadObjectRequest:
      type: object
      title: HeadObjectRequest
      properties: {}
    HostName:
      type: string
    HttpRedirectCode:
      type: string
    Suffix:
      type: string
    Initiated:
      type: string
      format: date-time
    Initiator:
      type: object
      properties:
        ID:
          allOf:
            - $ref: '#/components/schemas/ID'
            - description: 'If the principal is an Amazon Web Services account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value.'
        DisplayName:
          allOf:
            - $ref: '#/components/schemas/DisplayName'
            - description: Name of the Principal.
      description: 'Container element that identifies who initiated the multipart upload. '
    InputSerialization:
      type: object
      properties:
        CSV:
          allOf:
            - $ref: '#/components/schemas/CSVInput'
            - description: Describes the serialization of a CSV-encoded object.
        CompressionType:
          allOf:
            - $ref: '#/components/schemas/CompressionType'
            - description: 'Specifies object''s compression format. Valid values: NONE, GZIP, BZIP2. Default Value: NONE.'
        JSON:
          allOf:
            - $ref: '#/components/schemas/JSONInput'
            - description: Specifies JSON as object's input serialization format.
        Parquet:
          allOf:
            - $ref: '#/components/schemas/ParquetInput'
            - description: Specifies Parquet as object's input serialization format.
      description: Describes the serialization format of the object.
    IntelligentTieringAccessTier:
      type: string
      enum:
        - ARCHIVE_ACCESS
        - DEEP_ARCHIVE_ACCESS
    IntelligentTieringAndOperator:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: An object key name prefix that identifies the subset of objects to which the configuration applies.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagSet'
            - xml:
                name: Tag
              description: All of these tags must exist in the object's tag set in order for the configuration to apply.
      description: A container for specifying S3 Intelligent-Tiering filters. The filters determine the subset of objects to which the rule applies.
      xml:
        wrapped: false
    IntelligentTieringConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/IntelligentTieringConfiguration'
      xml:
        wrapped: false
    IntelligentTieringDays:
      type: integer
    InventoryConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryConfiguration'
      xml:
        wrapped: false
    InventoryS3BucketDestination:
      type: object
      required:
        - Bucket
        - Format
      properties:
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: '<p>The account ID that owns the destination S3 bucket. If no account ID is provided, the owner is not validated before exporting data. </p> <note> <p> Although this value is optional, we strongly recommend that you set it to help prevent problems if the destination bucket ownership changes. </p> </note>'
        Bucket:
          allOf:
            - $ref: '#/components/schemas/BucketName'
            - description: The Amazon Resource Name (ARN) of the bucket where inventory results will be published.
        Format:
          allOf:
            - $ref: '#/components/schemas/InventoryFormat'
            - description: Specifies the output format of the inventory results.
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: The prefix that is prepended to all inventory results.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/InventoryEncryption'
            - description: Contains the type of server-side encryption used to encrypt the inventory results.
      description: 'Contains the bucket name, file format, bucket owner (optional), and prefix (optional) where inventory results are published.'
    SSES3:
      type: object
      properties: {}
      description: Specifies the use of SSE-S3 to encrypt delivered inventory reports.
    SSEKMS:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          allOf:
            - $ref: '#/components/schemas/SSEKMSKeyId'
            - description: Specifies the ID of the Key Management Service (KMS) symmetric encryption customer managed key to use for encrypting inventory reports.
      description: Specifies the use of SSE-KMS to encrypt delivered inventory reports.
    InventoryEncryption:
      type: object
      properties:
        SSES3:
          allOf:
            - $ref: '#/components/schemas/SSES3'
            - xml:
                name: SSE-S3
              description: Specifies the use of SSE-S3 to encrypt delivered inventory reports.
        SSEKMS:
          allOf:
            - $ref: '#/components/schemas/SSEKMS'
            - xml:
                name: SSE-KMS
              description: Specifies the use of SSE-KMS to encrypt delivered inventory reports.
      description: Contains the type of server-side encryption used to encrypt the inventory results.
    InventoryFormat:
      type: string
      enum:
        - CSV
        - ORC
        - Parquet
    InventoryFrequency:
      type: string
      enum:
        - Daily
        - Weekly
    InventoryOptionalField:
      type: string
      enum:
        - Size
        - LastModifiedDate
        - StorageClass
        - ETag
        - IsMultipartUploaded
        - ReplicationStatus
        - EncryptionStatus
        - ObjectLockRetainUntilDate
        - ObjectLockMode
        - ObjectLockLegalHoldStatus
        - IntelligentTieringAccessTier
        - BucketKeyStatus
        - ChecksumAlgorithm
        - ObjectAccessControlList
        - ObjectOwner
    IsPublic:
      type: boolean
    IsRestoreInProgress:
      type: boolean
    JSONType:
      type: string
      enum:
        - DOCUMENT
        - LINES
    KeyCount:
      type: integer
    KeyMarker:
      type: string
    LambdaFunctionArn:
      type: string
    NotificationConfigurationFilter:
      type: object
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/S3KeyFilter'
            - xml:
                name: S3Key
      description: 'Specifies object key name filtering rules. For information about key name filtering, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html">Configuring event notifications using object key name filtering</a> in the <i>Amazon S3 User Guide</i>.'
    LambdaFunctionConfiguration:
      type: object
      required:
        - LambdaFunctionArn
        - Events
      properties:
        Id:
          $ref: '#/components/schemas/NotificationId'
        LambdaFunctionArn:
          allOf:
            - $ref: '#/components/schemas/LambdaFunctionArn'
            - xml:
                name: CloudFunction
              description: The Amazon Resource Name (ARN) of the Lambda function that Amazon S3 invokes when the specified event type occurs.
        Events:
          allOf:
            - $ref: '#/components/schemas/EventList'
            - xml:
                name: Event
              description: 'The Amazon S3 bucket event for which to invoke the Lambda function. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Supported Event Types</a> in the <i>Amazon S3 User Guide</i>.'
        Filter:
          $ref: '#/components/schemas/NotificationConfigurationFilter'
      description: A container for specifying the configuration for Lambda notifications.
    LifecycleConfiguration:
      type: object
      required:
        - Rules
      properties:
        Rules:
          allOf:
            - $ref: '#/components/schemas/Rules'
            - xml:
                name: Rule
              description: 'Specifies lifecycle configuration rules for an Amazon S3 bucket. '
      description: '<p>Container for lifecycle rules. You can add as many as 1000 rules.</p> <p>For more information see, <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html">Managing your storage lifecycle</a> in the <i>Amazon S3 User Guide</i>.</p>'
    LifecycleExpiration:
      type: object
      properties:
        Date:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: Indicates at what date the object is to be moved or deleted. The date value must conform to the ISO 8601 format. The time is always midnight UTC.
        Days:
          allOf:
            - $ref: '#/components/schemas/Days'
            - description: 'Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.'
        ExpiredObjectDeleteMarker:
          allOf:
            - $ref: '#/components/schemas/ExpiredObjectDeleteMarker'
            - description: 'Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired; if set to false the policy takes no action. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.'
      description: '<p>Container for the expiration for the lifecycle of the object.</p> <p>For more information see, <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html">Managing your storage lifecycle</a> in the <i>Amazon S3 User Guide</i>.</p>'
    LifecycleRuleFilter:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: '<p>Prefix identifying one or more objects to which the rule applies.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
        Tag:
          allOf:
            - $ref: '#/components/schemas/Tag'
            - description: This tag must exist in the object's tag set in order for the rule to apply.
        ObjectSizeGreaterThan:
          allOf:
            - $ref: '#/components/schemas/ObjectSizeGreaterThanBytes'
            - description: Minimum object size to which the rule applies.
        ObjectSizeLessThan:
          allOf:
            - $ref: '#/components/schemas/ObjectSizeLessThanBytes'
            - description: Maximum object size to which the rule applies.
        And:
          $ref: '#/components/schemas/LifecycleRuleAndOperator'
      description: 'The <code>Filter</code> is used to identify objects that a Lifecycle Rule applies to. A <code>Filter</code> must have exactly one of <code>Prefix</code>, <code>Tag</code>, or <code>And</code> specified.'
    TransitionList:
      type: array
      items:
        $ref: '#/components/schemas/Transition'
      xml:
        wrapped: false
    NoncurrentVersionTransitionList:
      type: array
      items:
        $ref: '#/components/schemas/NoncurrentVersionTransition'
      xml:
        wrapped: false
    NoncurrentVersionExpiration:
      type: object
      properties:
        NoncurrentDays:
          allOf:
            - $ref: '#/components/schemas/Days'
            - description: 'Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. The value must be a non-zero positive integer. For information about the noncurrent days calculations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations">How Amazon S3 Calculates When an Object Became Noncurrent</a> in the <i>Amazon S3 User Guide</i>.'
        NewerNoncurrentVersions:
          allOf:
            - $ref: '#/components/schemas/VersionCount'
            - description: 'Specifies how many noncurrent versions Amazon S3 will retain. If there are this many more recent noncurrent versions, Amazon S3 will take the associated action. For more information about noncurrent versions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html">Lifecycle configuration elements</a> in the <i>Amazon S3 User Guide</i>.'
      description: 'Specifies when noncurrent object versions expire. Upon expiration, Amazon S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that Amazon S3 delete noncurrent object versions at a specific period in the object''s lifetime.'
    LifecycleRule:
      type: object
      required:
        - Status
      properties:
        Expiration:
          allOf:
            - $ref: '#/components/schemas/LifecycleExpiration'
            - description: 'Specifies the expiration for the lifecycle of the object in the form of date, days and, whether the object has a delete marker.'
        ID:
          allOf:
            - $ref: '#/components/schemas/ID'
            - description: Unique identifier for the rule. The value cannot be longer than 255 characters.
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - deprecated: true
              description: '<p>Prefix identifying one or more objects to which the rule applies. This is no longer used; use <code>Filter</code> instead.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
        Filter:
          allOf:
            - $ref: '#/components/schemas/LifecycleRuleFilter'
            - description: 'The <code>Filter</code> is used to identify objects that a Lifecycle Rule applies to. A <code>Filter</code> must have exactly one of <code>Prefix</code>, <code>Tag</code>, or <code>And</code> specified. <code>Filter</code> is required if the <code>LifecycleRule</code> does not contain a <code>Prefix</code> element.'
        Status:
          allOf:
            - $ref: '#/components/schemas/ExpirationStatus'
            - description: 'If ''Enabled'', the rule is currently being applied. If ''Disabled'', the rule is not currently being applied.'
        Transitions:
          allOf:
            - $ref: '#/components/schemas/TransitionList'
            - xml:
                name: Transition
              description: Specifies when an Amazon S3 object transitions to a specified storage class.
        NoncurrentVersionTransitions:
          allOf:
            - $ref: '#/components/schemas/NoncurrentVersionTransitionList'
            - xml:
                name: NoncurrentVersionTransition
              description: ' Specifies the transition rule for the lifecycle rule that describes when noncurrent objects transition to a specific storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to a specific storage class at a set period in the object''s lifetime. '
        NoncurrentVersionExpiration:
          $ref: '#/components/schemas/NoncurrentVersionExpiration'
        AbortIncompleteMultipartUpload:
          $ref: '#/components/schemas/AbortIncompleteMultipartUpload'
      description: '<p>A lifecycle rule for individual objects in an Amazon S3 bucket.</p> <p>For more information see, <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html">Managing your storage lifecycle</a> in the <i>Amazon S3 User Guide</i>.</p>'
    ObjectSizeGreaterThanBytes:
      type: integer
    ObjectSizeLessThanBytes:
      type: integer
    LifecycleRuleAndOperator:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: Prefix identifying one or more objects to which the rule applies.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagSet'
            - xml:
                name: Tag
              description: All of these tags must exist in the object's tag set in order for the rule to apply.
        ObjectSizeGreaterThan:
          allOf:
            - $ref: '#/components/schemas/ObjectSizeGreaterThanBytes'
            - description: Minimum object size to which the rule applies.
        ObjectSizeLessThan:
          allOf:
            - $ref: '#/components/schemas/ObjectSizeLessThanBytes'
            - description: Maximum object size to which the rule applies.
      description: This is used in a Lifecycle Rule Filter to apply a logical AND to two or more predicates. The Lifecycle Rule will apply to any object matching all of the predicates configured inside the And operator.
      xml:
        wrapped: false
    Token:
      type: string
    NextToken:
      type: string
    ListBucketAnalyticsConfigurationsRequest:
      type: object
      title: ListBucketAnalyticsConfigurationsRequest
      properties: {}
    ListBucketIntelligentTieringConfigurationsRequest:
      type: object
      title: ListBucketIntelligentTieringConfigurationsRequest
      properties: {}
    ListBucketInventoryConfigurationsRequest:
      type: object
      title: ListBucketInventoryConfigurationsRequest
      properties: {}
    MetricsConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/MetricsConfiguration'
      xml:
        wrapped: false
    ListBucketMetricsConfigurationsRequest:
      type: object
      title: ListBucketMetricsConfigurationsRequest
      properties: {}
    UploadIdMarker:
      type: string
    NextKeyMarker:
      type: string
    NextUploadIdMarker:
      type: string
    MaxUploads:
      type: integer
    MultipartUploadList:
      type: array
      items:
        $ref: '#/components/schemas/MultipartUpload'
      xml:
        wrapped: false
    ListMultipartUploadsRequest:
      type: object
      title: ListMultipartUploadsRequest
      properties: {}
    VersionIdMarker:
      type: string
    NextVersionIdMarker:
      type: string
    ObjectVersionList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectVersion'
      xml:
        wrapped: false
    MaxKeys:
      type: integer
    OptionalObjectAttributesList:
      type: array
      items:
        $ref: '#/components/schemas/OptionalObjectAttributes'
    ListObjectVersionsRequest:
      type: object
      title: ListObjectVersionsRequest
      properties: {}
    Marker:
      type: string
    NextMarker:
      type: string
    ObjectList:
      type: array
      items:
        $ref: '#/components/schemas/Object'
      xml:
        wrapped: false
    ListObjectsRequest:
      type: object
      title: ListObjectsRequest
      properties: {}
    StartAfter:
      type: string
    ListObjectsV2Request:
      type: object
      title: ListObjectsV2Request
      properties: {}
    Parts:
      type: array
      items:
        $ref: '#/components/schemas/Part'
      xml:
        wrapped: false
    ListPartsRequest:
      type: object
      title: ListPartsRequest
      properties: {}
    LocationPrefix:
      type: string
    TargetBucket:
      type: string
    TargetGrants:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TargetGrant'
          - xml:
              name: Grant
    TargetPrefix:
      type: string
    MetadataKey:
      type: string
    MetadataEntry:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/MetadataKey'
            - description: Name of the object.
        Value:
          allOf:
            - $ref: '#/components/schemas/MetadataValue'
            - description: Value of the object.
      description: A metadata key-value pair to store with an object.
    MetricsStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    ReplicationTimeValue:
      type: object
      properties:
        Minutes:
          allOf:
            - $ref: '#/components/schemas/Minutes'
            - description: '<p> Contains an integer specifying time in minutes. </p> <p> Valid value: 15</p>'
      description: ' A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics <code>EventThreshold</code>. '
    MetricsAndOperator:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: The prefix used when evaluating an AND predicate.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagSet'
            - xml:
                name: Tag
              description: The list of tags used when evaluating an AND predicate.
        AccessPointArn:
          allOf:
            - $ref: '#/components/schemas/AccessPointArn'
            - description: The access point ARN used when evaluating an <code>AND</code> predicate.
      description: 'A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter. The operator must have at least two predicates, and an object must match all of the predicates in order for the filter to apply.'
      xml:
        wrapped: false
    Minutes:
      type: integer
    MultipartUpload:
      type: object
      properties:
        UploadId:
          allOf:
            - $ref: '#/components/schemas/MultipartUploadId'
            - description: Upload ID that identifies the multipart upload.
        Key:
          allOf:
            - $ref: '#/components/schemas/ObjectKey'
            - description: Key of the object for which the multipart upload was initiated.
        Initiated:
          allOf:
            - $ref: '#/components/schemas/Initiated'
            - description: Date and time at which the multipart upload was initiated.
        StorageClass:
          allOf:
            - $ref: '#/components/schemas/StorageClass'
            - description: The class of storage used to store the object.
        Owner:
          allOf:
            - $ref: '#/components/schemas/Owner'
            - description: 'Specifies the owner of the object that is part of the multipart upload. '
        Initiator:
          allOf:
            - $ref: '#/components/schemas/Initiator'
            - description: Identifies who initiated the multipart upload.
        ChecksumAlgorithm:
          allOf:
            - $ref: '#/components/schemas/ChecksumAlgorithm'
            - description: The algorithm that was used to create a checksum of the object.
      description: Container for the <code>MultipartUpload</code> for the Amazon S3 object.
    VersionCount:
      type: integer
    TransitionStorageClass:
      type: string
      enum:
        - GLACIER
        - STANDARD_IA
        - ONEZONE_IA
        - INTELLIGENT_TIERING
        - DEEP_ARCHIVE
        - GLACIER_IR
    NoncurrentVersionTransition:
      type: object
      properties:
        NoncurrentDays:
          allOf:
            - $ref: '#/components/schemas/Days'
            - description: 'Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations">How Amazon S3 Calculates How Long an Object Has Been Noncurrent</a> in the <i>Amazon S3 User Guide</i>.'
        StorageClass:
          allOf:
            - $ref: '#/components/schemas/TransitionStorageClass'
            - description: The class of storage used to store the object.
        NewerNoncurrentVersions:
          allOf:
            - $ref: '#/components/schemas/VersionCount'
            - description: 'Specifies how many noncurrent versions Amazon S3 will retain. If there are this many more recent noncurrent versions, Amazon S3 will take the associated action. For more information about noncurrent versions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html">Lifecycle configuration elements</a> in the <i>Amazon S3 User Guide</i>.'
      description: 'Container for the transition rule that describes when noncurrent objects transition to the <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>, <code>INTELLIGENT_TIERING</code>, <code>GLACIER_IR</code>, <code>GLACIER</code>, or <code>DEEP_ARCHIVE</code> storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>, <code>INTELLIGENT_TIERING</code>, <code>GLACIER_IR</code>, <code>GLACIER</code>, or <code>DEEP_ARCHIVE</code> storage class at a specific period in the object''s lifetime.'
    S3KeyFilter:
      type: object
      properties:
        FilterRules:
          allOf:
            - $ref: '#/components/schemas/FilterRuleList'
            - xml:
                name: FilterRule
      description: A container for object key name prefix and suffix filtering rules.
    Size:
      type: integer
    ObjectStorageClass:
      type: string
      enum:
        - STANDARD
        - REDUCED_REDUNDANCY
        - GLACIER
        - STANDARD_IA
        - ONEZONE_IA
        - INTELLIGENT_TIERING
        - DEEP_ARCHIVE
        - OUTPOSTS
        - GLACIER_IR
        - SNOW
    RestoreStatus:
      type: object
      properties:
        IsRestoreInProgress:
          allOf:
            - $ref: '#/components/schemas/IsRestoreInProgress'
            - description: '<p>Specifies whether the object is currently being restored. If the object restoration is in progress, the header returns the value <code>TRUE</code>. For example:</p> <p> <code>x-amz-optional-object-attributes: IsRestoreInProgress="true"</code> </p> <p>If the object restoration has completed, the header returns the value <code>FALSE</code>. For example:</p> <p> <code>x-amz-optional-object-attributes: IsRestoreInProgress="false", RestoreExpiryDate="2012-12-21T00:00:00.000Z"</code> </p> <p>If the object hasn''t been restored, there is no header response.</p>'
        RestoreExpiryDate:
          allOf:
            - $ref: '#/components/schemas/RestoreExpiryDate'
            - description: '<p>Indicates when the restored copy will expire. This value is populated only if the object has already been restored. For example:</p> <p> <code>x-amz-optional-object-attributes: IsRestoreInProgress="false", RestoreExpiryDate="2012-12-21T00:00:00.000Z"</code> </p>'
      description: 'Specifies the restoration status of an object. Objects in certain storage classes must be restored before they can be retrieved. For more information about these storage classes and how to work with archived objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/archived-objects.html"> Working with archived objects</a> in the <i>Amazon S3 User Guide</i>.'
    Object:
      type: object
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/ObjectKey'
            - description: The name that you assign to an object. You use the object key to retrieve the object.
        LastModified:
          allOf:
            - $ref: '#/components/schemas/LastModified'
            - description: Creation date of the object.
        ETag:
          allOf:
            - $ref: '#/components/schemas/ETag'
            - description: '<p>The entity tag is a hash of the object. The ETag reflects changes only to the contents of an object, not its metadata. The ETag may or may not be an MD5 digest of the object data. Whether or not it is depends on how the object was created and how it is encrypted as described below:</p> <ul> <li> <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the Amazon Web Services Management Console, and are encrypted by SSE-S3 or plaintext, have ETags that are an MD5 digest of their object data.</p> </li> <li> <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the Amazon Web Services Management Console, and are encrypted by SSE-C or SSE-KMS, have ETags that are not an MD5 digest of their object data.</p> </li> <li> <p>If an object is created by either the Multipart Upload or Part Copy operation, the ETag is not an MD5 digest, regardless of the method of encryption. If an object is larger than 16 MB, the Amazon Web Services Management Console will upload or copy that object as a Multipart Upload, and therefore the ETag will not be an MD5 digest.</p> </li> </ul>'
        ChecksumAlgorithm:
          allOf:
            - $ref: '#/components/schemas/ChecksumAlgorithmList'
            - description: The algorithm that was used to create a checksum of the object.
        Size:
          allOf:
            - $ref: '#/components/schemas/Size'
            - description: Size in bytes of the object
        StorageClass:
          allOf:
            - $ref: '#/components/schemas/ObjectStorageClass'
            - description: The class of storage used to store the object.
        Owner:
          allOf:
            - $ref: '#/components/schemas/Owner'
            - description: The owner of the object
        RestoreStatus:
          allOf:
            - $ref: '#/components/schemas/RestoreStatus'
            - description: 'Specifies the restoration status of an object. Objects in certain storage classes must be restored before they can be retrieved. For more information about these storage classes and how to work with archived objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/archived-objects.html"> Working with archived objects</a> in the <i>Amazon S3 User Guide</i>.'
      description: An object consists of data and its descriptive metadata.
    ObjectIdentifier:
      type: object
      required:
        - Key
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/ObjectKey'
            - description: '<p>Key name of the object.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
        VersionId:
          allOf:
            - $ref: '#/components/schemas/ObjectVersionId'
            - description: VersionId for the specific version of the object to delete.
      description: Object Identifier is unique value to identify objects.
    ObjectLockToken:
      type: string
    ObjectPart:
      type: object
      properties:
        PartNumber:
          allOf:
            - $ref: '#/components/schemas/PartNumber'
            - description: 'The part number identifying the part. This value is a positive integer between 1 and 10,000.'
        Size:
          allOf:
            - $ref: '#/components/schemas/Size'
            - description: The size of the uploaded part in bytes.
        ChecksumCRC32:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32'
            - description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumCRC32C:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32C'
            - description: 'The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA1:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA1'
            - description: 'The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA256:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA256'
            - description: 'The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
      description: A container for elements related to an individual part.
    ObjectVersionStorageClass:
      type: string
      enum:
        - STANDARD
    ObjectVersion:
      type: object
      properties:
        ETag:
          allOf:
            - $ref: '#/components/schemas/ETag'
            - description: The entity tag is an MD5 hash of that version of the object.
        ChecksumAlgorithm:
          allOf:
            - $ref: '#/components/schemas/ChecksumAlgorithmList'
            - description: The algorithm that was used to create a checksum of the object.
        Size:
          allOf:
            - $ref: '#/components/schemas/Size'
            - description: Size in bytes of the object.
        StorageClass:
          allOf:
            - $ref: '#/components/schemas/ObjectVersionStorageClass'
            - description: The class of storage used to store the object.
        Key:
          allOf:
            - $ref: '#/components/schemas/ObjectKey'
            - description: The object key.
        VersionId:
          allOf:
            - $ref: '#/components/schemas/ObjectVersionId'
            - description: Version ID of an object.
        IsLatest:
          allOf:
            - $ref: '#/components/schemas/IsLatest'
            - description: Specifies whether the object is (true) or is not (false) the latest version of an object.
        LastModified:
          allOf:
            - $ref: '#/components/schemas/LastModified'
            - description: Date and time the object was last modified.
        Owner:
          allOf:
            - $ref: '#/components/schemas/Owner'
            - description: Specifies the owner of the object.
        RestoreStatus:
          allOf:
            - $ref: '#/components/schemas/RestoreStatus'
            - description: 'Specifies the restoration status of an object. Objects in certain storage classes must be restored before they can be retrieved. For more information about these storage classes and how to work with archived objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/archived-objects.html"> Working with archived objects</a> in the <i>Amazon S3 User Guide</i>.'
      description: The version of an object.
    S3Location:
      type: object
      required:
        - BucketName
        - Prefix
      properties:
        BucketName:
          allOf:
            - $ref: '#/components/schemas/BucketName'
            - description: The name of the bucket where the restore results will be placed.
        Prefix:
          allOf:
            - $ref: '#/components/schemas/LocationPrefix'
            - description: The prefix that is prepended to the restore results for this request.
        Encryption:
          $ref: '#/components/schemas/Encryption'
        CannedACL:
          allOf:
            - $ref: '#/components/schemas/ObjectCannedACL'
            - description: The canned ACL to apply to the restore results.
        AccessControlList:
          allOf:
            - $ref: '#/components/schemas/Grants'
            - description: A list of grants that control access to the staged results.
        Tagging:
          allOf:
            - $ref: '#/components/schemas/Tagging'
            - description: The tag-set that is applied to the restore results.
        UserMetadata:
          allOf:
            - $ref: '#/components/schemas/UserMetadata'
            - description: A list of metadata to store with the restore results in S3.
        StorageClass:
          allOf:
            - $ref: '#/components/schemas/StorageClass'
            - description: The class of storage used to store the restore results.
      description: Describes an Amazon S3 location that will receive the results of the restore request.
    OutputSerialization:
      type: object
      properties:
        CSV:
          allOf:
            - $ref: '#/components/schemas/CSVOutput'
            - description: Describes the serialization of CSV-encoded Select results.
        JSON:
          allOf:
            - $ref: '#/components/schemas/JSONOutput'
            - description: Specifies JSON as request's output serialization format.
      description: Describes how results of the Select job are serialized.
    OwnershipControlsRule:
      type: object
      required:
        - ObjectOwnership
      properties:
        ObjectOwnership:
          $ref: '#/components/schemas/ObjectOwnership'
      description: The container element for an ownership control rule.
    Part:
      type: object
      properties:
        PartNumber:
          allOf:
            - $ref: '#/components/schemas/PartNumber'
            - description: 'Part number identifying the part. This is a positive integer between 1 and 10,000.'
        LastModified:
          allOf:
            - $ref: '#/components/schemas/LastModified'
            - description: Date and time at which the part was uploaded.
        ETag:
          allOf:
            - $ref: '#/components/schemas/ETag'
            - description: Entity tag returned when the part was uploaded.
        Size:
          allOf:
            - $ref: '#/components/schemas/Size'
            - description: Size in bytes of the uploaded part data.
        ChecksumCRC32:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32'
            - description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumCRC32C:
          allOf:
            - $ref: '#/components/schemas/ChecksumCRC32C'
            - description: 'The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA1:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA1'
            - description: 'The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
        ChecksumSHA256:
          allOf:
            - $ref: '#/components/schemas/ChecksumSHA256'
            - description: 'This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.'
      description: Container for elements related to a part.
    Priority:
      type: integer
    Progress:
      type: object
      properties:
        BytesScanned:
          allOf:
            - $ref: '#/components/schemas/BytesScanned'
            - description: The current number of object bytes scanned.
        BytesProcessed:
          allOf:
            - $ref: '#/components/schemas/BytesProcessed'
            - description: The current number of uncompressed object bytes processed.
        BytesReturned:
          allOf:
            - $ref: '#/components/schemas/BytesReturned'
            - description: The current number of bytes of records payload data returned.
      description: This data type contains information about progress of an operation.
    ProgressEvent:
      type: object
      properties:
        Details:
          allOf:
            - $ref: '#/components/schemas/Progress'
            - description: The Progress event details.
      description: This data type contains information about the progress event of an operation.
    Protocol:
      type: string
      enum:
        - http
        - https
    PutBucketAccelerateConfigurationRequest:
      type: object
      required:
        - AccelerateConfiguration
      title: PutBucketAccelerateConfigurationRequest
      properties:
        AccelerateConfiguration:
          allOf:
            - $ref: '#/components/schemas/AccelerateConfiguration'
            - description: Container for setting the transfer acceleration state.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketAclRequest:
      type: object
      title: PutBucketAclRequest
      properties:
        AccessControlPolicy:
          allOf:
            - $ref: '#/components/schemas/AccessControlPolicy'
            - description: Contains the elements that set the ACL permissions for an object per grantee.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketAnalyticsConfigurationRequest:
      type: object
      required:
        - AnalyticsConfiguration
      title: PutBucketAnalyticsConfigurationRequest
      properties:
        AnalyticsConfiguration:
          allOf:
            - $ref: '#/components/schemas/AnalyticsConfiguration'
            - description: The configuration and any analyses for the analytics filter.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketCorsRequest:
      type: object
      required:
        - CORSConfiguration
      title: PutBucketCorsRequest
      properties:
        CORSConfiguration:
          allOf:
            - $ref: '#/components/schemas/CORSConfiguration'
            - description: 'Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">Enabling Cross-Origin Resource Sharing</a> in the <i>Amazon S3 User Guide</i>.'
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketEncryptionRequest:
      type: object
      required:
        - ServerSideEncryptionConfiguration
      title: PutBucketEncryptionRequest
      properties:
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketIntelligentTieringConfigurationRequest:
      type: object
      required:
        - IntelligentTieringConfiguration
      title: PutBucketIntelligentTieringConfigurationRequest
      properties:
        IntelligentTieringConfiguration:
          allOf:
            - $ref: '#/components/schemas/IntelligentTieringConfiguration'
            - description: Container for S3 Intelligent-Tiering configuration.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketInventoryConfigurationRequest:
      type: object
      required:
        - InventoryConfiguration
      title: PutBucketInventoryConfigurationRequest
      properties:
        InventoryConfiguration:
          allOf:
            - $ref: '#/components/schemas/InventoryConfiguration'
            - description: Specifies the inventory configuration.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketLifecycleConfigurationRequest:
      type: object
      title: PutBucketLifecycleConfigurationRequest
      properties:
        LifecycleConfiguration:
          allOf:
            - $ref: '#/components/schemas/BucketLifecycleConfiguration'
            - description: 'Container for lifecycle rules. You can add as many as 1,000 rules.'
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketLifecycleRequest:
      type: object
      title: PutBucketLifecycleRequest
      properties:
        LifecycleConfiguration:
          allOf:
            - $ref: '#/components/schemas/LifecycleConfiguration'
            - description: <p/>
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketLoggingRequest:
      type: object
      required:
        - BucketLoggingStatus
      title: PutBucketLoggingRequest
      properties:
        BucketLoggingStatus:
          allOf:
            - $ref: '#/components/schemas/BucketLoggingStatus'
            - description: Container for logging status information.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketMetricsConfigurationRequest:
      type: object
      required:
        - MetricsConfiguration
      title: PutBucketMetricsConfigurationRequest
      properties:
        MetricsConfiguration:
          allOf:
            - $ref: '#/components/schemas/MetricsConfiguration'
            - description: Specifies the metrics configuration.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    SkipValidation:
      type: boolean
    PutBucketNotificationConfigurationRequest:
      type: object
      required:
        - NotificationConfiguration
      title: PutBucketNotificationConfigurationRequest
      properties:
        NotificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketNotificationRequest:
      type: object
      required:
        - NotificationConfiguration
      title: PutBucketNotificationRequest
      properties:
        NotificationConfiguration:
          allOf:
            - $ref: '#/components/schemas/NotificationConfigurationDeprecated'
            - description: The container for the configuration.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketOwnershipControlsRequest:
      type: object
      required:
        - OwnershipControls
      title: PutBucketOwnershipControlsRequest
      properties:
        OwnershipControls:
          allOf:
            - $ref: '#/components/schemas/OwnershipControls'
            - description: 'The <code>OwnershipControls</code> (BucketOwnerEnforced, BucketOwnerPreferred, or ObjectWriter) that you want to apply to this Amazon S3 bucket.'
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutBucketPolicyRequest:
      type: object
      required:
        - Policy
      title: PutBucketPolicyRequest
      properties:
        Policy:
          allOf:
            - $ref: '#/components/schemas/Policy'
            - description: The bucket policy as a JSON document.
    PutBucketReplicationRequest:
      type: object
      required:
        - ReplicationConfiguration
      title: PutBucketReplicationRequest
      properties:
        ReplicationConfiguration:
          $ref: '#/components/schemas/ReplicationConfiguration'
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    RequestPaymentConfiguration:
      type: object
      required:
        - Payer
      properties:
        Payer:
          allOf:
            - $ref: '#/components/schemas/Payer'
            - description: Specifies who pays for the download and request fees.
      description: Container for Payer.
    PutBucketRequestPaymentRequest:
      type: object
      required:
        - RequestPaymentConfiguration
      title: PutBucketRequestPaymentRequest
      properties:
        RequestPaymentConfiguration:
          allOf:
            - $ref: '#/components/schemas/RequestPaymentConfiguration'
            - description: Container for Payer.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    Tagging:
      type: object
      required:
        - TagSet
      properties:
        TagSet:
          allOf:
            - $ref: '#/components/schemas/TagSet'
            - description: A collection for a set of tags
      description: Container for <code>TagSet</code> elements.
    PutBucketTaggingRequest:
      type: object
      required:
        - Tagging
      title: PutBucketTaggingRequest
      properties:
        Tagging:
          allOf:
            - $ref: '#/components/schemas/Tagging'
            - description: Container for the <code>TagSet</code> and <code>Tag</code> elements.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    VersioningConfiguration:
      type: object
      properties:
        MFADelete:
          allOf:
            - $ref: '#/components/schemas/MFADelete'
            - xml:
                name: MfaDelete
              description: 'Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.'
        Status:
          allOf:
            - $ref: '#/components/schemas/BucketVersioningStatus'
            - description: The versioning state of the bucket.
      description: 'Describes the versioning state of an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html">PUT Bucket versioning</a> in the <i>Amazon S3 API Reference</i>.'
    PutBucketVersioningRequest:
      type: object
      required:
        - VersioningConfiguration
      title: PutBucketVersioningRequest
      properties:
        VersioningConfiguration:
          allOf:
            - $ref: '#/components/schemas/VersioningConfiguration'
            - description: Container for setting the versioning state.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    WebsiteConfiguration:
      type: object
      properties:
        ErrorDocument:
          allOf:
            - $ref: '#/components/schemas/ErrorDocument'
            - description: The name of the error document for the website.
        IndexDocument:
          allOf:
            - $ref: '#/components/schemas/IndexDocument'
            - description: The name of the index document for the website.
        RedirectAllRequestsTo:
          allOf:
            - $ref: '#/components/schemas/RedirectAllRequestsTo'
            - description: '<p>The redirect behavior for every request to this bucket''s website endpoint.</p> <important> <p>If you specify this property, you can''t specify any other property.</p> </important>'
        RoutingRules:
          allOf:
            - $ref: '#/components/schemas/RoutingRules'
            - description: Rules that define when a redirect is applied and the redirect behavior.
      description: Specifies website configuration parameters for an Amazon S3 bucket.
    PutBucketWebsiteRequest:
      type: object
      required:
        - WebsiteConfiguration
      title: PutBucketWebsiteRequest
      properties:
        WebsiteConfiguration:
          allOf:
            - $ref: '#/components/schemas/WebsiteConfiguration'
            - description: Container for the request.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutObjectAclRequest:
      type: object
      title: PutObjectAclRequest
      properties:
        AccessControlPolicy:
          allOf:
            - $ref: '#/components/schemas/AccessControlPolicy'
            - description: Contains the elements that set the ACL permissions for an object per grantee.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutObjectLegalHoldRequest:
      type: object
      title: PutObjectLegalHoldRequest
      properties:
        LegalHold:
          allOf:
            - $ref: '#/components/schemas/ObjectLockLegalHold'
            - description: Container element for the legal hold configuration you want to apply to the specified object.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutObjectLockConfigurationRequest:
      type: object
      title: PutObjectLockConfigurationRequest
      properties:
        ObjectLockConfiguration:
          allOf:
            - $ref: '#/components/schemas/ObjectLockConfiguration'
            - description: The Object Lock configuration that you want to apply to the specified bucket.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutObjectRequest:
      type: object
      title: PutObjectRequest
      properties:
        Body:
          allOf:
            - $ref: '#/components/schemas/Body'
            - description: Object data.
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - xml:
                name: x-amz-meta-
              description: A map of metadata to store with the object in S3.
    PutObjectRetentionRequest:
      type: object
      title: PutObjectRetentionRequest
      properties:
        Retention:
          allOf:
            - $ref: '#/components/schemas/ObjectLockRetention'
            - description: The container element for the Object Retention configuration.
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutObjectTaggingRequest:
      type: object
      required:
        - Tagging
      title: PutObjectTaggingRequest
      properties:
        Tagging:
          allOf:
            - $ref: '#/components/schemas/Tagging'
            - description: Container for the <code>TagSet</code> and <code>Tag</code> elements
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    PutPublicAccessBlockRequest:
      type: object
      required:
        - PublicAccessBlockConfiguration
      title: PutPublicAccessBlockRequest
      properties:
        PublicAccessBlockConfiguration:
          allOf:
            - $ref: '#/components/schemas/PublicAccessBlockConfiguration'
            - description: 'The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>.'
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    QueueArn:
      type: string
    QueueConfiguration:
      type: object
      required:
        - QueueArn
        - Events
      properties:
        Id:
          $ref: '#/components/schemas/NotificationId'
        QueueArn:
          allOf:
            - $ref: '#/components/schemas/QueueArn'
            - xml:
                name: Queue
              description: The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type.
        Events:
          allOf:
            - $ref: '#/components/schemas/EventList'
            - xml:
                name: Event
              description: A collection of bucket events for which to send notifications
        Filter:
          $ref: '#/components/schemas/NotificationConfigurationFilter'
      description: Specifies the configuration for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon S3 detects specified events.
    RecordsEvent:
      type: object
      properties:
        Payload:
          allOf:
            - $ref: '#/components/schemas/Body'
            - description: 'The byte array of partial, one or more result records.'
      description: The container for the records event.
    ReplaceKeyPrefixWith:
      type: string
    ReplaceKeyWith:
      type: string
    Redirect:
      type: object
      properties:
        HostName:
          allOf:
            - $ref: '#/components/schemas/HostName'
            - description: The host name to use in the redirect request.
        HttpRedirectCode:
          allOf:
            - $ref: '#/components/schemas/HttpRedirectCode'
            - description: The HTTP redirect code to use on the response. Not required if one of the siblings is present.
        Protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - description: Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
        ReplaceKeyPrefixWith:
          allOf:
            - $ref: '#/components/schemas/ReplaceKeyPrefixWith'
            - description: '<p>The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix <code>docs/</code> (objects in the <code>docs/</code> folder) to <code>documents/</code>, you can set a condition block with <code>KeyPrefixEquals</code> set to <code>docs/</code> and in the Redirect set <code>ReplaceKeyPrefixWith</code> to <code>/documents</code>. Not required if one of the siblings is present. Can be present only if <code>ReplaceKeyWith</code> is not provided.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
        ReplaceKeyWith:
          allOf:
            - $ref: '#/components/schemas/ReplaceKeyWith'
            - description: '<p>The specific object key to use in the redirect request. For example, redirect request to <code>error.html</code>. Not required if one of the siblings is present. Can be present only if <code>ReplaceKeyPrefixWith</code> is not provided.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
      description: 'Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.'
    ReplicaModificationsStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    ReplicaModifications:
      type: object
      required:
        - Status
      properties:
        Status:
          allOf:
            - $ref: '#/components/schemas/ReplicaModificationsStatus'
            - description: Specifies whether Amazon S3 replicates modifications on replicas.
      description: '<p>A filter that you can specify for selection for modifications on replicas. Amazon S3 doesn''t replicate replica modifications by default. In the latest version of replication configuration (when <code>Filter</code> is specified), you can specify this element and set the status to <code>Enabled</code> to replicate modifications on replicas. </p> <note> <p> If you don''t specify the <code>Filter</code> element, Amazon S3 assumes that the replication configuration is the earlier version, V1. In the earlier version, this element is not allowed.</p> </note>'
    ReplicationRuleFilter:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: '<p>An object key name prefix that identifies the subset of objects to which the rule applies.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
        Tag:
          allOf:
            - $ref: '#/components/schemas/Tag'
            - description: <p>A container for specifying a tag key and value. </p> <p>The rule applies only to objects that have the tag in their tag set.</p>
        And:
          allOf:
            - $ref: '#/components/schemas/ReplicationRuleAndOperator'
            - description: '<p>A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example: </p> <ul> <li> <p>If you specify both a <code>Prefix</code> and a <code>Tag</code> filter, wrap these filters in an <code>And</code> tag.</p> </li> <li> <p>If you specify a filter based on multiple tags, wrap the <code>Tag</code> elements in an <code>And</code> tag.</p> </li> </ul>'
      description: 'A filter that identifies the subset of objects to which the replication rule applies. A <code>Filter</code> must specify exactly one <code>Prefix</code>, <code>Tag</code>, or an <code>And</code> child element.'
    ReplicationRuleStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    SourceSelectionCriteria:
      type: object
      properties:
        SseKmsEncryptedObjects:
          allOf:
            - $ref: '#/components/schemas/SseKmsEncryptedObjects'
            - description: ' A container for filter information for the selection of Amazon S3 objects encrypted with Amazon Web Services KMS. If you include <code>SourceSelectionCriteria</code> in the replication configuration, this element is required. '
        ReplicaModifications:
          allOf:
            - $ref: '#/components/schemas/ReplicaModifications'
            - description: '<p>A filter that you can specify for selections for modifications on replicas. Amazon S3 doesn''t replicate replica modifications by default. In the latest version of replication configuration (when <code>Filter</code> is specified), you can specify this element and set the status to <code>Enabled</code> to replicate modifications on replicas. </p> <note> <p> If you don''t specify the <code>Filter</code> element, Amazon S3 assumes that the replication configuration is the earlier version, V1. In the earlier version, this element is not allowed</p> </note>'
      description: 'A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. Currently, Amazon S3 supports only the filter that you can specify for objects created with server-side encryption using a customer managed key stored in Amazon Web Services Key Management Service (SSE-KMS).'
    ReplicationRule:
      type: object
      required:
        - Status
        - Destination
      properties:
        ID:
          allOf:
            - $ref: '#/components/schemas/ID'
            - description: A unique identifier for the rule. The maximum value is 255 characters.
        Priority:
          allOf:
            - $ref: '#/components/schemas/Priority'
            - description: '<p>The priority indicates which rule has precedence whenever two or more replication rules conflict. Amazon S3 will attempt to replicate objects according to all replication rules. However, if there are two or more rules with the same destination bucket, then objects will be replicated according to the rule with the highest priority. The higher the number, the higher the priority. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html">Replication</a> in the <i>Amazon S3 User Guide</i>.</p>'
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - deprecated: true
              description: '<p>An object key name prefix that identifies the object or objects to which the rule applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket, specify an empty string. </p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
        Filter:
          $ref: '#/components/schemas/ReplicationRuleFilter'
        Status:
          allOf:
            - $ref: '#/components/schemas/ReplicationRuleStatus'
            - description: Specifies whether the rule is enabled.
        SourceSelectionCriteria:
          allOf:
            - $ref: '#/components/schemas/SourceSelectionCriteria'
            - description: 'A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. Currently, Amazon S3 supports only the filter that you can specify for objects created with server-side encryption using a customer managed key stored in Amazon Web Services Key Management Service (SSE-KMS).'
        ExistingObjectReplication:
          allOf:
            - $ref: '#/components/schemas/ExistingObjectReplication'
            - description: 'Optional configuration to replicate existing source bucket objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-what-is-isnot-replicated.html#existing-object-replication">Replicating Existing Objects</a> in the <i>Amazon S3 User Guide</i>. '
        Destination:
          allOf:
            - $ref: '#/components/schemas/Destination'
            - description: A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
        DeleteMarkerReplication:
          $ref: '#/components/schemas/DeleteMarkerReplication'
      description: Specifies which Amazon S3 objects to replicate and where to store the replicas.
    ReplicationRuleAndOperator:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: An object key name prefix that identifies the subset of objects to which the rule applies.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagSet'
            - xml:
                name: Tag
              description: An array of tags containing key and value pairs.
      description: '<p>A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. </p> <p>For example:</p> <ul> <li> <p>If you specify both a <code>Prefix</code> and a <code>Tag</code> filter, wrap these filters in an <code>And</code> tag. </p> </li> <li> <p>If you specify a filter based on multiple tags, wrap the <code>Tag</code> elements in an <code>And</code> tag.</p> </li> </ul>'
      xml:
        wrapped: false
    ReplicationTimeStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    RequestProgress:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/EnableRequestProgress'
            - description: 'Specifies whether periodic QueryProgress frames should be sent. Valid values: TRUE, FALSE. Default value: FALSE.'
      description: Container for specifying if periodic <code>QueryProgress</code> messages should be sent.
    RequestRoute:
      type: string
    RequestToken:
      type: string
    RestoreExpiryDate:
      type: string
      format: date-time
    RestoreOutputPath:
      type: string
    RestoreRequest:
      type: object
      properties:
        Days:
          allOf:
            - $ref: '#/components/schemas/Days'
            - description: '<p>Lifetime of the active copy in days. Do not use with restores that specify <code>OutputLocation</code>.</p> <p>The Days element is required for regular restores, and must not be provided for select requests.</p>'
        GlacierJobParameters:
          allOf:
            - $ref: '#/components/schemas/GlacierJobParameters'
            - description: S3 Glacier related parameters pertaining to this job. Do not use with restores that specify <code>OutputLocation</code>.
        Type:
          allOf:
            - $ref: '#/components/schemas/RestoreRequestType'
            - description: Type of restore request.
        Tier:
          allOf:
            - $ref: '#/components/schemas/Tier'
            - description: Retrieval tier at which the restore will be processed.
        Description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The optional description for the job.
        SelectParameters:
          allOf:
            - $ref: '#/components/schemas/SelectParameters'
            - description: Describes the parameters for Select job types.
        OutputLocation:
          allOf:
            - $ref: '#/components/schemas/OutputLocation'
            - description: Describes the location where the restore job's output is stored.
      description: Container for restore job parameters.
    RestoreObjectRequest:
      type: object
      title: RestoreObjectRequest
      properties:
        RestoreRequest:
          $ref: '#/components/schemas/RestoreRequest'
      xml:
        namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
    RoutingRule:
      type: object
      required:
        - Redirect
      properties:
        Condition:
          allOf:
            - $ref: '#/components/schemas/Condition'
            - description: 'A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the <code>/docs</code> folder, redirect to the <code>/documents</code> folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.'
        Redirect:
          allOf:
            - $ref: '#/components/schemas/Redirect'
            - description: 'Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return.'
      description: 'Specifies the redirect behavior and when a redirect is applied. For more information about routing rules, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html#advanced-conditional-redirects">Configuring advanced conditional redirects</a> in the <i>Amazon S3 User Guide</i>.'
    Transition:
      type: object
      properties:
        Date:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC.
        Days:
          allOf:
            - $ref: '#/components/schemas/Days'
            - description: Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
        StorageClass:
          allOf:
            - $ref: '#/components/schemas/TransitionStorageClass'
            - description: The storage class to which you want the object to transition.
      description: 'Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html">Transitioning Objects Using Amazon S3 Lifecycle</a> in the <i>Amazon S3 User Guide</i>.'
    Rule:
      type: object
      required:
        - Prefix
        - Status
      properties:
        Expiration:
          allOf:
            - $ref: '#/components/schemas/LifecycleExpiration'
            - description: Specifies the expiration for the lifecycle of the object.
        ID:
          allOf:
            - $ref: '#/components/schemas/ID'
            - description: Unique identifier for the rule. The value can't be longer than 255 characters.
        Prefix:
          allOf:
            - $ref: '#/components/schemas/Prefix'
            - description: '<p>Object key prefix that identifies one or more objects to which this rule applies.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML related object key constraints</a>.</p> </important>'
        Status:
          allOf:
            - $ref: '#/components/schemas/ExpirationStatus'
            - description: 'If <code>Enabled</code>, the rule is currently being applied. If <code>Disabled</code>, the rule is not currently being applied.'
        Transition:
          allOf:
            - $ref: '#/components/schemas/Transition'
            - description: 'Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html">Transitioning Objects Using Amazon S3 Lifecycle</a> in the <i>Amazon S3 User Guide</i>.'
        NoncurrentVersionTransition:
          $ref: '#/components/schemas/NoncurrentVersionTransition'
        NoncurrentVersionExpiration:
          $ref: '#/components/schemas/NoncurrentVersionExpiration'
        AbortIncompleteMultipartUpload:
          $ref: '#/components/schemas/AbortIncompleteMultipartUpload'
      description: 'Specifies lifecycle rules for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html">Put Bucket Lifecycle Configuration</a> in the <i>Amazon S3 API Reference</i>. For examples, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html#API_PutBucketLifecycleConfiguration_Examples">Put Bucket Lifecycle Configuration Examples</a>.'
    UserMetadata:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/MetadataEntry'
          - xml:
              name: MetadataEntry
    ScanRange:
      type: object
      properties:
        Start:
          allOf:
            - $ref: '#/components/schemas/Start'
            - description: 'Specifies the start of the byte range. This parameter is optional. Valid values: non-negative integers. The default value is 0. If only <code>start</code> is supplied, it means scan from that point to the end of the file. For example, <code>&lt;scanrange&gt;&lt;start&gt;50&lt;/start&gt;&lt;/scanrange&gt;</code> means scan from byte 50 until the end of the file.'
        End:
          allOf:
            - $ref: '#/components/schemas/End'
            - description: 'Specifies the end of the byte range. This parameter is optional. Valid values: non-negative integers. The default value is one less than the size of the object being queried. If only the End parameter is supplied, it is interpreted to mean scan the last N bytes of the file. For example, <code>&lt;scanrange&gt;&lt;end&gt;50&lt;/end&gt;&lt;/scanrange&gt;</code> means scan the last 50 bytes.'
      description: 'Specifies the byte range of the object to get the records from. A record is processed when its first byte is contained by the range. This parameter is optional, but when specified, it must not be empty. See RFC 2616, Section 14.35.1 about how to specify the start and end of the range.'
    StatsEvent:
      type: object
      properties:
        Details:
          allOf:
            - $ref: '#/components/schemas/Stats'
            - description: The Stats event details.
      description: Container for the Stats Event.
    SelectObjectContentEventStream:
      type: object
      properties:
        Records:
          allOf:
            - $ref: '#/components/schemas/RecordsEvent'
            - description: The Records Event.
        Stats:
          allOf:
            - $ref: '#/components/schemas/StatsEvent'
            - description: The Stats Event.
        Progress:
          allOf:
            - $ref: '#/components/schemas/ProgressEvent'
            - description: The Progress Event.
        Cont:
          allOf:
            - $ref: '#/components/schemas/ContinuationEvent'
            - description: The Continuation Event.
        End:
          allOf:
            - $ref: '#/components/schemas/EndEvent'
            - description: The End Event.
      description: The container for selecting objects from a content event stream.
    SelectObjectContentRequest:
      type: object
      required:
        - Expression
        - ExpressionType
        - InputSerialization
        - OutputSerialization
      title: SelectObjectContentRequest
      properties:
        Expression:
          allOf:
            - $ref: '#/components/schemas/Expression'
            - description: The expression that is used to query the object.
        ExpressionType:
          allOf:
            - $ref: '#/components/schemas/ExpressionType'
            - description: 'The type of the provided expression (for example, SQL).'
        RequestProgress:
          allOf:
            - $ref: '#/components/schemas/RequestProgress'
            - description: Specifies if periodic request progress information should be enabled.
        InputSerialization:
          allOf:
            - $ref: '#/components/schemas/InputSerialization'
            - description: Describes the format of the data in the object that is being queried.
        OutputSerialization:
          allOf:
            - $ref: '#/components/schemas/OutputSerialization'
            - description: Describes the format of the data that you want Amazon S3 to return in response.
        ScanRange:
          allOf:
            - $ref: '#/components/schemas/ScanRange'
            - description: '<p>Specifies the byte range of the object to get the records from. A record is processed when its first byte is contained by the range. This parameter is optional, but when specified, it must not be empty. See RFC 2616, Section 14.35.1 about how to specify the start and end of the range.</p> <p> <code>ScanRange</code>may be used in the following ways:</p> <ul> <li> <p> <code>&lt;scanrange&gt;&lt;start&gt;50&lt;/start&gt;&lt;end&gt;100&lt;/end&gt;&lt;/scanrange&gt;</code> - process only the records starting between the bytes 50 and 100 (inclusive, counting from zero)</p> </li> <li> <p> <code>&lt;scanrange&gt;&lt;start&gt;50&lt;/start&gt;&lt;/scanrange&gt;</code> - process only the records starting after the byte 50</p> </li> <li> <p> <code>&lt;scanrange&gt;&lt;end&gt;50&lt;/end&gt;&lt;/scanrange&gt;</code> - process only the records within the last 50 bytes of the file.</p> </li> </ul>'
      description: 'Request to filter the contents of an Amazon S3 object based on a simple Structured Query Language (SQL) statement. In the request, along with the SQL expression, you must specify a data serialization format (JSON or CSV) of the object. Amazon S3 uses this to parse object data into records. It returns only records that match the specified SQL expression. You must also specify the data serialization format for the response. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectSELECTContent.html">S3Select API Documentation</a>.'
    ServerSideEncryptionByDefault:
      type: object
      required:
        - SSEAlgorithm
      properties:
        SSEAlgorithm:
          allOf:
            - $ref: '#/components/schemas/ServerSideEncryption'
            - description: Server-side encryption algorithm to use for the default encryption.
        KMSMasterKeyID:
          allOf:
            - $ref: '#/components/schemas/SSEKMSKeyId'
            - description: '<p>Amazon Web Services Key Management Service (KMS) customer Amazon Web Services KMS key ID to use for the default encryption. This parameter is allowed if and only if <code>SSEAlgorithm</code> is set to <code>aws:kms</code>.</p> <p>You can specify the key ID or the Amazon Resource Name (ARN) of the KMS key. If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log. </p> <p>If you are using encryption with cross-account or Amazon Web Services service operations you must use a fully qualified KMS key ARN. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy">Using encryption for cross-account operations</a>. </p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> </ul> <important> <p>Amazon S3 only supports symmetric encryption KMS keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Asymmetric keys in Amazon Web Services KMS</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p> </important>'
      description: 'Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn''t specify any server-side encryption, this default encryption will be applied. If you don''t specify a customer managed key at configuration, Amazon S3 automatically creates an Amazon Web Services KMS key in your Amazon Web Services account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this KMS key for SSE-KMS. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html">PUT Bucket encryption</a> in the <i>Amazon S3 API Reference</i>.'
    ServerSideEncryptionRule:
      type: object
      properties:
        ApplyServerSideEncryptionByDefault:
          allOf:
            - $ref: '#/components/schemas/ServerSideEncryptionByDefault'
            - description: 'Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn''t specify any server-side encryption, this default encryption will be applied.'
        BucketKeyEnabled:
          allOf:
            - $ref: '#/components/schemas/BucketKeyEnabled'
            - description: '<p>Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the <code>BucketKeyEnabled</code> element to <code>true</code> causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html">Amazon S3 Bucket Keys</a> in the <i>Amazon S3 User Guide</i>.</p>'
      description: Specifies the default server-side encryption configuration.
    SseKmsEncryptedObjects:
      type: object
      required:
        - Status
      properties:
        Status:
          allOf:
            - $ref: '#/components/schemas/SseKmsEncryptedObjectsStatus'
            - description: Specifies whether Amazon S3 replicates objects created with server-side encryption using an Amazon Web Services KMS key stored in Amazon Web Services Key Management Service.
      description: A container for filter information for the selection of S3 objects encrypted with Amazon Web Services KMS.
    SseKmsEncryptedObjectsStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    Stats:
      type: object
      properties:
        BytesScanned:
          allOf:
            - $ref: '#/components/schemas/BytesScanned'
            - description: The total number of object bytes scanned.
        BytesProcessed:
          allOf:
            - $ref: '#/components/schemas/BytesProcessed'
            - description: The total number of uncompressed object bytes processed.
        BytesReturned:
          allOf:
            - $ref: '#/components/schemas/BytesReturned'
            - description: The total number of bytes of records payload data returned.
      description: Container for the stats details.
    StorageClassAnalysisDataExport:
      type: object
      required:
        - OutputSchemaVersion
        - Destination
      properties:
        OutputSchemaVersion:
          allOf:
            - $ref: '#/components/schemas/StorageClassAnalysisSchemaVersion'
            - description: The version of the output schema to use when exporting data. Must be <code>V_1</code>.
        Destination:
          allOf:
            - $ref: '#/components/schemas/AnalyticsExportDestination'
            - description: The place to store the data for an analysis.
      description: Container for data related to the storage class analysis for an Amazon S3 bucket for export.
    StorageClassAnalysisSchemaVersion:
      type: string
      enum:
        - V_1
    Value:
      type: string
    TargetGrant:
      type: object
      properties:
        Grantee:
          allOf:
            - $ref: '#/components/schemas/Grantee'
            - description: Container for the person being granted permissions.
        Permission:
          allOf:
            - $ref: '#/components/schemas/BucketLogsPermission'
            - description: Logging permissions assigned to the grantee for the bucket.
      description: '<p>Container for granting information.</p> <p>Buckets that use the bucket owner enforced setting for Object Ownership don''t support target grants. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-server-access-logging.html#grant-log-delivery-permissions-general">Permissions server access log delivery</a> in the <i>Amazon S3 User Guide</i>.</p>'
    Tiering:
      type: object
      required:
        - Days
        - AccessTier
      properties:
        Days:
          allOf:
            - $ref: '#/components/schemas/IntelligentTieringDays'
            - description: The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
        AccessTier:
          allOf:
            - $ref: '#/components/schemas/IntelligentTieringAccessTier'
            - description: 'S3 Intelligent-Tiering access tier. See <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access">Storage class for automatically optimizing frequently and infrequently accessed objects</a> for a list of access tiers in the S3 Intelligent-Tiering storage class.'
      description: 'The S3 Intelligent-Tiering storage class is designed to optimize storage costs by automatically moving data to the most cost-effective storage access tier, without additional operational overhead.'
    TopicArn:
      type: string
    TopicConfiguration:
      type: object
      required:
        - TopicArn
        - Events
      properties:
        Id:
          $ref: '#/components/schemas/NotificationId'
        TopicArn:
          allOf:
            - $ref: '#/components/schemas/TopicArn'
            - xml:
                name: Topic
              description: The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
        Events:
          allOf:
            - $ref: '#/components/schemas/EventList'
            - xml:
                name: Event
              description: 'The Amazon S3 bucket event about which to send notifications. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Supported Event Types</a> in the <i>Amazon S3 User Guide</i>.'
        Filter:
          $ref: '#/components/schemas/NotificationConfigurationFilter'
      description: A container for specifying the configuration for publication of messages to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events.
    UploadPartCopyRequest:
      type: object
      title: UploadPartCopyRequest
      properties: {}
    UploadPartRequest:
      type: object
      title: UploadPartRequest
      properties:
        Body:
          allOf:
            - $ref: '#/components/schemas/Body'
            - description: Object data.
    WriteGetObjectResponseRequest:
      type: object
      title: WriteGetObjectResponseRequest
      properties:
        Body:
          allOf:
            - $ref: '#/components/schemas/Body'
            - description: The object data.
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - xml:
                name: x-amz-meta-
              description: A map of metadata to store with the object in S3.
security:
  - hmac: []
