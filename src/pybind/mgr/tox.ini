[tox]
envlist =
    flake8
    mypy
    jinjalint
    nooptional
    check-black
    check-isort
    py3
skipsdist = true
skip_missing_interpreters = true

[pytest]
log_level=NOTSET
norecursedirs = dashboard rook/rook_client rook/rook-client-python

[base]
deps =
    -rrequirements.txt

[pylint]
# Allow similarity/code duplication detection
jobs = 1
addopts = -rn --rcfile=.pylintrc --jobs={[pylint]jobs}

[flake8]
max-line-length = 100
ignore =
    E501,
    W503,
exclude =
    .tox \
    .vagrant \
    __pycache__ \
    *.pyc \
    templates \
    .eggs
statistics = True

[autopep8]
addopts =
    --max-line-length {[flake8]max-line-length} \
    --exclude "{[flake8]exclude}" \
    --in-place \
    --recursive \
    --ignore-local-config

[testenv]
setenv =
    UNITTEST = true
    PYTHONPATH = $PYTHONPATH:..
deps =
    behave
    -rrequirements.txt
    -rrook/requirements.txt
commands =
    pytest --doctest-modules {posargs:}

[testenv:nooptional]
setenv =
    UNITTEST = true
    PYTHONPATH = $PYTHONPATH:..
deps =
    -rrequirements.txt
commands =
    pytest {posargs:cephadm/tests/test_ssh.py}


[testenv:{,py37-,py38-,py39-,py310-}mypy]
setenv =
    MYPYPATH = {toxinidir}/..:{toxinidir}/../../python-common
passenv =
    MYPYPATH
deps =
    -rrequirements.txt
    -c{toxinidir}/../../mypy-constrains.txt
    mypy
    types-backports
    types-pkg_resources
    types-python-dateutil
    types-requests
    types-PyYAML
    types-jwt
commands =
    mypy --config-file=../../mypy.ini \
           -m alerts \
           -m balancer \
           -m cephadm \
           -m crash \
           -m dashboard \
           -m devicehealth \
           -m diskprediction_local \
           -m hello \
           -m influx \
           -m iostat \
           -m localpool \
           -m mds_autoscaler \
           -m mgr_module \
           -m mgr_util \
           -m mirroring \
           -m nfs \
           -m orchestrator \
           -m pg_autoscaler \
           -m progress \
           -m prometheus \
           -m rbd_support \
           -m rgw \
           -m rook \
           -m selftest \
           -m smb \
           -m snap_schedule \
           -m stats \
           -m status \
           -m telegraf \
           -m telemetry \
           -m test_orchestrator \
           -m volumes \
           -m zabbix


[testenv:test]
setenv = {[testenv]setenv}
deps = {[testenv]deps}
commands = {[testenv]commands}


[testenv:pylint]
deps =
    pylint
modules =
    cli_api
commands =
    pylint {[pylint]addopts} {posargs:{[testenv:pylint]modules}}

[testenv:flake8]
deps =
    flake8
allowlist_externals = bash
modules =
    alerts \
    balancer \
    cephadm \
    cli_api \
    crash \
    devicehealth \
    diskprediction_local \
    hello \
    iostat \
    localpool \
    mgr_module.py \
    mgr_util.py \
    nfs \
    object_format.py \
    orchestrator \
    prometheus \
    rbd_support \
    rgw \
    selftest \
    smb
commands =
    flake8 --config=tox.ini {posargs} \
      {posargs:{[testenv:flake8]modules}}
    bash -c 'test $(git ls-files cephadm | grep ".py$" | grep -v tests | xargs grep "docker.io" | wc -l) == 3'
    bash -c 'test $(git ls-files cephadm | grep ".py$" | grep -v tests | xargs grep "quay.io" | wc -l) == 26'

[testenv:jinjalint]
deps =
    jinjaninja
commands =
    jinja-ninja cephadm/templates


# OPT-IN formatting with 'black'
#  add your module to the modules list below to use automated formatting
[black]
deps = black>=23,<24
options = -l78 -t py36 --skip-string-normalization
modules = smb

[testenv:check-black]
deps = {[black]deps}
commands =
    black --check -q {[black]options} {[black]modules}

[testenv:format-black]
deps = {[black]deps}
commands =
    black {[black]options} {[black]modules}


# OPT-IN import style formatting with 'isort'
#  add your module to the modules list below to use automated import sorting
[isortcfg]
deps = isort
modules = smb

[isort]
profile = black
line_length = 78
known_first_party = ceph,rados,rbd,cephfs,mgr,mgr_module,mgr_util,object_format
known_typing = typing
sections = FUTURE,TYPING,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER

[testenv:check-isort]
deps = {[isortcfg]deps}
commands =
    isort --check-only {[isortcfg]modules}

[testenv:format-isort]
deps = {[isortcfg]deps}
commands =
    isort {[isortcfg]modules}
