{
"version": 1.0,
"merge": {
    "operations":{
        "DeleteBucketNotificationConfiguration":{
            "name":"DeleteBucketNotificationConfiguration",
            "http":{
                "method":"DELETE",
                "requestUri":"/{Bucket}?notification",
                "responseCode":204
            },
            "input":{"shape":"DeleteBucketNotificationConfigurationRequest"},
            "documentationUrl":"https://docs.ceph.com/docs/master/radosgw/s3/bucketops/#delete-notification",
            "documentation":"<p>Deletes the notification configuration from the bucket.</p>"
        },
        "PostBucketLogging":{
            "name":"PostBucketLogging",
            "http":{
                "method":"POST",
                "requestUri":"/{Bucket}?logging",
                "responseCode":201
            },
            "input":{"shape":"PostBucketLoggingRequest"},
            "documentationUrl":"https://docs.ceph.com/docs/master/radosgw/s3/bucketops/#post-bucket-logging",
            "documentation":"<p>Flushes the logging objects of the buckets.</p>"
        },
        "GetUsageStats":{
            "name":"GetUsageStats",
            "http":{
                "method":"GET",
                "requestUri":"/?usage",
                "responseCode":200
            },
            "output": {"shape": "GetUsageStatsOutput"},
            "documentationUrl":"https://docs.ceph.com/docs/master/radosgw/s3/serviceops#get-usage-stats",
            "documentation":"<p>Get usage stats for the user</p>"
        }
    },
    "shapes": {
        "ListObjectsRequest": {
            "members": {
                "AllowUnordered": {
                    "shape":"AllowUnordered",
                    "documentation":"<p>Allow the listing results to be returned in unsorted order. This may be faster when listing very large buckets.</p>",
                    "location":"querystring",
                    "locationName":"allow-unordered"
                }
            }
        },
        "ListObjectsV2Request": {
            "members": {
                "AllowUnordered": {
                    "shape":"AllowUnordered",
                    "documentation":"<p>Allow the listing results to be returned in unsorted order. This may be faster when listing very large buckets.</p>",
                    "location":"querystring",
                    "locationName":"allow-unordered"
                }
            }
        },
        "ReplicationRule":{
            "members":{
		"Source": {
		    "shape":"S3RepSource",
		    "documentation":"<p>A container for information about the replication source.<p>",
		    "locationName":"Source"
		}
	    }
	},
	"S3RepSource": {
	    "type": "structure",
	    "members": {
                "Zones": {
                    "shape":"ZoneList",
                    "documentation":"<p>Array of replication source zone names.</p>",
		    "locationName":"Zone"
                }
            }
        },
	"Destination": {
	    "members": {
                "Zones": {
                    "shape":"ZoneList",
                    "documentation":"<p>Array of replication destination zone names.</p>",
		    "locationName":"Zone"
                }
            }
        },
	"ZoneList": {
	    "type":"list",
	    "member":{"shape":"Zone"},
	    "flattened":true
	},
        "Zone":{"type":"string"},
        "AllowUnordered":{"type":"boolean"},
        "PutObjectRequest": {
            "members": {
                "AppendPosition": {
                    "shape":"AppendPosition",
                    "documentation": "<p>Position to allow appending</p>",
                    "location": "querystring",
                    "locationName": "position"
                },
                "Append": {
                    "shape":"Append",
                    "documentation":"<p>Append Object</p>",
                    "location": "querystring",
                    "locationName": "append"
                }
            }
        },
        "Append": {"type":"boolean"},
        "AppendPosition":{"type":"integer"},
        "PutObjectOutput": {
            "members": {
                "AppendPosition": {
                    "shape":"AppendPosition",
                    "documentation": "<p>Position to allow appending</p>",
                    "location": "header",
                    "locationName": "x-rgw-next-append-position",
                    "documentationUrl":"https://docs.ceph.com/docs/master/radosgw/s3/objectops/#append-object"
                }
            }
        },
        "GetBucketNotificationConfigurationRequest":{
            "type":"structure",
            "required":["Bucket"],
            "members":{
                "Bucket":{
                    "shape":"BucketName",
                    "documentation":"<p>Name of the bucket to get the notifications configuration for.</p>",
                    "location":"uri",
                    "locationName":"Bucket"
                },
                "Notification":{
                    "shape":"NotificationId",
                    "documentation":"<p>Id of the specific notification on the bucket for which the configuration should be retrieved.</p>",
                    "location":"querystring",
                    "locationName":"notification-id"
                }
            }
        },
        "DeleteBucketNotificationConfigurationRequest":{
            "type":"structure",
            "required":["Bucket"],
            "members":{
                "Bucket":{
                    "shape":"BucketName",
                    "documentation":"<p>Name of the bucket to delete the notifications configuration from.</p>",
                    "location":"uri",
                    "locationName":"Bucket"
                },
                "Notification":{
                    "shape":"NotificationId",
                    "documentation":"<p>Id of the specific notification on the bucket to be deleted.</p>",
                    "location":"querystring",
                    "locationName":"notification-id"
                }
            }
        },
        "PostBucketLoggingRequest":{
            "type":"structure",
            "required":["Bucket"],
            "members":{
                "Bucket":{
                    "shape":"BucketName",
                    "documentation":"<p>Name of the bucket to flush its logging objects.</p>",
                    "location":"uri",
                    "locationName":"Bucket"
                }
            }
        },
        "FilterRule":{
            "type":"structure",
            "members":{
                "Name":{
                    "shape":"FilterRuleName",
                    "documentation":"<p>The object key name prefix, suffix or regex identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are supported.</p>"
                },
                "Value":{
                    "shape":"FilterRuleValue",
                    "documentation":"<p>The value that the filter searches for in object key names.</p>"
                }
            },
            "documentation":"<p>Specifies the Amazon S3 object key name to filter on and whether to filter on the suffix, prefix or regex of the key name.</p>"
        },
        "FilterRuleName":{
            "type":"string",
            "enum":[
                "prefix",
                "suffix",
                "regex"
            ]
        },
        "NotificationConfigurationFilter":{
            "type":"structure",
            "members":{
                "Key":{
                    "shape":"S3KeyFilter",
                    "documentation":"<p/>",
                    "locationName":"S3Key"
                },
                "Metadata":{
                    "shape":"S3MetadataFilter",
                    "documentation":"<p/>",
                    "locationName":"S3Metadata"
                },
                "Tags":{
                    "shape":"S3TagsFilter",
                    "documentation":"<p/>",
                    "locationName":"S3Tags"
                }

            },
            "documentation":"<p>Specifies object key name filtering rules. For information about key name filtering, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">Configuring Event Notifications</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>"
        },
        "S3KeyFilter":{
            "type":"structure",
            "members":{
                "FilterRules":{
                    "shape":"FilterRuleList",
                    "documentation":"<p/>",
                    "locationName":"FilterRule"
                }
            },
            "documentation":"<p>A container for object key name prefix, suffix and regex filtering rules.</p>"
        },
        "S3MetadataFilter":{
            "type":"structure",
            "members":{
                "FilterRules":{
                    "shape":"FilterRuleList",
                    "documentation":"<p/>",
                    "locationName":"FilterRule"
                }
            },
            "documentation":"<p>A container for metadata filtering rules.</p>"
        },
        "S3TagsFilter":{
            "type":"structure",
            "members":{
                "FilterRules":{
                    "shape":"FilterRuleList",
                    "documentation":"<p/>",
                    "locationName":"FilterRule"
                }
            },
            "documentation":"<p>A container for object tags filtering rules.</p>"
        },
        "GetUsageStatsOutput": {
            "type": "structure",
            "members": {
                "Summary": {
                    "shape":"UsageStatsSummary",
                    "documentation": "<p/>"
                }
            }
        },
        "UsageStatsSummary": {
            "type": "structure",
            "members": {
                "QuotaMaxBytes":{"shape":"QuotaMaxBytes"},
                "QuotaMaxBuckets":{"shape": "QuotaMaxBuckets"},
                "QuotaMaxObjCount":{"shape":"QuotaMaxObjCount"},
                "QuotaMaxBytesPerBucket":{"shape":"QuotaMaxBytesPerBucket"},
                "QuotaMaxObjCountPerBucket":{"shape":"QuotaMaxObjCountPerBucket"},
                "TotalBytes":{"shape":"TotalBytes"},
                "TotalBytesRounded":{"shape":"TotalBytesRounded"},
                "TotalEntries":{"shape":"TotalEntries"}
            }
        },
        "QuotaMaxBytes":{"type":"integer"},
        "QuotaMaxBuckets":{"type": "integer"},
        "QuotaMaxObjCount":{"type":"integer"},
        "QuotaMaxBytesPerBucket":{"type":"integer"},
        "QuotaMaxObjCountPerBucket":{"type":"integer"},
        "TotalBytesRounded":{"type":"integer"},
        "TotalBytes":{"type":"integer"},
        "TotalEntries":{"type":"integer"},
        "LoggingEnabled":{
            "type":"structure",
            "required":[
                "TargetBucket",
                "TargetPrefix"
            ],
            "members":{
                "TargetBucket":{
                    "shape":"TargetBucket",
                    "documentation":"<p>Specifies the bucket where you want to store server access logs. You can have your logs delivered to any bucket that you own. You can also configure multiple buckets to deliver their logs to the same target bucket. In this case, you should choose a different <code>TargetPrefix</code> for each source bucket so that the delivered log files can be distinguished by key.</p>"
                },
                "TargetGrants":{
                    "shape":"TargetGrants",
                    "documentation":"<p>Container for granting information.</p> <p>Should be used when the write permissions to the tagert bucket should eb different than the permissions of the user performing the operation thta needs to be logged. This is usually used in cased of batched logging. see: <code>RecordBatchSize</code>.</p>"
                },
                "TargetPrefix":{
                    "shape":"TargetPrefix",
                    "documentation":"<p>A prefix for all log object keys. If you store log files from multiple buckets in a single bucket, you can use a prefix to distinguish which log files came from which bucket.</p>"
                },
                "TargetObjectKeyFormat":{
                    "shape":"TargetObjectKeyFormat",
                    "documentation":"<p>key format for log objects.</p>"
                },
                "ObjectRollTime":{
                    "shape":"ObjectRollTime",
                    "documentation":"<p>time in seconds to move the log object to the target bucket and start another log object.</p>"
                },
                "LoggingType":{
                    "shape":"LoggingType",
                    "documentation":"<p>use Standard log type to log all bucket operations i nthe standard format. use Journal log type to log only creations and deletion of objects in more compact format.</p>"
                },
                "RecordsBatchSize":{
                    "shape":"RecordsBatchSize",
                    "documentation":"indicates how many records to batch in memory before writing to the object. if set to zero, records are written syncronously to the object. if <code>ObjectRollTime</code>e is reached, the batch of records will be written to the object regardless of the number of records. </p>"
                }
            },
            "documentation":"<p>Describes where logs are stored the prefix assigned to all log object keys for a bucket, and their format. also, the level the delivery guarantee of the records.</p>"
        },
        "TargetObjectKeyFormat":{
      	    "type":"structure",
            "members":{
                "SimplePrefix":{
                    "shape":"SimplePrefix",
                    "documentation":"<p>To use the simple format for S3 keys for log objects. To specify SimplePrefix format, set SimplePrefix to {}.</p>",
                    "locationName":"SimplePrefix"
                },
                "PartitionedPrefix":{
                    "shape":"PartitionedPrefix",
                    "documentation":"<p>Partitioned S3 key for log objects.</p>",
                    "locationName":"PartitionedPrefix"
                }
            },
            "documentation":"<p>Key format for log objects. Only one format, PartitionedPrefix or SimplePrefix, is allowed.</p>"
        },
        "SimplePrefix":{
          "type":"structure",
          "members":{
          },
          "documentation":"<p>To use simple format for S3 keys for log objects, set SimplePrefix to an empty object.</p> <p> <code>[DestinationPrefix][YYYY]-[MM]-[DD]-[hh]-[mm]-[ss]-[UniqueString]</code> </p>",
          "locationName":"SimplePrefix"
        },
        "PartitionDateSource":{
          "type":"string",
          "enum":[
            "EventTime",
            "DeliveryTime"
          ]
        },
        "PartitionedPrefix":{
          "type":"structure",
          "members":{
            "PartitionDateSource":{
              "shape":"PartitionDateSource",
              "documentation":"<p>Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.</p>"
            }
          },
          "documentation":"<p>Amazon S3 keys for log objects are partitioned in the following format:</p> <p> <code>[DestinationPrefix][SourceAccountId]/[SourceRegion]/[SourceBucket]/[YYYY]/[MM]/[DD]/[YYYY]-[MM]-[DD]-[hh]-[mm]-[ss]-[UniqueString]</code> </p> <p>PartitionedPrefix defaults to EventTime delivery when server access logs are delivered.</p>",
          "locationName":"PartitionedPrefix"
        },
        "ObjectRollTime":{"type":"integer"},
        "RecordsBatchSize":{"type":"integer"},
        "LoggingType":{
            "type":"string",
            "enum": [
                "Standard",
                "Journal"
            ]
        }
    },
    "documentation":"<p/>"
}
}
